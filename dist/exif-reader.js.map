{"version":3,"file":"exif-reader.js","mappings":"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","sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/webpack/runtime/define property getters","webpack://ExifReader/webpack/runtime/hasOwnProperty shorthand","webpack://ExifReader/webpack/runtime/make namespace object","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/dataview.js","webpack://ExifReader/./src/constants.js","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/image-header-jpeg.js","webpack://ExifReader/./src/image-header-png.js","webpack://ExifReader/./src/image-header-heic.js","webpack://ExifReader/./src/image-header-webp.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/image-header-tiff.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tag-names-common.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/tag-names-mpf-ifd.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/file-tags.js","webpack://ExifReader/./src/jfif-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/text-decoder.js","webpack://ExifReader/./src/tag-decoder.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/dom-parser.js","webpack://ExifReader/./src/icc-tag-names.js","webpack://ExifReader/./src/icc-tags.js","webpack://ExifReader/./src/png-file-tags.js","webpack://ExifReader/./src/png-text-tags.js","webpack://ExifReader/./src/png-tags.js","webpack://ExifReader/./src/vp8x-tags.js","webpack://ExifReader/./src/thumbnail.js","webpack://ExifReader/./src/errors.js","webpack://ExifReader/./src/exif-reader.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        if (typeof image === 'string') {\n            // This only happens during the build tests using Node 16+ (npm run test:build).\n            return btoa(image);\n        }\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== undefined) { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n\nexport function dataUriToBuffer(dataUri) {\n    const data = dataUri.substring(dataUri.indexOf(',') + 1);\n\n    if (dataUri.indexOf(';base64') !== -1) {\n        if (typeof atob !== 'undefined') {\n            return Uint8Array.from(atob(data), (char) => char.charCodeAt(0)).buffer;\n        }\n        if (typeof Buffer === 'undefined') {\n            return undefined;\n        }\n        if (typeof Buffer.from !== undefined) { // eslint-disable-line no-undef\n            return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n        }\n        return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n    }\n\n    const decodedData = decodeURIComponent(data);\n    if (typeof Buffer !== 'undefined') {\n        if (typeof Buffer.from !== undefined) { // eslint-disable-line no-undef\n            return Buffer.from(decodedData); // eslint-disable-line no-undef\n        }\n        return new Buffer(decodedData); // eslint-disable-line no-undef\n    }\n    return Uint8Array.from(decodedData, (char) => char.charCodeAt(0)).buffer;\n}\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_WEBP: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else if (isFillByte(dataView, appMarkerPosition)) {\n            appMarkerPosition++;\n            continue;\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isFillByte(dataView, appMarkerPosition) {\n    return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        } else if (isPngTextChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n            if (!offsets.pngTextChunks) {\n                offsets.pngTextChunks = [];\n            }\n            offsets.pngTextChunks.push({\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n                type: chunkType,\n                offset: offset + PNG_CHUNK_DATA_OFFSET\n            });\n        } else if (isPngExifChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (isPngChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            if (!offsets.pngChunkOffsets) {\n                offsets.pngChunkOffsets = [];\n            }\n            offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_INTERNATIONAL_TEXT = 'iTXt';\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_INTERNATIONAL_TEXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isPngTextChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_TEXT = 'tEXt';\n    const PNG_CHUNK_TYPE_ITXT = 'iTXt';\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return chunkType === PNG_CHUNK_TYPE_TEXT || chunkType === PNG_CHUNK_TYPE_ITXT;\n}\n\nfunction isPngExifChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\n\nfunction isPngChunk(dataView, offset) {\n    const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_ID = 'ftyp';\n    const HEIC_ID_OFFSET = 4;\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n    const HEIC_MAJOR_BRAND_LENGTH = 4;\n\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_ICC) {\n        const {offset: metaOffset, length: metaLength} = findMetaAtom(dataView);\n        if (metaOffset === undefined) {\n            return {hasAppMarkers: false};\n        }\n\n        const metaEndOffset = Math.min(metaOffset + metaLength, dataView.byteLength);\n        const {exifItemOffset, ilocOffset, colrOffset} = findMetaItems(dataView, metaOffset, metaEndOffset);\n\n        const exifOffset = findExifOffset(dataView, exifItemOffset, ilocOffset, metaEndOffset);\n        const iccChunks = findIccChunks(dataView, colrOffset, metaEndOffset);\n        return {\n            hasAppMarkers: (exifOffset !== undefined) || (iccChunks !== undefined),\n            tiffHeaderOffset: exifOffset,\n            iccChunks\n        };\n    }\n\n    return {hasAppMarkers: false};\n}\n\nfunction findMetaAtom(dataView) {\n    const ATOM_LENGTH_SIZE = 4;\n    const ATOM_TYPE_SIZE = 4;\n    const ATOM_MIN_LENGTH = 8;\n    const ATOM_TYPE_OFFSET = 4;\n\n    let offset = 0;\n\n    while (offset + ATOM_LENGTH_SIZE + ATOM_TYPE_SIZE <= dataView.byteLength) {\n        const atomLength = getAtomLength(dataView, offset);\n        if (atomLength >= ATOM_MIN_LENGTH) {\n            const atomType = getStringFromDataView(dataView, offset + ATOM_TYPE_OFFSET, ATOM_TYPE_SIZE);\n            if (atomType === 'meta') {\n                return {\n                    offset,\n                    length: atomLength\n                };\n            }\n        }\n\n        offset += atomLength;\n    }\n\n    return {\n        offset: undefined,\n        length: 0\n    };\n}\n\nfunction getAtomLength(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const atomLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(atomLength)) {\n        return dataView.byteLength - offset;\n    }\n    if (hasExtendedSize(atomLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_LOW_OFFSET);\n        }\n    }\n\n    return atomLength;\n}\n\nfunction extendsToEndOfFile(atomLength) {\n    return atomLength === 0;\n}\n\nfunction hasExtendedSize(atomLength) {\n    return atomLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_OFFSET) === 0;\n}\n\nfunction findMetaItems(dataView, offset, metaEndOffset) {\n    const STRING_SIZE = 4;\n    const ITEM_INDEX_REL_OFFSET = -4;\n    const offsets = {\n        ilocOffset: undefined,\n        exifItemOffset: undefined,\n        colrOffset: undefined\n    };\n\n    while ((offset + STRING_SIZE <= metaEndOffset)\n        && (!offsets.ilocOffset || !offsets.exifItemOffset || !offsets.colrOffset)) {\n        const itemName = getStringFromDataView(dataView, offset, STRING_SIZE);\n        if (Constants.USE_EXIF && (itemName === 'iloc')) {\n            offsets.ilocOffset = offset;\n        } else if (Constants.USE_EXIF && (itemName === 'Exif')) {\n            offsets.exifItemOffset = offset + ITEM_INDEX_REL_OFFSET;\n        } else if (Constants.USE_ICC && (itemName === 'colr')) {\n            offsets.colrOffset = offset + ITEM_INDEX_REL_OFFSET;\n        }\n\n        offset++;\n    }\n\n    return offsets;\n}\n\nfunction findExifOffset(dataView, exifItemOffset, offset, metaEndOffset) {\n    const EXIF_ITEM_OFFSET_SIZE = 2;\n    const ILOC_DATA_OFFSET = 12;\n    const EXIF_POINTER_OFFSET = 8;\n    const EXIF_POINTER_SIZE = 4;\n    const EXIF_PREFIX_LENGTH_OFFSET = 4;\n    const ILOC_ITEM_SIZE = 16;\n\n    if (!offset || !exifItemOffset || (exifItemOffset + EXIF_ITEM_OFFSET_SIZE > metaEndOffset)) {\n        return undefined;\n    }\n\n    const exifItemIndex = dataView.getUint16(exifItemOffset);\n    offset += ILOC_DATA_OFFSET;\n\n    while (offset + ILOC_ITEM_SIZE <= metaEndOffset) {\n        const itemIndex = dataView.getUint16(offset);\n        if (itemIndex === exifItemIndex) {\n            const exifPointer = dataView.getUint32(offset + EXIF_POINTER_OFFSET);\n            if (exifPointer + EXIF_POINTER_SIZE <= dataView.byteLength) {\n                const exifOffset = dataView.getUint32(exifPointer);\n                const prefixLength = exifOffset + EXIF_PREFIX_LENGTH_OFFSET;\n                return exifPointer + prefixLength;\n            }\n        }\n        offset += ILOC_ITEM_SIZE;\n    }\n\n    return undefined;\n}\n\nfunction findIccChunks(dataView, offset, metaEndOffset) {\n    const ITEM_TYPE_OFFSET = 8;\n    const ITEM_TYPE_SIZE = 4;\n    const ITEM_CONTENT_OFFSET = 12;\n\n    if (!offset || (offset + ITEM_CONTENT_OFFSET > metaEndOffset)) {\n        return undefined;\n    }\n\n    const colorType = getStringFromDataView(dataView, offset + ITEM_TYPE_OFFSET, ITEM_TYPE_SIZE);\n    if ((colorType !== 'prof') && (colorType !== 'rICC')) {\n        return undefined;\n    }\n\n    return [{\n        offset: offset + ITEM_CONTENT_OFFSET,\n        length: getAtomLength(dataView, offset) - ITEM_CONTENT_OFFSET,\n        chunkNumber: 1,\n        chunksTotal: 1\n    }];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n    let vp8xChunkOffset;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        } else if (chunkId === 'VP8X') {\n            hasAppMarkers = true;\n            vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks,\n        vp8xChunkOffset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Webp from './image-header-webp.js';\nimport {objectAssign} from './utils.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return addFileType(Png.findPngOffsets(dataView), 'png', 'PNG');\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n    return objectAssign({}, offsets, {fileType: {value: fileType, description: fileTypeDescription}});\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] >= value[1]) {\n            return `${Math.round(value[0] / value[1])}`;\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${value[0] / value[1]}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport const IFD_TYPE_0TH = '0th';\nexport const IFD_TYPE_1ST = '1st';\nexport const IFD_TYPE_EXIF = 'exif';\nexport const IFD_TYPE_GPS = 'gps';\nexport const IFD_TYPE_INTEROPERABILITY = 'interoperability';\nexport const IFD_TYPE_MPF = 'mpf';\n\nexport default {\n    [IFD_TYPE_0TH]: tagNames0thExifIfds,\n    [IFD_TYPE_1ST]: TagNames0thIfd,\n    [IFD_TYPE_EXIF]: tagNames0thExifIfds,\n    [IFD_TYPE_GPS]: TagNamesGpsIfd,\n    [IFD_TYPE_INTEROPERABILITY]: TagNamesInteroperabilityIfd,\n    [IFD_TYPE_MPF]: Constants.USE_MPF ? TagNamesMpfIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengths = `${value[0][0] / value[0][1]}-${value[1][0] / value[1][1]} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            return `${focalLengths} f/${1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport TagNames, {IFD_TYPE_0TH, IFD_TYPE_1ST, IFD_TYPE_EXIF, IFD_TYPE_GPS, IFD_TYPE_INTEROPERABILITY, IFD_TYPE_MPF} from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport default {\n    read,\n    readMpf\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, IFD_TYPE_0TH, tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_EXIF, tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_GPS, tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_INTEROPERABILITY, tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readMpf(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, IFD_TYPE_MPF, dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    const ENTRY_SIZE = 16;\n\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = isFirstIndividualImage(i) ? 0 : getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction isFirstIndividualImage(i) {\n    return i === 0;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0 && ifdType === IFD_TYPE_0TH) {\n            tags['Thumbnail'] = readIfd(dataView, IFD_TYPE_1ST, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    const tags = {};\n\n    if (typeof dataView === 'string') {\n        readTags(tags, dataView);\n        return tags;\n    }\n\n    const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n\n    const hasStandardTags = readTags(tags, standardXmp);\n\n    if (extendedXmp) {\n        const hasExtendedTags = readTags(tags, extendedXmp);\n\n        if (!hasStandardTags && !hasExtendedTags) {\n            // Some writers are not spec-compliant in that they split an XMP\n            // metadata tree over both the standard XMP block and the extended\n            // XMP block. If we failed parsing both of the XMPs in the regular\n            // way, we try to combine them to see if that works better.\n            delete tags._raw;\n            readTags(tags, combineChunks(dataView, chunks));\n        }\n    }\n\n    return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const domParser = DOMParser.get();\n    if (!domParser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return new DOMParser();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        return new (__non_webpack_require__('@xmldom/xmldom').DOMParser)({\n            errorHandler: {\n                error: () => {\n                    throw new Error('Faulty XML');\n                }\n            }\n        });\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\nfunction read(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValueFromArray} from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport {TYPE_TEXT, TYPE_ITXT} from './image-header-png.js';\n\nexport default {\n    read\n};\n\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_LENGTH = 2;\n\nfunction read(dataView, pngTextChunks) {\n    return pngTextChunks.reduce((tags, {offset, length, type}) => {\n        const {name, value, description} = getNameAndValue(dataView, offset, length, type);\n        if (name) {\n            tags[name] = {\n                value,\n                description\n            };\n        }\n        return tags;\n    }, {});\n}\n\nfunction getNameAndValue(dataView, offset, length, type) {\n    const keywordChars = [];\n    const langChars = [];\n    const translatedKeywordChars = [];\n    const valueChars = [];\n    let parsingState = STATE_KEYWORD;\n\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        if (parsingState === STATE_COMPRESSION) {\n            const compressionFlag = dataView.getUint8(offset + i);\n            if (compressionFlag !== 0) {\n                return {}; // We don't support compression.\n            }\n            i += COMPRESSION_SECTION_LENGTH;\n            parsingState = moveToNextState(type, parsingState);\n        }\n        const byte = dataView.getUint8(offset + i);\n        if (byte === 0) {\n            parsingState = moveToNextState(type, parsingState);\n        } else if (parsingState === STATE_KEYWORD) {\n            keywordChars.push(byte);\n        } else if (parsingState === STATE_LANG) {\n            langChars.push(byte);\n        } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n            translatedKeywordChars.push(byte);\n        } else {\n            valueChars.push(byte);\n        }\n    }\n\n    const textValue = getStringValueFromArray(valueChars);\n\n    return {\n        name: getName(type, langChars, keywordChars),\n        value: textValue,\n        description: type === TYPE_ITXT ? TagDecoder.decode('UTF-8', valueChars) : textValue\n    };\n}\n\nfunction moveToNextState(type, parsingState) {\n    if (parsingState === STATE_KEYWORD && type === TYPE_ITXT) {\n        return STATE_COMPRESSION;\n    }\n    if (parsingState === STATE_COMPRESSION) {\n        return STATE_LANG;\n    }\n    if (parsingState === STATE_LANG) {\n        return STATE_TRANSLATED_KEYWORD;\n    }\n    return STATE_TEXT;\n}\n\nfunction getName(type, langChars, keywordChars) {\n    const name = getStringValueFromArray(keywordChars);\n    if (type === TYPE_TEXT || langChars.length === 0) {\n        return name;\n    }\n    const lang = getStringValueFromArray(langChars);\n    return `${name} (${lang})`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME} from './image-header-png.js';\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunkOffsets) {\n    const tags = {};\n\n    for (let i = 0; i < chunkOffsets.length; i++) {\n        const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n        const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n\n        if (chunkType === TYPE_PHYS) {\n            tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n        } else if (chunkType === TYPE_TIME) {\n            tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n        }\n    }\n\n    return tags;\n}\n\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 0;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 4;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 8;\n    const TAG_SIZE = 1;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: value === 1 ? 'meters' : 'Unknown'\n    };\n}\n\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n    const TIME_TAG_SIZE = 7;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n        return undefined;\n    }\n\n    const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n    const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n    const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n    const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n    const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n    const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n\n    return {\n        value: [year, month, day, hours, minutes, seconds],\n        description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n    };\n}\n\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n    return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\n\nfunction pad(number, size) {\n    return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nconst IMAGE_WIDTH_OFFSET = 4;\nconst IMAGE_HEIGHT_OFFSET = 7;\n\n// https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\nfunction read(dataView, chunkOffset) {\n    const tags = {};\n\n    const flags = Types.getByteAt(dataView, chunkOffset);\n\n    tags['Alpha'] = getAlpha(flags);\n    tags['Animation'] = getAnimation(flags);\n    tags['ImageWidth'] = getThreeByteValue(dataView, chunkOffset + IMAGE_WIDTH_OFFSET);\n    tags['ImageHeight'] = getThreeByteValue(dataView, chunkOffset + IMAGE_HEIGHT_OFFSET);\n\n    return tags;\n}\n\nfunction getAlpha(flags) {\n    const value = flags & 0x10;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getAnimation(flags) {\n    const value = flags & 0x02;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getThreeByteValue(dataView, offset) {\n    // Values are stored little-endian.\n    const value = Types.getByteAt(dataView, offset)\n        + 256 * Types.getByteAt(dataView, offset + 1)\n        + 256 * 256 * Types.getByteAt(dataView, offset + 2)\n        + 1; // Value is 1-based, i.e. a value of 7 means 8px.\n\n    return {\n        value,\n        description: value + 'px'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign, dataUriToBuffer} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Vp8xTags from './vp8x-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options) {\n    if (isFilePathOrURL(data)) {\n        return loadFile(data, options).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename, options) {\n    if (/^https?:\\/\\//.test(filename)) {\n        if (typeof fetch !== 'undefined') {\n            return browserFetchRemoteFile(filename, options);\n        }\n\n        return nodeFetchRemoteFile(filename, options);\n    }\n\n    if (isDataUri(filename)) {\n        return Promise.resolve(dataUriToBuffer(filename));\n    }\n\n    return loadLocalFile(filename, options);\n}\n\nfunction browserFetchRemoteFile(url, {length} = {}) {\n    const options = {method: 'GET'};\n    if (Number.isInteger(length) && length >= 0) {\n        options.headers = {\n            range: `bytes=0-${length - 1}`,\n        };\n    }\n    return fetch(url, options).then((response) => response.arrayBuffer());\n}\n\nfunction nodeFetchRemoteFile(url, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const options = {};\n        if (Number.isInteger(length) && length >= 0) {\n            options.headers = {\n                range: `bytes=0-${length - 1}`,\n            };\n        }\n\n        const get = requireNodeGet(url);\n        get(url, options, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction isDataUri(filename) {\n    return /^data:[^;,]*(;base64)?,/.test(filename);\n}\n\nfunction loadLocalFile(filename, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n                        const buffer = Buffer.alloc(size);\n                        const options = {\n                            buffer,\n                            length: size\n                        };\n                        fs.read(fd, options, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof window !== 'undefined') && (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(dataView, {expanded = false, includeUnknown = false} = {expanded: false, includeUnknown: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    const {\n        fileType,\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset,\n        pngTextChunks,\n        pngChunkOffsets,\n        vp8xChunkOffset,\n    } = ImageHeader.parseAppMarkers(dataView);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks);\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = Tags.readMpf(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n        foundMetaData = true;\n        const readTags = PngTextTags.read(dataView, pngTextChunks);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngText = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n        foundMetaData = true;\n        const readTags = PngTags.read(dataView, pngChunkOffsets);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_WEBP && hasVp8xData(vp8xChunkOffset)) {\n        foundMetaData = true;\n        const readTags = Vp8xTags.read(dataView, vp8xChunkOffset);\n        if (expanded) {\n            tags.riff = !tags.riff ? readTags : objectAssign({}, tags.riff, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (fileType) {\n        if (expanded) {\n            if (!tags.file) {\n                tags.file = {};\n            }\n            tags.file.FileType = fileType;\n        } else {\n            tags.FileType = fileType;\n        }\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n\nfunction hasPngTextData(pngTextChunks) {\n    return pngTextChunks !== undefined;\n}\n\nfunction hasPngData(pngChunkOffsets) {\n    return pngChunkOffsets !== undefined;\n}\n\nfunction hasVp8xData(vp8xChunkOffset) {\n    return vp8xChunkOffset !== undefined;\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getStringFromDataView","dataView","offset","length","chars","i","byteLength","push","getUint8","getStringValueFromArray","getUnicodeStringFromDataView","getUint16","charArray","map","charCode","String","fromCharCode","join","objectAssign","arguments","property","deferInit","object","initializer","initialized","configurable","apply","writable","getBase64Image","image","btoa","Array","reduce","Uint8Array","data","byte","Buffer","undefined","_typeof","from","toString","DataView","buffer","_classCallCheck","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","littleEndian","USE_FILE","USE_JFIF","USE_PNG_FILE","USE_EXIF","USE_IPTC","USE_XMP","USE_ICC","USE_MPF","USE_THUMBNAIL","USE_TIFF","USE_JPEG","USE_PNG","USE_HEIC","USE_WEBP","getStringValue","getEncodedString","encoding","slice","getCalculatedGpsValue","LITTLE_ENDIAN","tiffHeaderOffset","MIN_JPEG_DATA_BUFFER_LENGTH","JPEG_ID","JPEG_ID_SIZE","APP_ID_OFFSET","APP_MARKER_SIZE","JFIF_DATA_OFFSET","TIFF_HEADER_OFFSET","IPTC_DATA_OFFSET","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_DATA_OFFSET","MPF_DATA_OFFSET","APP2_ICC_IDENTIFIER","ICC_CHUNK_NUMBER_OFFSET","ICC_TOTAL_CHUNKS_OFFSET","APP2_MPF_IDENTIFIER","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","FILL_BYTE","APP0_JFIF_IDENTIFIER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","isSOF0Marker","appMarkerPosition","isSOF2Marker","isApp2ICCMarker","markerIdLength","isApp2MPFMarker","isApp0JfifMarker","isApp1ExifMarker","isApp1XmpMarker","isXmpIdentifier","isApp1ExtendedXmpMarker","isExtendedXmpIdentifier","getXmpChunkDetails","fieldLength","dataOffset","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","isAppMarker","appMarker","isFillByte","PNG_ID","PNG_CHUNK_LENGTH_SIZE","PNG_CHUNK_TYPE_SIZE","PNG_CHUNK_LENGTH_OFFSET","PNG_CHUNK_TYPE_OFFSET","PNG_CHUNK_DATA_OFFSET","PNG_XMP_PREFIX","TYPE_ITXT","TYPE_PHYS","TYPE_TIME","TYPE_EXIF","isPngImageHeaderChunk","isPngXmpChunk","isPngTextChunk","chunkType","isPngExifChunk","isPngChunk","SUPPORTED_PNG_CHUNK_TYPES","includes","getPngXmpDataOffset","numberOfNullSeparators","getAtomLength","atomLength","getUint32","extendsToEndOfFile","hasExtendedSize","hasEmptyHighBits","parseAppMarkers","Constants","ByteOrder","hasTiffMarker","Tiff","addFileType","hasAppMarkers","Jpeg","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","xmpChunks","iccChunks","mpfDataOffset","iccDataOffset","iccDataLength","iccChunkNumber","iccChunksTotal","chunkNumber","chunksTotal","fileDataOffset","Png","offsets","pngHeaderOffset","pngTextChunks","type","pngChunkOffsets","heicMajorBrand","HEIC_ID_OFFSET","HEIC_ID","indexOf","Heic","_findMetaAtom","findMetaAtom","metaOffset","metaLength","metaEndOffset","Math","min","_findMetaItems","ilocOffset","exifItemOffset","colrOffset","itemName","findMetaItems","exifOffset","exifItemIndex","exifPointer","findExifOffset","colorType","findIccChunks","RIFF_ID","WEBP_MARKER","Webp","vp8xChunkOffset","chunkId","chunkSize","EXIF_IDENTIFIER","fileType","fileTypeDescription","description","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getInt32","ApertureValue","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","concat","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","name","TagNamesCommon","values","formats","isArray","sample","ref","_ref","_ref2","num","test","status","mode","tagNames0thExifIfds","TagNames0thIfd","x","y","focalLengths","IFD_TYPE_0TH","IFD_TYPE_EXIF","IFD_TYPE_INTEROPERABILITY","_defineProperty","_IFD_TYPE_0TH$IFD_TYP","TagNamesGpsIfd","TagNamesInteroperabilityIfd","TagNamesMpfIfd","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","getTagValueAt","Types","read","includeUnknown","tags","readIfd","get0thIfdOffset","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","readMpf","ENTRY_SIZE","images","ceil","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","isFirstIndividualImage","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","entries","size","flags","flagsDescription","imageFormat","ifdType","FIELD_COUNT_SIZE","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","id","nextIfdOffset","tagValue","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","TagNames","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","error","decodeAsciiValue","string","j","splitNullSeparatedAsciiString","tagName","tagDescription","getDescriptionFromTagValue","count","valueIndex","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","decode","Decoder","TextDecoder","TAG_HEADER_SIZE","parseTags","_getNaaResourceBlock","BYTES_8BIM_SIZE","resourceBlock","getResourceBlock","isNaaResourceBlock","naaBlock","getBlockPadding","getNaaResourceBlock","endOfBlockOffset","_readTag","tagSize","leadByteIsMissing","IptcTagNames","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","fraction","calculateGPSValue","substring","parseNumber","numbers","number","charCodeAt","isFraction","func","_value$split2","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","chunks","readTags","_extractCompleteChunk2","completeChunks","combineChunks","extractCompleteChunks","standardXmp","extendedXmp","hasStandardTags","hasExtendedTags","_raw","totalLength","chunk","combinedChunks","set","chunkDataView","_getDocument","domParser","DOMParser","__non_webpack_require__","errorHandler","console","warn","xmlString","doc","parseFromString","replace","documentElement","nodeName","textContent","raw","getDocument","parseXMPObject","convertToObject","getRDF","node","childNodes","nodes","isTopNode","elements","getChildNodes","nodeValue","getTextValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","item","getDescriptionOfArray","XmpTagNames","descriptions","getClearTextKey","getDescriptionOfObject","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","parseNodeAttributes","parseNodeAsSimpleValue","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","iccData","totalIccProfileLength","sum","icc","iccBinaryData","getBuffer","_loop","iccDataChunk","find","chunkData","PROFILE_HEADER_LENGTH","iccProfileKeys","profileEntry","sliceToString","ICC_SIGNATURE","ICC_TAG_COUNT_OFFSET","iccDoesNotHaveTagCount","tagHeaderOffset","hasTagsData","tagSignature","tagOffset","TAG_TYPE_DESC","tagValueSize","addTag","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","getBitDepth","getColorType","getCompression","getFilter","getInterlace","_getNameAndValue","keywordChars","langChars","translatedKeywordChars","valueChars","parsingState","STATE_KEYWORD","STATE_COMPRESSION","COMPRESSION_SECTION_LENGTH","moveToNextState","STATE_LANG","STATE_TRANSLATED_KEYWORD","textValue","getName","getNameAndValue","STATE_TEXT","lang","chunkOffsets","chunkLength","getPixelsPerUnitX","getPixelsPerUnitY","getPixelUnits","getModifyDate","chunkOffset","tagFitsInBuffer","pad","repeat","getAlpha","getAnimation","getThreeByteValue","IMAGE_WIDTH_OFFSET","IMAGE_HEIGHT_OFFSET","COMPRESSION_JPEG","thumbnailTags","Compression","JPEGInterchangeFormat","JPEGInterchangeFormatLength","MetadataMissingError","message","stack","load","loadView","errors","exifErrors","options","isFilePathOrURL","filename","fetch","url","method","isInteger","headers","range","then","response","arrayBuffer","browserFetchRemoteFile","Promise","resolve","reject","requireNodeGet","statusCode","on","statusMessage","resume","nodeFetchRemoteFile","isDataUri","dataUri","atob","char","decodedData","dataUriToBuffer","fs","requireNodeFs","open","fd","stat","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","window","File","isBrowserFileObject","file","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","isBuffer","isNodeBuffer","DataViewWrapper","getDataView","_ref4","expanded","_ref4$expanded","_ref4$includeUnknown","foundMetaData","_ImageHeader$parseApp","ImageHeader","hasFileData","FileTags","hasJfifData","JfifTags","jfif","hasExifData","Tags","Thumbnail","exif","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","addGpsGroup","hasIptcData","readIptcTags","IptcTags","iptc","hasXmpData","readXmpTags","XmpTags","xmp","hasIccData","readIccTags","IccTags","hasMpfData","readMpfTags","mpf","PngFileTags","png","pngFile","hasPngTextData","PngTextTags","pngText","hasPngData","PngTags","hasVp8xData","Vp8xTags","riff","FileType","iccDataOffsets"],"sourceRoot":""}