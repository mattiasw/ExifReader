{"version":3,"sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/./src/dom-parser.js","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/dataview.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tag-names-common.js","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/file-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/text-decoder.js","webpack://ExifReader/./src/tag-decoder.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/icc-tag-names.js","webpack://ExifReader/./src/icc-tags.js","webpack://ExifReader/./src/png-file-tags.js","webpack://ExifReader/./src/errors.js","webpack://ExifReader/./src/exif-reader.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DOMParser","eval","error","getStringFromDataView","dataView","offset","length","chars","byteLength","push","getUint8","getStringValueFromArray","join","getUnicodeStringFromDataView","getUint16","charArray","map","charCode","String","fromCharCode","objectAssign","target","sources","source","DataView","buffer","undefined","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","littleEndian","BIG_ENDIAN","LITTLE_ENDIAN","getByteOrder","tiffHeaderOffset","HEIC_MAJOR_BRANDS","ICC_CHUNK_NUMBER_OFFSET","ICC_TOTAL_CHUNKS_OFFSET","parseAppMarkers","ByteOrder","hasTiffMarker","isTiffFile","hasAppMarkers","isJpegFile","fieldLength","sof0DataOffset","sof2DataOffset","iptcDataOffset","xmpChunks","iccChunks","appMarkerPosition","isSOF0Marker","isSOF2Marker","isApp1ExifMarker","isApp1XmpMarker","getXmpChunkDetails","isApp1ExtendedXmpMarker","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","isApp2ICCMarker","iccDataOffset","iccDataLength","iccChunkNumber","iccChunksTotal","chunkNumber","chunksTotal","isAppMarker","fileDataOffset","findJpegOffsets","isPngFile","offsets","isPngImageHeaderChunk","pngHeaderOffset","PNG_CHUNK_LENGTH_SIZE","isPngXmpChunk","dataOffset","getUint32","findPngOffsets","heicMajorBrand","indexOf","isHeicFile","markerIdLength","byteOrder","findHeicOffsets","isXmpIdentifier","isExtendedXmpIdentifier","appMarker","typeSizes","1","2","3","4","5","7","9","10","13","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getInt32","getStringValue","getEncodedString","encoding","slice","0","ref","values","num","test","status","description","tagNames0thExifIfds","Math","round","formats","6","Array","isArray","sample","TagNamesCommon","character","pow","sqrt","toFixed","x","y","focalLengths","TagNamesGpsIfd","TagNamesInteroperabilityIfd","getTagValueAt","Types","read","tags","readIfd","get0thIfdOffset","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","ifdType","FIELD_COUNT_SIZE","numberOfFields","fieldIndex","tag","readTag","id","tagValue","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","decodeAsciiValue","string","splitNullSeparatedAsciiString","TagNames","tagName","tagDescription","getDescriptionFromTagValue","type","count","valueIndex","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","toString","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","date","time","parsedTime","TextDecoder","decode","Decoder","Uint8Array","from","TAG_HEADER_SIZE","BYTES_8BIM_SIZE","resourceBlock","getResourceBlock","isNaaResourceBlock","naaBlock","size","getBlockPadding","getNaaResourceBlock","newDataOffset","endOfBlockOffset","tagSize","parseTags","leadByteIsMissing","getTagName","IptcTagNames","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","calculateGPSValue","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","chunks","completeChunks","combineChunks","extractCompleteChunks","reduce","readTags","totalLength","chunk","combinedChunks","set","chunkDataView","parseXMPObject","convertToObject","getRDF","node","childNodes","Parser","console","warn","domParser","xmlSource","doc","parseFromString","documentElement","nodeName","textContent","getDocument","isTopNode","getChildNodes","hasTextOnlyContent","getTextValue","getElementsFromNodes","elements","nodes","nodeValue","forEach","isElement","nodeElement","attributes","getAttributes","getElementFromNode","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","getDescriptionOfArray","getDescriptionOfObject","XmpTagNames","item","descriptions","getClearTextKey","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAttributes","parseNodeAsStructureRdfDescription","keys","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","hasNestedArrayValue","parseArrayValue","parseNodeAsArray","getURIValue","parseNodeAsSimpleValue","parseNodeChildrenAsAttributes","parseRdfValue","iccTags","iccProfile","toCompany","8","12","toLowerCase","16","20","24","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","36","apply","40","48","52","64","80","iccData","totalIccProfileLength","sum","icc","iccBinaryData","iccDataChunk","find","data","chunkData","profileEntry","sliceToString","ICC_TAG_COUNT_OFFSET","iccDoesNotHaveTagCount","tagHeaderOffset","hasTagsData","tagSignature","tagOffset","tagValueSize","val","addTag","numRecords","recordSize","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","getBitDepth","getColorType","getCompression","getFilter","getInterlace","MetadataMissingError","message","stack","errors","load","loadView","exifErrors","options","expanded","getDataView","DataViewWrapper","foundMetaData","ImageHeader","hasFileData","FileTags","file","hasExifData","Tags","exif","hasIptcData","IptcTags","iptc","hasXmpData","XmpTags","xmp","hasIccData","IccTags","hasPngFileData","PngFileTags","pngFile","iccDataOffsets","pngFileDataOffset"],"mappings":"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","file":"exif-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return DOMParser;\n    }\n    try {\n        return eval('require')('xmldom').DOMParser; // This stops Webpack from replacing the require with a generic import and bundling the module.\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i, false));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nfunction getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nexport function objectAssign(target, ...sources) {\n    for (const source of sources) {\n        for (const property in source) {\n            target[property] = source[property];\n        }\n    }\n\n    return target;\n}\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\nimport ByteOrder from './byte-order';\n\nconst MIN_TIFF_DATA_BUFFER_LENGTH = 4;\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst TIFF_ID = 0x2a;\nconst TIFF_ID_OFFSET = 2;\nconst TIFF_FILE_HEADER_OFFSET = 0;\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nconst PNG_CHUNK_TYPE_SIZE = 4;\nconst PNG_CRC_SIZE = 4;\nconst PNG_CHUNK_LENGTH_OFFSET = 0;\nconst PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nconst PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\nconst PNG_CHUNK_TYPE_INTERNATIONAL_TEXT = 'iTXt';\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp';\n\nconst HEIC_ID = 'ftyp';\nconst HEIC_ID_OFFSET = 4;\nconst HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\nconst HEIC_MAJOR_BRAND_LENGTH = 4;\n\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView) {\n    if (isTiffFile(dataView)) {\n        return findTiffOffsets();\n    }\n\n    if (isJpegFile(dataView)) {\n        return findJpegOffsets(dataView);\n    }\n\n    if (isPngFile(dataView)) {\n        return findPngOffsets(dataView);\n    }\n\n    if (isHeicFile(dataView)) {\n        return findHeicOffsets(dataView);\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction isTiffFile(dataView) {\n    return (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    return {\n        hasAppMarkers: true,\n        tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n    };\n}\n\nfunction isJpegFile(dataView) {\n    return (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0, false) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET, false);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET, false);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition, false);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isPngFile(dataView) {\n    return getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView) {\n    const offsets = {\n        hasAppMarkers: false\n    };\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (isPngXmpChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.xmpChunks = [{\n                dataOffset: offset + PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length,\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - PNG_XMP_PREFIX.length\n            }];\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_INTERNATIONAL_TEXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isHeicFile(dataView) {\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    const NULL_VALUES_LENGTH = 2;\n    const BYTE_ORDER_LENGTH = 2;\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n    let offset = HEIC_ID_OFFSET + HEIC_ID.length + HEIC_MAJOR_BRAND_LENGTH;\n\n    while (offset + markerIdLength + NULL_VALUES_LENGTH + BYTE_ORDER_LENGTH <= dataView.byteLength) {\n        const byteOrder = dataView.getUint16(offset + markerIdLength + NULL_VALUES_LENGTH, false);\n\n        if ((getStringFromDataView(dataView, offset, markerIdLength) === APP1_EXIF_IDENTIFIER)\n            && (dataView.getUint8(offset + markerIdLength, false) === 0x00)\n            && ((byteOrder === ByteOrder.LITTLE_ENDIAN) || (byteOrder === ByteOrder.BIG_ENDIAN))) {\n            return {\n                hasAppMarkers: true,\n                tiffHeaderOffset: offset + markerIdLength + NULL_VALUES_LENGTH\n            };\n        }\n\n        offset++;\n    }\n\n    return {\n        hasAppMarkers: false\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'LightSource': (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    }\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils';\nimport TagNames0thIfd from './tag-names-0th-ifd';\nimport TagNamesExifIfd from './tag-names-exif-ifd';\nimport TagNamesGpsIfd from './tag-names-gps-ifd';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport default {\n    '0th': tagNames0thExifIfds,\n    'exif': tagNames0thExifIfds,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: (value) => {\n            if (value === 2) {\n                return 'inches';\n            }\n            if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils';\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': (value) => {\n            if (value[0] !== 0) {\n                return `1/${Math.round(value[1] / value[0])}`;\n            }\n            return `0/${value[1]}`;\n        }\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': (value) => `f/${value[0] / value[1]}`\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Undefined';\n            } else if (value === 1) {\n                return 'Manual';\n            } else if (value === 2) {\n                return 'Normal program';\n            } else if (value === 3) {\n                return 'Aperture priority';\n            } else if (value === 4) {\n                return 'Shutter priority';\n            } else if (value === 5) {\n                return 'Creative program';\n            } else if (value === 6) {\n                return 'Action program';\n            } else if (value === 7) {\n                return 'Portrait mode';\n            } else if (value === 8) {\n                return 'Landscape mode';\n            } else if (value === 9) {\n                return 'Bulb';\n            }\n            return 'Unknown';\n        }\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': (value) => {\n            return value.map((character) => {\n                if (character === 0x31) {\n                    return 'Y';\n                } else if (character === 0x32) {\n                    return 'Cb';\n                } else if (character === 0x33) {\n                    return 'Cr';\n                } else if (character === 0x34) {\n                    return 'R';\n                } else if (character === 0x35) {\n                    return 'G';\n                } else if (character === 0x36) {\n                    return 'B';\n                }\n            }).join('');\n        }\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': (value) => {\n            return `1/${Math.round(Math.pow(2, value[0] / value[1]))}`;\n        }\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Average';\n            } else if (value === 2) {\n                return 'CenterWeightedAverage';\n            } else if (value === 3) {\n                return 'Spot';\n            } else if (value === 4) {\n                return 'MultiSpot';\n            } else if (value === 5) {\n                return 'Pattern';\n            } else if (value === 6) {\n                return 'Partial';\n            } else if (value === 255) {\n                return 'Other';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon['LightSource']\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': (value) => (value[0] / value[1]) + ' mm'\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': (value) => {\n            if (value === 1) {\n                return 'sRGB';\n            } else if (value === 0xffff) {\n                return 'Uncalibrated';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': (value) => {\n            if (value === 2) {\n                return 'inches';\n            } else if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal process';\n            } else if (value === 1) {\n                return 'Custom process';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto exposure';\n            } else if (value === 1) {\n                return 'Manual exposure';\n            } else if (value === 2) {\n                return 'Auto bracket';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto white balance';\n            } else if (value === 1) {\n                return 'Manual white balance';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Standard';\n            } else if (value === 1) {\n                return 'Landscape';\n            } else if (value === 2) {\n                return 'Portrait';\n            } else if (value === 3) {\n                return 'Night scene';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Low saturation';\n            } else if (value === 2) {\n                return 'High saturation';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengths = `${value[0][0] / value[0][1]}-${value[1][0] / value[1][1]} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            return `${focalLengths} f/${1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils';\nimport ByteOrder from './byte-order';\nimport Types from './types';\nimport TagNames from './tag-names';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport default {\n    read\n};\n\nfunction read(dataView, tiffHeaderOffset) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = Types.getShortAt(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n        offset += FIELD_SIZE;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n        return {\n            id: tagCode,\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n    }\n\n    return {\n        id: tagCode,\n        name: `undefined-${tagCode}`,\n        value: tagValue,\n        description: tagValue\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\n    let value = [];\n\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (const character of string) {\n        if (character === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += character;\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                return value.length === 2 ? 'ObjectData Preview File Format' : 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names';\nimport TagDecoder from './tag-decoder';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset) {\n    try {\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset) {\n    const tags = {};\n    let encoding = undefined;\n\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding);\n\n        if (tag === null) {\n            break;\n        }\n\n        if ('encoding' in tag) {\n            encoding = tag.encoding;\n        }\n\n        if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n            tags[tag.name] = {\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            };\n        } else {\n            if (!(tags[tag.name] instanceof Array)) {\n                tags[tag.name] = [{\n                    id: tags[tag.name].id,\n                    value: tags[tag.name].value,\n                    description: tags[tag.name].description\n                }];\n            }\n            tags[tag.name].push({\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            });\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue\n};\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils';\nimport XmpTagNames from './xmp-tag-names';\nimport DOMParser from './dom-parser';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    return extractCompleteChunks(dataView, chunks).reduce(readTags, {});\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (const chunk of chunks) {\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const doc = getDocument(chunkDataView);\n        const rdf = getRDF(doc);\n\n        return objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n    } catch (error) {\n        return tags;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const Parser = DOMParser.get();\n    if (!Parser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const domParser = new Parser();\n    const xmlSource = getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(xmlSource, 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return doc;\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        return getDescriptionOfArray(value);\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${value[key].value}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    } else if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    } else if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    } else if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n\n    if (hasNestedArrayValue(item)) {\n        return parseNodeChildrenAsTags(item.value);\n    }\n\n    return {\n        value: item.value,\n        attributes: parseNodeAttributes(item),\n        description: getDescription(item.value)\n    };\n}\n\nfunction hasNestedArrayValue(node) {\n    return node.attributes['rdf:parseType'] === 'Resource';\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names';\nimport {getStringFromDataView, getUnicodeStringFromDataView} from './utils';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\nfunction read(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = dataView.buffer;\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    for (const offset of Object.keys(iccProfile)) {\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2018  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport {objectAssign} from './utils';\nimport DataViewWrapper from './dataview';\nimport ImageHeader from './image-header';\nimport Tags from './tags';\nimport FileTags from './file-tags';\nimport IptcTags from './iptc-tags';\nimport XmpTags from './xmp-tags';\nimport IccTags from './icc-tags';\nimport PngFileTags from './png-file-tags';\nimport exifErrors from './errors';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {expanded: false}) {\n    return loadView(getDataView(data), options);\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(dataView, options = {expanded: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    const {fileDataOffset, tiffHeaderOffset, iptcDataOffset, xmpChunks, iccChunks, pngHeaderOffset} = ImageHeader.parseAppMarkers(dataView);\n\n    if (hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (options.expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset);\n        if (options.expanded) {\n            tags.exif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset);\n        if (options.expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (options.expanded) {\n            tags.xmp = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks);\n        if (options.expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (options.expanded) {\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n"],"sourceRoot":""}