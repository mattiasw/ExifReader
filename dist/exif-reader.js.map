{"version":3,"sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tag-names-common.js","webpack://ExifReader/./src/exif-reader.js","webpack://ExifReader/./src/dataview.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/file-tags.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/tag-decoder.js","webpack://ExifReader/./src/text-decoder.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/dom-parser.js","webpack://ExifReader/./src/icc-tags.js","webpack://ExifReader/./src/icc-tag-names.js","webpack://ExifReader/./src/png-file-tags.js","webpack://ExifReader/./src/errors.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getStringValueFromArray","charArray","map","charCode","String","fromCharCode","getStringFromDataView","dataView","offset","length","chars","byteLength","push","getUint8","join","getUnicodeStringFromDataView","getUint16","objectAssign","target","sources","source","getStringValue","getEncodedString","encoding","slice","getCharacterArray","string","split","character","charCodeAt","BIG_ENDIAN","LITTLE_ENDIAN","getByteOrder","tiffHeaderOffset","Error","typeSizes","1","2","3","4","5","7","9","10","13","tagTypes","getByteAt","getLongAt","byteOrder","getUint32","ByteOrder","getSlongAt","getInt32","getAsciiValue","getAsciiAt","getShortAt","getRationalAt","getUndefinedAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","undefined","load","loadView","data","options","expanded","getDataView","DataView","error","DataViewWrapper","foundMetaData","tags","ImageHeader","parseAppMarkers","fileDataOffset","iptcDataOffset","xmpChunks","iccChunks","pngHeaderOffset","hasFileData","readTags","FileTags","read","file","hasExifData","Tags","exif","hasIptcData","IptcTags","iptc","hasXmpData","XmpTags","xmp","hasIccData","IccTags","icc","hasPngFileData","PngFileTags","pngFile","exifErrors","MetadataMissingError","Array","isArray","iccDataOffsets","pngFileDataOffset","errors","buffer","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","littleEndian","HEIC_MAJOR_BRANDS","ICC_CHUNK_NUMBER_OFFSET","ICC_TOTAL_CHUNKS_OFFSET","isSOF0Marker","appMarkerPosition","isSOF2Marker","isApp2ICCMarker","markerIdLength","isApp1ExifMarker","isApp1XmpMarker","isXmpIdentifier","isApp1ExtendedXmpMarker","isExtendedXmpIdentifier","getXmpChunkDetails","fieldLength","dataOffset","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","isAppMarker","appMarker","isPngImageHeaderChunk","isPngXmpChunk","PNG_CHUNK_LENGTH_SIZE","hasTiffMarker","isTiffFile","hasAppMarkers","isJpegFile","sof0DataOffset","sof2DataOffset","iccDataOffset","iccDataLength","iccChunkNumber","iccChunksTotal","chunkNumber","chunksTotal","findJpegOffsets","isPngFile","offsets","findPngOffsets","heicMajorBrand","indexOf","isHeicFile","findHeicOffsets","getTagValueAt","Types","readIfd","ifdType","FIELD_COUNT_SIZE","numberOfFields","fieldIndex","tag","readTag","id","description","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValue","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","decodeAsciiValue","splitNullSeparatedAsciiString","TagNames","tagName","tagDescription","getDescriptionFromTagValue","type","count","valueIndex","get0thIfdOffset","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","tagNames0thExifIfds","TagNames0thIfd","TagNamesExifIfd","TagNamesGpsIfd","TagNamesInteroperabilityIfd","0","Math","round","values","formats","6","sample","TagNamesCommon","pow","sqrt","toFixed","focalLengths","ref","num","test","status","getDataPrecision","OFFSET","getImageHeight","getImageWidth","getSubsampling","numberOfColorComponents","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","getLength","getNumberOfColorComponents","getResourceBlock","size","isNaaResourceBlock","resourceBlock","getBlockPadding","leadByteIsMissing","tagSize","getTagName","IptcTagNames","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","decode","BYTES_8BIM_SIZE","naaBlock","getNaaResourceBlock","endOfBlockOffset","parseTags","getCreationDate","date","substr","getCreationTime","time","parsedTime","getEncodingName","toString","parts","stringValue","character0","charAt","character1","parseInt","bits","duration","intValue","formatVersions","objectDataPreviewFileFormat","Decoder","TextDecoder","Uint8Array","from","TAG_HEADER_SIZE","combineChunks","chunks","totalLength","reduce","chunk","combinedChunks","set","chunkDataView","rdf","getRDF","node","childNodes","Parser","DOMParser","console","warn","domParser","xmlSource","doc","parseFromString","documentElement","nodeName","textContent","getDocument","parseXMPObject","convertToObject","isTopNode","getChildNodes","hasTextOnlyContent","getTextValue","getElementsFromNodes","elements","nodes","nodeValue","forEach","isElement","nodeElement","attributes","getAttributes","getElementFromNode","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","getDescriptionOfArray","getDescriptionOfObject","XmpTagNames","item","descriptions","getClearTextKey","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAttributes","parseNodeAsStructureRdfDescription","keys","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","hasNestedArrayValue","parseArrayValue","parseNodeAsArray","getURIValue","parseNodeAsSimpleValue","parseNodeChildrenAsAttributes","parseRdfValue","completeChunks","extractCompleteChunks","calculateGPSValue","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","eval","hasTagsData","tagHeaderOffset","iccProfile","profileEntry","sliceToString","ICC_TAG_COUNT_OFFSET","iccDoesNotHaveTagCount","tagSignature","tagOffset","tagValueSize","addTag","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","apply","iccTags","iccData","totalIccProfileLength","sum","iccBinaryData","iccDataChunk","find","x","chunkData","log","toCompany","toLowerCase","8","12","16","20","24","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","36","40","48","52","64","80","getBitDepth","getColorType","getCompression","getFilter","getInterlace","message","stack"],"mappings":"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","file":"exif-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i, false));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nfunction getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nexport function objectAssign(target, ...sources) {\n    for (const source of sources) {\n        for (const property in source) {\n            target[property] = source[property];\n        }\n    }\n\n    return target;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'LightSource': (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    }\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2018  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport {objectAssign} from './utils';\nimport DataViewWrapper from './dataview';\nimport ImageHeader from './image-header';\nimport Tags from './tags';\nimport FileTags from './file-tags';\nimport IptcTags from './iptc-tags';\nimport XmpTags from './xmp-tags';\nimport IccTags from './icc-tags';\nimport PngFileTags from './png-file-tags';\nimport exifErrors from './errors';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {expanded: false}) {\n    return loadView(getDataView(data), options);\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(dataView, options = {expanded: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    const {fileDataOffset, tiffHeaderOffset, iptcDataOffset, xmpChunks, iccChunks, pngHeaderOffset} = ImageHeader.parseAppMarkers(dataView);\n\n    if (hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (options.expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset);\n        if (options.expanded) {\n            tags.exif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset);\n        if (options.expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (options.expanded) {\n            tags.xmp = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks);\n        if (options.expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (options.expanded) {\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\nimport ByteOrder from './byte-order';\n\nconst MIN_TIFF_DATA_BUFFER_LENGTH = 4;\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst TIFF_ID = 0x2a;\nconst TIFF_ID_OFFSET = 2;\nconst TIFF_FILE_HEADER_OFFSET = 0;\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nconst PNG_CHUNK_TYPE_SIZE = 4;\nconst PNG_CRC_SIZE = 4;\nconst PNG_CHUNK_LENGTH_OFFSET = 0;\nconst PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nconst PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n// const PNG_CHUNK_TYPE_ICC_PROFILE = 'iCCP';\n// const PNG_CHUNK_TYPE_COMPRESSED_TEXT = 'zTXt';\nconst PNG_CHUNK_TYPE_INTERNATIONAL_TEXT = 'iTXt';\n// const PNG_CHUNK_TYPE_COMPRESSED_TEXT = 'tEXt';\n// const PNG_ICC_PROFILE_COMPRESSION_METHOD_SIZE = 1;\n// const PNG_EXIF_PREFIX = 'Raw profile type exif';\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp';\n\nconst HEIC_ID = 'ftyp';\nconst HEIC_ID_OFFSET = 4;\nconst HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\nconst HEIC_MAJOR_BRAND_LENGTH = 4;\n\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView) {\n    if (isTiffFile(dataView)) {\n        return findTiffOffsets();\n    }\n\n    if (isJpegFile(dataView)) {\n        return findJpegOffsets(dataView);\n    }\n\n    if (isPngFile(dataView)) {\n        return findPngOffsets(dataView);\n    }\n\n    if (isHeicFile(dataView)) {\n        return findHeicOffsets(dataView);\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction isTiffFile(dataView) {\n    return (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    return {\n        hasAppMarkers: true,\n        tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n    };\n}\n\nfunction isJpegFile(dataView) {\n    return (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0, false) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET, false);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET, false);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition, false);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isPngFile(dataView) {\n    return getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView) {\n    const offsets = {\n        hasAppMarkers: false\n    };\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        // if ((getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_COMPRESSED_TEXT)\n        //     && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_EXIF_PREFIX.length) === PNG_EXIF_PREFIX)) {\n        //     offsets.hasAppMarkers = true;\n        //     offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET + PNG_EXIF_PREFIX.length;\n        // }\n        if (isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (isPngXmpChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.xmpChunks = [{\n                dataOffset: offset + PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length,\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - PNG_XMP_PREFIX.length\n            }];\n        }\n        // if (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_ICC_PROFILE) {\n        //     offsets.hasAppMarkers = true;\n        //     const chunkLength = dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET);\n        //     const profileName = getPngIccProfileName(dataView, offset + PNG_CHUNK_DATA_OFFSET, offset + PNG_CHUNK_DATA_OFFSET + chunkLength);\n        //\n        //     if (profileName !== undefined) {\n        //         offsets.iccChunks = [{\n        //             offset: offset + PNG_CHUNK_DATA_OFFSET + profileName.length + PNG_ICC_PROFILE_COMPRESSION_METHOD_SIZE,\n        //             length: chunkLength - profileName.length - PNG_ICC_PROFILE_COMPRESSION_METHOD_SIZE,\n        //             chunkNumber: 1,\n        //             chunksTotal: 0\n        //         }];\n        //     }\n        // }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_INTERNATIONAL_TEXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n// function getPngIccProfileName(dataView, offset, endOfChunkOffset) {\n//     let profileName = '';\n//\n//     while (offset < endOfChunkOffset) {\n//         const charCode = dataView.getUint8(offset);\n//         profileName += String.fromCharCode(charCode);\n//         if (charCode === 0x00) {\n//             return profileName;\n//         }\n//         offset++;\n//     }\n//\n//     return undefined;\n// }\n\n// function decodeHex(string) {\n//     return string.replace(/\\\\x([0-9a-fA-F]{2})/g, function (_, match) {\n//         return String.fromCharCode(parseInt(match, 16));\n//     });\n// }\n\nfunction isHeicFile(dataView) {\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    const NULL_VALUES_LENGTH = 2;\n    const BYTE_ORDER_LENGTH = 2;\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n    let offset = HEIC_ID_OFFSET + HEIC_ID.length + HEIC_MAJOR_BRAND_LENGTH;\n\n    while (offset + markerIdLength + NULL_VALUES_LENGTH + BYTE_ORDER_LENGTH <= dataView.byteLength) {\n        const byteOrder = dataView.getUint16(offset + markerIdLength + NULL_VALUES_LENGTH, false);\n\n        if ((getStringFromDataView(dataView, offset, markerIdLength) === APP1_EXIF_IDENTIFIER)\n            && (dataView.getUint8(offset + markerIdLength, false) === 0x00)\n            && ((byteOrder === ByteOrder.LITTLE_ENDIAN) || (byteOrder === ByteOrder.BIG_ENDIAN))) {\n            return {\n                hasAppMarkers: true,\n                tiffHeaderOffset: offset + markerIdLength + NULL_VALUES_LENGTH\n            };\n        }\n\n        offset++;\n    }\n\n    return {\n        hasAppMarkers: false\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils';\nimport ByteOrder from './byte-order';\nimport Types from './types';\nimport TagNames from './tag-names';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport default {\n    read\n};\n\nfunction read(dataView, tiffHeaderOffset) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = Types.getShortAt(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n        offset += FIELD_SIZE;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n        return {\n            id: tagCode,\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n    }\n\n    return {\n        id: tagCode,\n        name: `undefined-${tagCode}`,\n        value: tagValue,\n        description: tagValue\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\n    let value = [];\n\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (const character of string) {\n        if (character === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += character;\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils';\nimport TagNames0thIfd from './tag-names-0th-ifd';\nimport TagNamesExifIfd from './tag-names-exif-ifd';\nimport TagNamesGpsIfd from './tag-names-gps-ifd';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport default {\n    '0th': tagNames0thExifIfds,\n    'exif': tagNames0thExifIfds,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: (value) => {\n            if (value === 2) {\n                return 'inches';\n            }\n            if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils';\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': (value) => {\n            if (value[0] !== 0) {\n                return `1/${Math.round(value[1] / value[0])}`;\n            }\n            return `0/${value[1]}`;\n        }\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': (value) => `f/${value[0] / value[1]}`\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Undefined';\n            } else if (value === 1) {\n                return 'Manual';\n            } else if (value === 2) {\n                return 'Normal program';\n            } else if (value === 3) {\n                return 'Aperture priority';\n            } else if (value === 4) {\n                return 'Shutter priority';\n            } else if (value === 5) {\n                return 'Creative program';\n            } else if (value === 6) {\n                return 'Action program';\n            } else if (value === 7) {\n                return 'Portrait mode';\n            } else if (value === 8) {\n                return 'Landscape mode';\n            } else if (value === 9) {\n                return 'Bulb';\n            }\n            return 'Unknown';\n        }\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': (value) => {\n            return value.map((character) => {\n                if (character === 0x31) {\n                    return 'Y';\n                } else if (character === 0x32) {\n                    return 'Cb';\n                } else if (character === 0x33) {\n                    return 'Cr';\n                } else if (character === 0x34) {\n                    return 'R';\n                } else if (character === 0x35) {\n                    return 'G';\n                } else if (character === 0x36) {\n                    return 'B';\n                }\n            }).join('');\n        }\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': (value) => {\n            return `1/${Math.round(Math.pow(2, value[0] / value[1]))}`;\n        }\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Average';\n            } else if (value === 2) {\n                return 'CenterWeightedAverage';\n            } else if (value === 3) {\n                return 'Spot';\n            } else if (value === 4) {\n                return 'MultiSpot';\n            } else if (value === 5) {\n                return 'Pattern';\n            } else if (value === 6) {\n                return 'Partial';\n            } else if (value === 255) {\n                return 'Other';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon['LightSource']\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': (value) => (value[0] / value[1]) + ' mm'\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': (value) => {\n            if (value === 1) {\n                return 'sRGB';\n            } else if (value === 0xffff) {\n                return 'Uncalibrated';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': (value) => {\n            if (value === 2) {\n                return 'inches';\n            } else if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal process';\n            } else if (value === 1) {\n                return 'Custom process';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto exposure';\n            } else if (value === 1) {\n                return 'Manual exposure';\n            } else if (value === 2) {\n                return 'Auto bracket';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto white balance';\n            } else if (value === 1) {\n                return 'Manual white balance';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Standard';\n            } else if (value === 1) {\n                return 'Landscape';\n            } else if (value === 2) {\n                return 'Portrait';\n            } else if (value === 3) {\n                return 'Night scene';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Low saturation';\n            } else if (value === 2) {\n                return 'High saturation';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengths = `${value[0][0] / value[0][1]}-${value[1][0] / value[1][1]} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            return `${focalLengths} f/${1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names';\nimport TagDecoder from './tag-decoder';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset) {\n    try {\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset) {\n    const tags = {};\n    let encoding = undefined;\n\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding);\n\n        if (tag === null) {\n            break;\n        }\n\n        if ('encoding' in tag) {\n            encoding = tag.encoding;\n        }\n\n        if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n            tags[tag.name] = {\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            };\n        } else {\n            if (!(tags[tag.name] instanceof Array)) {\n                tags[tag.name] = [{\n                    id: tags[tag.name].id,\n                    value: tags[tag.name].value,\n                    description: tags[tag.name].description\n                }];\n            }\n            tags[tag.name].push({\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            });\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                return value.length === 2 ? 'ObjectData Preview File Format' : 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils';\nimport XmpTagNames from './xmp-tag-names';\nimport DOMParser from './dom-parser';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    return extractCompleteChunks(dataView, chunks).reduce(readTags, {});\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (const chunk of chunks) {\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const doc = getDocument(chunkDataView);\n        const rdf = getRDF(doc);\n\n        return objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n    } catch (error) {\n        return tags;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const Parser = DOMParser.get();\n    if (!Parser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const domParser = new Parser();\n    const xmlSource = getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(xmlSource, 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return doc;\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        return getDescriptionOfArray(value);\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${value[key].value}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    } else if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    } else if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    } else if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n\n    if (hasNestedArrayValue(item)) {\n        return parseNodeChildrenAsTags(item.value);\n    }\n\n    return {\n        value: item.value,\n        attributes: parseNodeAttributes(item),\n        description: getDescription(item.value)\n    };\n}\n\nfunction hasNestedArrayValue(node) {\n    return node.attributes['rdf:parseType'] === 'Resource';\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue\n};\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return DOMParser;\n    }\n    try {\n        return eval('require')('xmldom').DOMParser; // This stops Webpack from replacing the require with a generic import and bundling the module.\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n// import zlib from 'zlib';\nimport {iccTags, iccProfile} from './icc-tag-names';\nimport {getStringFromDataView, getUnicodeStringFromDataView} from './utils';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\nfunction read(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = dataView.buffer;\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        console.log(error);\n        return {};\n    }\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    // console.log(zlib.inflateRawSync(dataView.toString()));\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    for (const offset of Object.keys(iccProfile)) {\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n"],"sourceRoot":""}