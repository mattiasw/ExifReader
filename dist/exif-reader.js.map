{"version":3,"sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/tag-names-common.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/errors.js","webpack://ExifReader/./src/icc-tag-names.js","webpack://ExifReader/./src/icc-tags.js","webpack://ExifReader/./src/dom-parser.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/text-decoder.js","webpack://ExifReader/./src/tag-decoder.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/file-tags.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/dataview.js","webpack://ExifReader/./src/exif-reader.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getStringValue","map","charCode","String","fromCharCode","join","getEncodedString","length","encoding","slice","getCharacterArray","string","split","character","charCodeAt","getStringValueFromArray","charArray","getStringFromDataView","dataView","offset","chars","byteLength","push","getUint8","getUnicodeStringFromDataView","getUint16","LightSource","typeSizes","1","2","3","4","5","7","9","10","13","tagTypes","BYTE","ASCII","SHORT","LONG","RATIONAL","UNDEFINED","SLONG","SRATIONAL","IFD","getByteAt","getLongAt","byteOrder","getUint32","ByteOrder","LITTLE_ENDIAN","getSlongAt","getInt32","getAsciiValue","getAsciiAt","getShortAt","getRationalAt","getUndefinedAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","undefined","Error","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","MetadataMissingError","message","stack","toCompany","toLowerCase","iccTags","desc","cprt","dmdd","vued","dmnd","tech","iccProfile","_utils","description","8","toString","12","16","20","24","year","month","day","hours","minutes","seconds","Date","UTC","parseDate","toISOString","36","apply","Uint8Array","sliceToString","buffer","40","48","52","64","80","parseTags","read","iccData","totalIccProfileLength","reduce","sum","icc","iccBinaryData","_loop","chunkNumber","iccDataChunk","find","x","data","chunkData","set","DataView","error","PROFILE_HEADER_LENGTH","ICC_TAG_COUNT_OFFSET","ICC_SIGNATURE","TAG_TYPE_DESC","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","hasTagsData","tagHeaderOffset","tags","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","iterator","next","done","profileEntry","parseInt","err","return","signature","iccDoesNotHaveTagCount","tagCount","tagSignature","tagOffset","tagSize","tagType","tagValueSize","val","addTag","numRecords","recordSize","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","DOMParser","eval","calculateGPSValue","_value$split","_value$split2","_slicedToArray","degreesString","minutesString","degrees","parseFloat","ref","charAt","Number","isNaN","tiff:Orientation","exif:GPSLatitude","exif:GPSLongitude","convertToObject","node","isTopNode","arguments","childNodes","elements","getChildNodes","nodes","nodeName","hasTextOnlyContent","nodeValue","getTextValue","forEach","isElement","nodeElement","attributes","element","decodeURIComponent","escape","getAttributes","getElementFromNode","Array","isArray","getElementsFromNodes","parseXMPObject","xmpObject","assign","parseNodeAttributesAsTags","_typeof","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","item","getDescriptionOfArray","descriptions","getClearTextKey","getDescriptionOfObject","XmpTagNames","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","tag","parseNodeAttributes","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","hasNestedArrayValue","parseArrayValue","parseNodeAsArray","getURIValue","parseNodeAsSimpleValue","parseNodeChildrenAsAttributes","parseRdfValue","dataOffset","metadataSize","doc","Parser","console","warn","domParser","xmlSource","parseFromString","documentElement","textContent","getDocument","rdf","getRDF","tagName","TextDecoder","decode","tagValue","Decoder","from","asciiValue","decodeAsciiValue","TAG_HEADER_SIZE","getCreationDate","date","_tagNamesUtils","substr","getCreationTime","time","parsedTime","getEncodingName","iptc","256","261","repeatable","276","278","286","296","306","316","326","336","346","encoding_name","356","376","378","512","515","516","517","519","520","522","524","parts","527","532","534","537","538","539","542","547","549","550","552","554","557","559","562","567","572","574","575","577","582","587","592","597","602","604","607","612","613","615","617","622","627","628","630","632","634","637","642","643","647","662","stringValue","character0","character1","663","664","bits","665","duration","666","698","699","700","712","intValue","713","formatVersions","00","01","02","03","04","05","06","11","21","objectDataPreviewFileFormat","714","1802","1812","1882","1887","BYTES_8BIM","BYTES_8BIM_SIZE","RESOURCE_BLOCK_HEADER_SIZE","NAA_RESOURCE_BLOCK_TYPE","getResourceBlock","type","size","isNaaResourceBlock","resourceBlock","getBlockPadding","readTag","leadByteIsMissing","tagCode","valueIndex","getTagValue","id","tagIsName","hasDynamicName","getTagName","IptcTagNames","hasDescriptionProperty","tagValueIsText","TagDecoder","getTagDescription","tagIsRepeatable","tagContainsEncoding","_getNaaResourceBlock","naaBlock","getNaaResourceBlock","newDataOffset","endOfBlockOffset","_readTag","getSubsampling","fileDataOffset","numberOfColorComponents","SIZE","components","componentOffset","Types","ids","compontent","getComponentIds","types","17","18","33","34","65","66","getSamplingType","getLength","OFFSET","getNumberOfColorComponents","Bits Per Sample","getDataPrecision","Image Height","getImageHeight","Image Width","getImageWidth","Color Components","Subsampling","4096","4097","4098","0","6","num","status","14","15","19","22","23","25","26","27","28","29","30","31","33434","33437","34850","34852","34855","34856","34858","34859","34864","34865","34866","34867","34868","34869","36864","36867","36868","36873","36880","36881","36882","37121","37122","37377","37378","37379","37380","37381","37382","37383","37384","TagNamesCommon","37385","37386","37393","37394","C","R","S","T","U","37395","37396","37500","37510","37520","37521","37522","37888","37889","37890","37891","37892","37893","40960","40961","40962","40963","40964","40965","41483","41484","41486","41487","41488","41492","_ref","_ref2","y","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","42016","42032","42033","42034","42035","42036","42037","42080","42081","42082","42240","59932","59933","65000","65001","65002","65100","65101","65102","65105","65106","65107","65108","65109","65110","65111","65112","254","65537","4294967295","255","257","258","259","262","263","264","265","266","269","270","271","272","273","274","277","279","280","281","282","283","284","285","287","290","297","301","305","315","317","318","319","321","322","323","330","332","337","338","339","formats","sample","513","514","529","530","531","18246","18249","33432","33550","33723","33920","33922","34118","34264","34377","34665","34675","34735","34736","34737","34853","40091","40092","40093","40094","40095","42112","42113","50341","50707","50708","50709","50721","50722","50723","50724","50725","50726","50727","50728","50729","50730","50731","50732","50734","50735","50736","50739","50741","50778","50779","50781","50827","50828","50831","50832","50833","50834","50879","50885","50898","50899","50931","50932","50933","50934","50936","50937","50938","50939","50940","50941","50942","50964","50965","50966","50967","50968","50969","50970","50971","50972","50973","50981","50982","51043","51044","51058","51081","51089","51090","51091","51105","51107","51108","51109","51110","51111","51112","tagNames0thExifIfds","TagNames0thIfd","TagNamesExifIfd","0th","exif","gps","TagNamesGpsIfd","interoperability","TagNamesInteroperabilityIfd","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","getTagValueAt","read0thIfd","readIfd","get0thIfdOffset","ifdType","FIELD_COUNT_SIZE","numberOfFields","fieldIndex","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagValueFitsInOffsetSlot","tagValueOffset","tagValueFitsInDataView","splitNullSeparatedAsciiString","TagNames","tagDescription","getDescriptionFromTagValue","count","readInteroperabilityIfd","readGpsIfd","readExifIfd","MIN_TIFF_DATA_BUFFER_LENGTH","MIN_JPEG_DATA_BUFFER_LENGTH","TIFF_ID","TIFF_ID_OFFSET","TIFF_FILE_HEADER_OFFSET","JPEG_ID","JPEG_ID_SIZE","APP_ID_OFFSET","APP_MARKER_SIZE","TIFF_HEADER_OFFSET","IPTC_DATA_OFFSET","XMP_DATA_OFFSET","APP2_ICC_DATA_OFFSET","APP2_ICC_IDENTIFIER","ICC_CHUNK_NUMBER_OFFSET","ICC_TOTAL_CHUNKS_OFFSET","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP13_IPTC_IDENTIFIER","isTiffFile","littleEndian","hasTiffMarker","isSOF0Marker","appMarkerPosition","isSOF2Marker","isApp2ICCMarker","markerIdLength","isApp1ExifMarker","isApp1XMPMarker","isApp13PhotoshopMarker","isAppMarker","appMarker","parseAppMarkers","fieldLength","sof0DataOffset","sof2DataOffset","iptcDataOffset","xmpDataOffset","xmpFieldLength","iccChunks","hasAppMarkers","isJpegFile","iccDataOffset","iccDataLength","iccChunkNumber","iccChunksTotal","chunksTotal","_classCallCheck","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","load","loadView","options","expanded","DataViewWrapper","getDataView","foundMetaData","_ImageHeader$parseApp","ImageHeader","hasFileData","readTags","FileTags","file","hasExifData","Tags","hasIptcData","IptcTags","hasXmpData","XmpTags","xmp","iccDataOffsets","hasIccData","IccTags","exifErrors","errors"],"mappings":"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","file":"exif-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i, false));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nfunction getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'LightSource': (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    }\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder) / getLongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return getSlongAt(dataView, offset, byteOrder) / getSlongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names';\nimport {getStringFromDataView, getUnicodeStringFromDataView} from './utils';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\nfunction read(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = dataView.buffer;\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    for (const offset of Object.keys(iccProfile)) {\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return DOMParser;\n    }\n    try {\n        return eval('require')('xmldom').DOMParser; // This stops Webpack from replacing the require with a generic import and bundling the module.\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue\n};\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\nimport XmpTagNames from './xmp-tag-names';\nimport DOMParser from './dom-parser';\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, metadataSize) {\n    try {\n        const doc = getDocument(dataView, dataOffset, metadataSize);\n        const rdf = getRDF(doc);\n\n        return parseXMPObject(convertToObject(rdf, true));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getDocument(dataView, dataOffset, metadataSize) {\n    const Parser = DOMParser.get();\n    if (!Parser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const domParser = new Parser();\n    const xmlSource = getStringFromDataView(dataView, dataOffset, metadataSize);\n    const doc = domParser.parseFromString(xmlSource, 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return doc;\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            Object.assign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                Object.assign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        return getDescriptionOfArray(value);\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${value[key].value}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    } else if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    } else if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    } else if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    Object.assign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        Object.assign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        Object.assign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    Object.assign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n\n    if (hasNestedArrayValue(item)) {\n        return parseNodeChildrenAsTags(item.value);\n    }\n\n    return {\n        value: item.value,\n        attributes: parseNodeAttributes(item),\n        description: getDescription(item.value)\n    };\n}\n\nfunction hasNestedArrayValue(node) {\n    return node.attributes['rdf:parseType'] === 'Resource';\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                return value.length === 2 ? 'ObjectData Preview File Format' : 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names';\nimport TagDecoder from './tag-decoder';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset) {\n    try {\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset) {\n    const tags = {};\n    let encoding = undefined;\n\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding);\n\n        if (tag === null) {\n            break;\n        }\n\n        if ('encoding' in tag) {\n            encoding = tag.encoding;\n        }\n\n        if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n            tags[tag.name] = {\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            };\n        } else {\n            if (!(tags[tag.name] instanceof Array)) {\n                tags[tag.name] = [{\n                    id: tags[tag.name].id,\n                    value: tags[tag.name].value,\n                    description: tags[tag.name].description\n                }];\n            }\n            tags[tag.name].push({\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            });\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return value + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (value) => {\n            return value.map((num) => {\n                if (`${num}`.length === 1) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils';\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x829a: 'ExposureTime',\n    0x829d: 'FNumber',\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Undefined';\n            } else if (value === 1) {\n                return 'Manual';\n            } else if (value === 2) {\n                return 'Normal program';\n            } else if (value === 3) {\n                return 'Aperture priority';\n            } else if (value === 4) {\n                return 'Shutter priority';\n            } else if (value === 5) {\n                return 'Creative program';\n            } else if (value === 6) {\n                return 'Action program';\n            } else if (value === 7) {\n                return 'Portrait mode';\n            } else if (value === 8) {\n                return 'Landscape mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': (value) => {\n            return value.map((character) => {\n                if (character === 0x31) {\n                    return 'Y';\n                } else if (character === 0x32) {\n                    return 'Cb';\n                } else if (character === 0x33) {\n                    return 'Cr';\n                } else if (character === 0x34) {\n                    return 'R';\n                } else if (character === 0x35) {\n                    return 'G';\n                } else if (character === 0x36) {\n                    return 'B';\n                }\n            }).join('');\n        }\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: 'ShutterSpeedValue',\n    0x9202: 'ApertureValue',\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: 'MaxApertureValue',\n    0x9206: 'SubjectDistance',\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Average';\n            } else if (value === 2) {\n                return 'CenterWeightedAverage';\n            } else if (value === 3) {\n                return 'Spot';\n            } else if (value === 4) {\n                return 'MultiSpot';\n            } else if (value === 5) {\n                return 'Pattern';\n            } else if (value === 6) {\n                return 'Partial';\n            } else if (value === 255) {\n                return 'Other';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon['LightSource']\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: 'FocalLength',\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x9400: 'AmbientTemperature',\n    0x9401: 'Humidity',\n    0x9402: 'Pressure',\n    0x9403: 'WaterDepth',\n    0x9404: 'Acceleration',\n    0x9405: 'CameraElevationAngle',\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': (value) => {\n            if (value === 1) {\n                return 'sRGB';\n            } else if (value === 0xffff) {\n                return 'Uncalibrated';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': (value) => {\n            if (value === 2) {\n                return 'inches';\n            } else if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal process';\n            } else if (value === 1) {\n                return 'Custom process';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto exposure';\n            } else if (value === 1) {\n                return 'Manual exposure';\n            } else if (value === 2) {\n                return 'Auto bracket';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto white balance';\n            } else if (value === 1) {\n                return 'Manual white balance';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Digital zoom was not used';\n            }\n            return value;\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Standard';\n            } else if (value === 1) {\n                return 'Landscape';\n            } else if (value === 2) {\n                return 'Portrait';\n            } else if (value === 3) {\n                return 'Night scene';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Low saturation';\n            } else if (value === 2) {\n                return 'High saturation';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: 'LensSpecification',\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: 'XResolution',\n    0x011b: 'YResolution',\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: 'XPosition',\n    0x011f: 'YPosition',\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: (value) => {\n            if (value === 2) {\n                return 'inches';\n            }\n            if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: 'WhitePoint',\n    0x013f: 'PrimaryChromaticities',\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: 'YCbCrCoefficients',\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: 'ReferenceBlackWhite',\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNames0thIfd from './tag-names-0th-ifd';\nimport TagNamesExifIfd from './tag-names-exif-ifd';\nimport TagNamesGpsIfd from './tag-names-gps-ifd';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd';\n\nconst tagNames0thExifIfds = Object.assign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport default {\n    '0th': tagNames0thExifIfds,\n    'exif': tagNames0thExifIfds,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order';\nimport Types from './types';\nimport TagNames from './tag-names';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport default {\n    read\n};\n\nfunction read(dataView, tiffHeaderOffset) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = Types.getShortAt(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n        offset += FIELD_SIZE;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n        return {\n            id: tagCode,\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n    }\n\n    return {\n        id: tagCode,\n        name: `undefined-${tagCode}`,\n        value: tagValue,\n        description: tagValue\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\n    let value = [];\n\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (const character of string) {\n        if (character === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += character;\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\n\nconst MIN_TIFF_DATA_BUFFER_LENGTH = 4;\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst TIFF_ID = 0x2a;\nconst TIFF_ID_OFFSET = 2;\nconst TIFF_FILE_HEADER_OFFSET = 0;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst LITTLE_ENDIAN = 0x4949;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpDataOffset;\n    let xmpFieldLength;\n    let iccChunks;\n\n    if (isTiffFile(dataView)) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n\n    if (!isJpegFile(dataView)) {\n        throw new Error('Invalid image format');\n    }\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (isApp1XMPMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpDataOffset = appMarkerPosition + XMP_DATA_OFFSET;\n            xmpFieldLength = fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE);\n        } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET, false);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET, false);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpDataOffset,\n        xmpFieldLength,\n        iccChunks\n    };\n}\n\nfunction isTiffFile(dataView) {\n    return (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const littleEndian = dataView.getUint16(0) === LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction isJpegFile(dataView) {\n    return (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0, false) === JPEG_ID);\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp1XMPMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition, false);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2018  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport DataViewWrapper from './dataview';\nimport ImageHeader from './image-header';\nimport Tags from './tags';\nimport FileTags from './file-tags';\nimport IptcTags from './iptc-tags';\nimport XmpTags from './xmp-tags';\nimport IccTags from './icc-tags';\nimport exifErrors from './errors';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {expanded: false}) {\n    return loadView(getDataView(data), options);\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(dataView, options = {expanded: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    const {fileDataOffset, tiffHeaderOffset, iptcDataOffset, xmpDataOffset, xmpFieldLength, iccChunks} = ImageHeader.parseAppMarkers(dataView);\n\n    if (hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (options.expanded) {\n            tags.file = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset);\n        if (options.expanded) {\n            tags.exif = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset);\n        if (options.expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasXmpData(xmpDataOffset)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpDataOffset, xmpFieldLength);\n        if (options.expanded) {\n            tags.xmp = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks);\n        if (options.expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpDataOffset) {\n    return xmpDataOffset !== undefined;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n"],"sourceRoot":""}