{"version":3,"file":"exif-reader.js","mappings":"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","sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/webpack/runtime/define property getters","webpack://ExifReader/webpack/runtime/hasOwnProperty shorthand","webpack://ExifReader/webpack/runtime/make namespace object","webpack://ExifReader/./src/dataview.js","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/constants.js","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/image-header-jpeg.js","webpack://ExifReader/./src/image-header-png.js","webpack://ExifReader/./src/image-header-iso-bmff-iloc.js","webpack://ExifReader/./src/image-header-iso-bmff-utils.js","webpack://ExifReader/./src/image-header-iso-bmff.js","webpack://ExifReader/./src/image-header-heic.js","webpack://ExifReader/./src/image-header-gif.js","webpack://ExifReader/./src/xml.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/image-header-tiff.js","webpack://ExifReader/./src/image-header-avif.js","webpack://ExifReader/./src/image-header-webp.js","webpack://ExifReader/./src/tag-names-common.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/tag-names-mpf-ifd.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tags-helpers.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/mpf-tags.js","webpack://ExifReader/./src/file-tags.js","webpack://ExifReader/./src/jfif-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/text-decoder.js","webpack://ExifReader/./src/tag-decoder.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/dom-parser.js","webpack://ExifReader/./src/photoshop-tag-names.js","webpack://ExifReader/./src/photoshop-tags.js","webpack://ExifReader/./src/icc-tag-names.js","webpack://ExifReader/./src/icc-tags.js","webpack://ExifReader/./src/png-file-tags.js","webpack://ExifReader/./src/png-text-tags.js","webpack://ExifReader/./src/png-tags.js","webpack://ExifReader/./src/vp8x-tags.js","webpack://ExifReader/./src/gif-file-tags.js","webpack://ExifReader/./src/thumbnail.js","webpack://ExifReader/./src/errors.js","webpack://ExifReader/./src/exif-reader.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport DataViewWrapper from './dataview.js';\n\nexport function getDataView(data, byteOffset, byteLength) {\n    try {\n        return new DataView(data, byteOffset, byteLength);\n    } catch (error) {\n        return new DataViewWrapper(data, byteOffset, byteLength);\n    }\n}\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getNullTerminatedStringFromDataView(dataView, offset) {\n    const chars = [];\n    let i = 0;\n    while (offset + i < dataView.byteLength) {\n        const char = dataView.getUint8(offset + i);\n        if (char === 0) {\n            break;\n        }\n        chars.push(char);\n        i++;\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    if (chars[chars.length - 1] === 0) {\n        chars.pop();\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getPascalStringFromDataView(dataView, offset) {\n    const size = dataView.getUint8(offset);\n    const string = getStringFromDataView(dataView, offset + 1, size);\n    return [size, string];\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        if (typeof image === 'string') {\n            // This only happens during the build tests using Node 16+ (npm run test:build).\n            return btoa(image);\n        }\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n\nexport function dataUriToBuffer(dataUri) {\n    const data = dataUri.substring(dataUri.indexOf(',') + 1);\n\n    if (dataUri.indexOf(';base64') !== -1) {\n        if (typeof atob !== 'undefined') {\n            return Uint8Array.from(atob(data), (char) => char.charCodeAt(0)).buffer;\n        }\n        if (typeof Buffer === 'undefined') {\n            return undefined;\n        }\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n        }\n        return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n    }\n\n    const decodedData = decodeURIComponent(data);\n    if (typeof Buffer !== 'undefined') {\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(decodedData); // eslint-disable-line no-undef\n        }\n        return new Buffer(decodedData); // eslint-disable-line no-undef\n    }\n    return Uint8Array.from(decodedData, (char) => char.charCodeAt(0)).buffer;\n}\n\nexport function padStart(string, length, character) {\n    const padding = strRepeat(character, length - string.length);\n    return padding + string;\n}\n\nexport function parseFloatRadix(string, radix) {\n    return parseInt(string.replace('.', ''), radix)\n        / Math.pow(radix, (string.split('.')[1] || '').length);\n}\n\nexport function strRepeat(string, num) {\n    return new Array(num + 1).join(string);\n}\n\nexport const COMPRESSION_METHOD_NONE = undefined;\nexport const COMPRESSION_METHOD_DEFLATE = 0;\n\nexport function decompress(dataView, compressionMethod, encoding, returnType = 'string') {\n    if (compressionMethod === COMPRESSION_METHOD_DEFLATE) {\n        if (typeof DecompressionStream === 'function') {\n            const decompressionStream = new DecompressionStream('deflate');\n            const decompressedStream = new Blob([dataView]).stream().pipeThrough(decompressionStream);\n            if (returnType === 'dataview') {\n                return new Response(decompressedStream).arrayBuffer().then((arrayBuffer) => new DataView(arrayBuffer));\n            }\n            return new Response(decompressedStream).arrayBuffer()\n                .then((buffer) => new TextDecoder(encoding).decode(buffer));\n        }\n    }\n    if (compressionMethod !== undefined) {\n        return Promise.reject(`Unknown compression method ${compressionMethod}.`);\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_PHOTOSHOP: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_AVIF: true,\n    USE_WEBP: true,\n    USE_GIF: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else if (isFillByte(dataView, appMarkerPosition)) {\n            appMarkerPosition++;\n            continue;\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP0_JFIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isFillByte(dataView, appMarkerPosition) {\n    return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringFromDataView, getNullTerminatedStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_ZTXT = 'zTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\nexport const TYPE_ICCP = 'iCCP';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView, async) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        } else if (isPngTextChunk(dataView, offset, async)) {\n            offsets.hasAppMarkers = true;\n            const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n            if (!offsets.pngTextChunks) {\n                offsets.pngTextChunks = [];\n            }\n            offsets.pngTextChunks.push({\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n                type: chunkType,\n                offset: offset + PNG_CHUNK_DATA_OFFSET\n            });\n        } else if (isPngExifChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_ICC && async && isPngIccpChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            const chunkDataLength = dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET);\n            const iccHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n            const {profileName, compressionMethod, compressedProfileOffset} = parseIccHeader(dataView, iccHeaderOffset);\n            if (!offsets.iccChunks) {\n                offsets.iccChunks = [];\n            }\n            offsets.iccChunks.push({\n                offset: compressedProfileOffset,\n                length: chunkDataLength - (compressedProfileOffset - iccHeaderOffset),\n                chunkNumber: 1,\n                chunksTotal: 1,\n                profileName,\n                compressionMethod\n            });\n        } else if (isPngChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            if (!offsets.pngChunkOffsets) {\n                offsets.pngChunkOffsets = [];\n            }\n            offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ITXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isPngTextChunk(dataView, offset, async) {\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return chunkType === TYPE_TEXT || chunkType === TYPE_ITXT || (chunkType === TYPE_ZTXT && async);\n}\n\nfunction isPngExifChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\n\nfunction isPngIccpChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ICCP;\n}\n\nfunction isPngChunk(dataView, offset) {\n    const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n\nfunction parseIccHeader(dataView, offset) {\n    const NULL_SEPARATOR_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    const profileName = getNullTerminatedStringFromDataView(dataView, offset);\n    offset += profileName.length + NULL_SEPARATOR_SIZE;\n\n    const compressionMethod = dataView.getUint8(offset);\n    offset += COMPRESSION_METHOD_SIZE;\n\n    return {\n        profileName,\n        compressionMethod,\n        compressedProfileOffset: offset\n    };\n}\n","import {get64BitValue} from './image-header-iso-bmff-utils.js';\n\nexport function parseItemLocationBox(dataView, version, contentOffset, boxLength) {\n    const FLAGS_SIZE = 3;\n\n    const {offsets, sizes} = getItemLocationBoxOffsetsAndSizes(version, contentOffset + FLAGS_SIZE);\n\n    const offsetSize = dataView.getUint8(offsets.offsetSize) >> 4;\n    sizes.item.extent.extentOffset = offsetSize;\n    const lengthSize = dataView.getUint8(offsets.lengthSize) & 0x0f;\n    sizes.item.extent.extentLength = lengthSize;\n    const baseOffsetSize = dataView.getUint8(offsets.baseOffsetSize) >> 4;\n    sizes.item.baseOffset = baseOffsetSize;\n    const indexSize = getIndexSize(dataView, offsets.indexSize, version);\n    sizes.item.extent.extentIndex = indexSize !== undefined ? indexSize : 0;\n    const itemCount = getItemCount(dataView, offsets.itemCount, version);\n\n    return {\n        type: 'iloc',\n        items: getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount),\n        length: boxLength\n    };\n}\n\nfunction getItemLocationBoxOffsetsAndSizes(version, contentOffset) {\n    const sizes = {\n        item: {\n            dataReferenceIndex: 2,\n            extentCount: 2,\n            extent: {}\n        }\n    };\n    if (version < 2) {\n        sizes.itemCount = 2;\n        sizes.item.itemId = 2;\n    } else if (version === 2) {\n        sizes.itemCount = 4;\n        sizes.item.itemId = 4;\n    }\n    if (version === 1 || version === 2) {\n        sizes.item.constructionMethod = 2;\n    } else {\n        sizes.item.constructionMethod = 0;\n    }\n\n    const offsets = {\n        offsetSize: contentOffset,\n        lengthSize: contentOffset,\n        baseOffsetSize: contentOffset + 1,\n        indexSize: contentOffset + 1\n    };\n    offsets.itemCount = contentOffset + 2;\n    offsets.items = offsets.itemCount + sizes.itemCount;\n    offsets.item = {\n        itemId: 0\n    };\n    offsets.item.constructionMethod = offsets.item.itemId + sizes.item.itemId;\n    offsets.item.dataReferenceIndex = offsets.item.constructionMethod + sizes.item.constructionMethod;\n\n    return {offsets, sizes};\n}\n\nfunction getIndexSize(dataView, offset, version) {\n    if (version === 1 || version === 2) {\n        return dataView.getUint8(offset) & 0x0f;\n    }\n    return undefined;\n}\n\nfunction getItemCount(dataView, offset, version) {\n    if (version < 2) {\n        return dataView.getUint16(offset);\n    } else if (version === 2) {\n        return dataView.getUint32(offset);\n    }\n    return undefined;\n}\n\nfunction getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount) {\n    if (itemCount === undefined) {\n        return [];\n    }\n\n    const items = [];\n    let offset = offsets.items;\n\n    for (let i = 0; i < itemCount; i++) {\n        const item = {extents: []};\n        item.itemId = getItemId(dataView, offset, version);\n        offset += sizes.item.itemId;\n        item.constructionMethod = (version === 1) || (version === 2) ? dataView.getUint16(offset) & 0x0f : undefined;\n        offset += sizes.item.constructionMethod;\n        item.dataReferenceIndex = dataView.getUint16(offset);\n        offset += sizes.item.dataReferenceIndex;\n        item.baseOffset = getVariableSizedValue(dataView, offset, sizes.item.baseOffset);\n        offset += sizes.item.baseOffset;\n        item.extentCount = dataView.getUint16(offset);\n        offset += sizes.item.extentCount;\n        for (let j = 0; j < item.extentCount; j++) {\n            const extent = {};\n\n            extent.extentIndex = getExtentIndex(dataView, version, offset, indexSize);\n            offset += sizes.item.extent.extentIndex;\n            extent.extentOffset = getVariableSizedValue(dataView, offset, offsetSize);\n            offset += sizes.item.extent.extentOffset;\n            extent.extentLength = getVariableSizedValue(dataView, offset, lengthSize);\n            offset += sizes.item.extent.extentLength;\n\n            item.extents.push(extent);\n        }\n\n        items.push(item);\n    }\n\n    return items;\n}\n\nfunction getItemId(dataView, offset, version) {\n    if (version < 2) {\n        return dataView.getUint16(offset);\n    } else if (version === 2) {\n        return dataView.getUint32(offset);\n    }\n    return undefined;\n}\n\nfunction getExtentIndex(dataView, version, offset, indexSize) {\n    if ((version === 1 || version === 2) && indexSize > 0) {\n        return getVariableSizedValue(dataView, offset, indexSize);\n    }\n    return undefined;\n}\n\nfunction getVariableSizedValue(dataView, offset, size) {\n    if (size === 4) {\n        return dataView.getUint32(offset);\n    }\n    if (size === 8) {\n        // eslint-disable-next-line no-console\n        console.warn('This file uses an 8-bit offset which is currently not supported by ExifReader. Contact the maintainer to get it fixed.');\n        return get64BitValue(dataView, offset);\n    }\n    return 0;\n}\n","export function get64BitValue(dataView, offset) {\n    // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n    // wait until there are real-world examples where it is necessary.\n    return dataView.getUint32(offset + 4);\n}\n","import Constants from './constants.js';\nimport {getNullTerminatedStringFromDataView, getStringFromDataView} from './utils.js';\n// import {get64BitValue} from './image-header-iso-bmff-utils.js';\nimport {parseItemLocationBox} from './image-header-iso-bmff-iloc.js';\n\n// HEIC and AVIF files are based on the ISO-BMFF format. This file format is\n// built up by boxes. There are boxes and full boxes. All box types have a\n// length (4 or 8 bytes) and a type (4 bytes). Full boxes also have a version\n// (1 byte) and flags (3 bytes). The boxes can be nested. Each box type has its\n// own structure that can be seen in the specification.\n//\n// For metadata we are interested in the meta box. The meta box contains sub\n// boxes. The sub box type iinf has info about which types of metadata are\n// present in the file. The item ID we get from there we then look up in the\n// iloc sub box to get the offset to the real location of the metadata.\n//\n// The ICC profiles is a bit more nested. We have to look in\n// meta > iprp > ipco > colr, and then the whole profile is stored there.\n\n// These are actually 32-bit strings, not random IDs, e.g. \"ftyp\" and \"meta\".\nconst TYPE_FTYP = 0x66747970;\nconst TYPE_IPRP = 0x69707270;\nconst TYPE_META = 0x6d657461;\nconst TYPE_ILOC = 0x696c6f63;\nconst TYPE_IINF = 0x69696e66;\nconst TYPE_INFE = 0x696e6665;\nconst TYPE_IPCO = 0x6970636f;\nconst TYPE_COLR = 0x636f6c72;\n\n// const EXTENSION_TYPE_FDEL = 0x6664656c;\n\nexport const ITEM_INFO_TYPE_EXIF = 0x45786966;\nexport const ITEM_INFO_TYPE_MIME = 0x6d696d65;\nconst ITEM_INFO_TYPE_URI = 0x75726920;\n\n/**\n * Parses a ISO-BMFF box from the provided data view starting at the given offset.\n *\n * @param {DataView} dataView - The DataView to parse.\n * @param {number} offset - The offset at which to start parsing.\n * @returns {Object} The parsed box.\n */\nexport function parseBox(dataView, offset) {\n    const BOX_TYPE_OFFSET = 4;\n    const BOX_MIN_LENGTH = 8;\n    const VERSION_SIZE = 1;\n\n    const {length, contentOffset} = getBoxLength(dataView, offset);\n    if (length < BOX_MIN_LENGTH) {\n        return undefined;\n    }\n\n    const type = dataView.getUint32(offset + BOX_TYPE_OFFSET);\n\n    if (type === TYPE_FTYP) {\n        return parseFileTypeBox(dataView, contentOffset, length);\n    }\n    if (type === TYPE_IPRP) {\n        return parseItemPropertiesBox(dataView, offset, contentOffset, length);\n    }\n    if (type === TYPE_IPCO) {\n        return parseItemPropertyContainerBox(dataView, offset, contentOffset, length);\n    }\n    if (type === TYPE_COLR) {\n        return parseColorInformationBox(dataView, contentOffset, length);\n    }\n\n    // The following are full boxes, also containing version and flags.\n    const version = dataView.getUint8(contentOffset);\n\n    if (type === TYPE_META) {\n        return parseMetadataBox(dataView, offset, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_ILOC) {\n        return parseItemLocationBox(dataView, version, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_IINF) {\n        return parseItemInformationBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_INFE) {\n        return parseItemInformationEntryBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n    }\n\n    return {\n        // type: getStringFromDataView(dataView, offset + BOX_TYPE_OFFSET, 4),\n        type: undefined,\n        length\n    };\n}\n\n/**\n * @typedef {Object} BoxLength\n * @property {number} length The length of the box including length and type.\n * @property {number} contentOffset\n */\n\n/**\n * @param {DataView} dataView\n * @param {number} offset\n * @returns {BoxLength}\n */\nfunction getBoxLength(dataView, offset) {\n    const BOX_LENGTH_SIZE = 4;\n    const BOX_TYPE_SIZE = 4;\n    const BOX_EXTENDED_SIZE = 8;\n    const BOX_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const boxLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(boxLength)) {\n        return {\n            length: dataView.byteLength - offset,\n            contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE,\n        };\n    }\n    if (hasExtendedSize(boxLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return {\n                length: dataView.getUint32(offset + BOX_EXTENDED_SIZE_LOW_OFFSET),\n                contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE + BOX_EXTENDED_SIZE,\n            };\n        }\n    }\n\n    return {\n        length: boxLength,\n        contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE,\n    };\n}\n\nfunction extendsToEndOfFile(boxLength) {\n    return boxLength === 0;\n}\n\nfunction hasExtendedSize(boxLength) {\n    return boxLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const BOX_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + BOX_EXTENDED_SIZE_OFFSET) === 0;\n}\n\n/**\n * @typedef {Object} Offsets\n * @property {number} tiffHeaderOffset\n * @property {Array<Object>} xmpChunks\n * @property {Array<Object>} iccChunks\n * @property {boolean} hasAppMarkers\n */\n\n/**\n * Finds the offsets of ISO-BMFF-structued data in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Offsets} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nexport function findOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_XMP || Constants.USE_ICC) {\n        const offsets = {};\n        const metaBox = findMetaBox(dataView);\n\n        if (!metaBox) {\n            return {hasAppMarkers: false};\n        }\n\n        if (Constants.USE_EXIF) {\n            offsets.tiffHeaderOffset = findExifOffset(dataView, metaBox);\n        }\n        if (Constants.USE_XMP) {\n            offsets.xmpChunks = findXmpChunks(metaBox);\n        }\n        if (Constants.USE_ICC) {\n            offsets.iccChunks = findIccChunks(metaBox);\n        }\n        offsets.hasAppMarkers = (offsets.tiffHeaderOffset !== undefined) || (offsets.xmpChunks !== undefined) || (offsets.iccChunks !== undefined);\n        return offsets;\n    }\n\n    return {};\n}\n\nfunction findMetaBox(dataView) {\n    const BOX_LENGTH_SIZE = 4;\n    const BOX_TYPE_SIZE = 4;\n\n    let offset = 0;\n\n    while (offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE <= dataView.byteLength) {\n        const box = parseBox(dataView, offset);\n\n        if (box === undefined) {\n            break;\n        }\n\n        if (box.type === 'meta') {\n            return box;\n        }\n\n        offset += box.length;\n    }\n\n    return undefined;\n}\n\nfunction findExifOffset(dataView, metaBox) {\n    try {\n        const exifItemId = findIinfExifItemId(metaBox).itemId;\n        const ilocItem = findIlocItem(metaBox, exifItemId);\n        const exifOffset = ilocItem.baseOffset + ilocItem.extents[0].extentOffset;\n        return getTiffHeaderOffset(dataView, exifOffset);\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction findIinfExifItemId(metaBox) {\n    return metaBox.subBoxes.find((box) => box.type === 'iinf').itemInfos.find((itemInfo) => itemInfo.itemType === ITEM_INFO_TYPE_EXIF);\n}\n\nfunction findIlocItem(metaBox, itemId) {\n    return metaBox.subBoxes.find((box) => box.type === 'iloc').items.find((item) => item.itemId === itemId);\n}\n\nfunction getTiffHeaderOffset(dataView, exifOffset) {\n    // ISO-BMFF formatted files store the Exif data as an \"Exif block\" where the\n    // first 32 bits is the TIFF header offset.\n    const TIFF_HEADER_OFFSET_SIZE = 4;\n    return exifOffset + TIFF_HEADER_OFFSET_SIZE + dataView.getUint32(exifOffset);\n}\n\nfunction findXmpChunks(metaBox) {\n    try {\n        const xmpItemId = findIinfXmpItemId(metaBox).itemId;\n        const ilocItem = findIlocItem(metaBox, xmpItemId);\n        const ilocItemExtent = findIlocItem(metaBox, xmpItemId).extents[0];\n        return [\n            {\n                dataOffset: ilocItem.baseOffset + ilocItemExtent.extentOffset,\n                length: ilocItemExtent.extentLength,\n            }\n        ];\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction findIinfXmpItemId(metaBox) {\n    return metaBox.subBoxes.find((box) => box.type === 'iinf')\n        .itemInfos.find((itemInfo) => itemInfo.itemType === ITEM_INFO_TYPE_MIME && itemInfo.contentType === 'application/rdf+xml');\n}\n\nfunction findIccChunks(metaBox) {\n    // This finds the first ICC chunk, but there could be one for each image\n    // that is embedded in the file. If it turns out we need to match the ICC\n    // chunk to a specific image, we need to check the \"ipma\" in addition to the\n    // \"ipco\" (currently we only extract the \"ipco\" so more code would be\n    // needed).\n    try {\n        const icc = metaBox.subBoxes.find((box) => box.type === 'iprp')\n            .subBoxes.find((box) => box.type === 'ipco')\n            .properties.find((box) => box.type === 'colr')\n            .icc;\n        if (icc) {\n            return [icc];\n        }\n    } catch (error) {\n        // Let it pass through.\n    }\n    return undefined;\n}\n\nfunction parseFileTypeBox(dataView, contentOffset, boxLength) {\n    const MAJOR_BRAND_SIZE = 4;\n    const majorBrand = getStringFromDataView(dataView, contentOffset, MAJOR_BRAND_SIZE);\n\n    return {\n        type: 'ftyp',\n        majorBrand,\n        length: boxLength\n    };\n}\n\nfunction parseItemPropertiesBox(dataView, startOffset, contentOffset, length) {\n    return {\n        type: 'iprp',\n        subBoxes: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n        length,\n    };\n}\n\nfunction parseItemPropertyContainerBox(dataView, startOffset, contentOffset, length) {\n    return {\n        type: 'ipco',\n        properties: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n        length,\n    };\n}\n\nfunction parseColorInformationBox(dataView, contentOffset, length) {\n    return {\n        type: 'colr',\n        icc: parseIcc(dataView, contentOffset),\n        length,\n    };\n}\n\nfunction parseIcc(dataView, contentOffset) {\n    const COLOR_TYPE_SIZE = 4;\n\n    const colorType = getStringFromDataView(dataView, contentOffset, COLOR_TYPE_SIZE);\n    if (colorType !== 'prof' && colorType !== 'rICC') {\n        // Support for nclx would require some restructuring for ICC handling.\n        // Probably do it as a separate feature instead of combining with ICC.\n        // Exiftool groups it under QuickTime. The test file test.avif has nclx.\n        return undefined;\n    }\n\n    return {\n        offset: contentOffset + COLOR_TYPE_SIZE,\n        length: dataView.getUint32(contentOffset + COLOR_TYPE_SIZE),\n        chunkNumber: 1,\n        chunksTotal: 1\n    };\n}\n\nfunction parseMetadataBox(dataView, startOffset, contentOffset, length) {\n    const FLAGS_SIZE = 3;\n\n    return {\n        type: 'meta',\n        subBoxes: parseSubBoxes(dataView, contentOffset + FLAGS_SIZE, length - (contentOffset + FLAGS_SIZE - startOffset)),\n        length\n    };\n}\n\n/**\n * @param {DataView} dataView\n * @param {number} offset The offset to start parsing from.\n * @param {number} length The length of all sub boxes combined.\n * @return {Array<Object>}\n */\nfunction parseSubBoxes(dataView, offset, length) {\n    const ACCEPTED_ITEM_INFO_TYPES = [\n        ITEM_INFO_TYPE_EXIF,\n        ITEM_INFO_TYPE_MIME,\n    ];\n\n    const subBoxes = [];\n    let currentOffset = offset;\n    while (currentOffset < offset + length) {\n        const box = parseBox(dataView, currentOffset);\n        if (box === undefined) {\n            break;\n        }\n        if (box.type !== undefined && (box.itemType === undefined || ACCEPTED_ITEM_INFO_TYPES.indexOf(box.itemType) !== -1)) {\n            subBoxes.push(box);\n        }\n        currentOffset += box.length;\n    }\n    return subBoxes;\n}\n\nfunction parseItemInformationBox(dataView, startOffset, version, contentOffset, length) {\n    const {offsets} = getItemInformationBoxOffsetsAndSizes(version, contentOffset);\n\n    return {\n        type: 'iinf',\n        itemInfos: parseSubBoxes(dataView, offsets.itemInfos, length - (offsets.itemInfos - startOffset)),\n        length\n    };\n}\n\nfunction getItemInformationBoxOffsetsAndSizes(version, contentOffset) {\n    const FLAGS_SIZE = 3;\n\n    const offsets = {entryCount: contentOffset + FLAGS_SIZE};\n    const sizes = {};\n\n    if (version === 0) {\n        sizes.entryCount = 2;\n    } else {\n        sizes.entryCount = 4;\n    }\n\n    offsets.itemInfos = offsets.entryCount + sizes.entryCount;\n\n    return {offsets};\n}\n\nfunction parseItemInformationEntryBox(dataView, startOffset, version, contentOffset, length) {\n    const FLAGS_SIZE = 3;\n\n    contentOffset += FLAGS_SIZE;\n    const entry = {type: 'infe', length};\n\n    if (version === 0 || version === 1) {\n        entry.itemId = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n        contentOffset += entry.itemName.length + 1;\n        // entry.contentType = getNullTerminatedStringFromDataView(dataView, offset);\n        // offset += entry.contentType.length + 1;\n        // Since contentEncoding is optional we need to check the offset against length here.\n        // entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, offset);\n        // offset += entry.contentEncoding.length + 1;\n    }\n    // The following code should be correct but we currently don't need it.\n    // if (version === 1) {\n    //     // Everything here is optional, check the offset against length.\n    //     entry.extensionType = dataView.getUint32(contentOffset);\n    //     contentOffset += 4;\n    //     if (entry.extensionType === EXTENSION_TYPE_FDEL) {\n    //         entry.contentLocation = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    //         contentOffset += entry.contentLocation.length + 1;\n    //         entry.contentMd5 = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    //         contentOffset += entry.contentMd5.length + 1;\n    //         entry.contentLength = get64BitValue(dataView, contentOffset);\n    //         contentOffset += 8;\n    //         entry.transferLength = get64BitValue(dataView, contentOffset);\n    //         contentOffset += 8;\n    //         entry.entryCount = dataView.getUint8(contentOffset);\n    //         contentOffset += 1;\n    //         entry.entries = [];\n    //         for (let i = 0; i < entry.entryCount; i++) {\n    //             entry.entries.push({groupId: dataView.getUint32(contentOffset)});\n    //             contentOffset += 4;\n    //         }\n    //     }\n    // }\n    if (version >= 2) {\n        if (version === 2) {\n            entry.itemId = dataView.getUint16(contentOffset);\n            contentOffset += 2;\n        } else if (version === 3) {\n            entry.itemId = dataView.getUint32(contentOffset);\n            contentOffset += 4;\n        }\n        entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        // entry.itemTypeAscii = getStringFromDataView(dataView, offset, 4); // For testing.\n        entry.itemType = dataView.getUint32(contentOffset);\n        contentOffset += 4;\n        entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n        contentOffset += entry.itemName.length + 1;\n        if (entry.itemType === ITEM_INFO_TYPE_MIME) {\n            entry.contentType = getNullTerminatedStringFromDataView(dataView, contentOffset);\n            contentOffset += entry.contentType.length + 1;\n            if (startOffset + length > contentOffset) {\n                entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, contentOffset);\n                contentOffset += entry.contentEncoding.length + 1;\n            }\n        } else if (entry.itemType === ITEM_INFO_TYPE_URI) {\n            entry.itemUri = getNullTerminatedStringFromDataView(dataView, contentOffset);\n            contentOffset += entry.itemUri.length + 1;\n        }\n    }\n    return entry;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {parseBox, findOffsets} from './image-header-iso-bmff.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\n/**\n * Checks if the provided data view represents a HEIC/HEIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents a HEIC/HEIF file, false otherwise.\n */\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n\n    try {\n        const headerBox = parseBox(dataView, 0);\n        return headerBox && HEIC_MAJOR_BRANDS.indexOf(headerBox.majorBrand) !== -1;\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Finds the offsets of a HEIC file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findHeicOffsets(dataView) {\n    return findOffsets(dataView);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isGifFile,\n    findOffsets\n};\n\nconst GIF_SIGNATURE_SIZE = 6;\nconst GIF_SIGNATURES = ['GIF87a', 'GIF89a'];\n\nfunction isGifFile(dataView) {\n    return !!dataView && GIF_SIGNATURES.includes(getStringFromDataView(dataView, 0, GIF_SIGNATURE_SIZE));\n}\n\nfunction findOffsets() {\n    return {\n        gifHeaderOffset: 0\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isXMLFile,\n    findOffsets\n};\n\nconst XML_MARKER_OFFSET = 0;\nconst XML_MARKER = '<?xpacket begin';\n\nfunction isXMLFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, XML_MARKER_OFFSET, XML_MARKER.length) === XML_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const xmpChunks = [];\n    xmpChunks.push({dataOffset: XML_MARKER_OFFSET, length: dataView.byteLength});\n    return {\n        xmpChunks,\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Avif from './image-header-avif.js';\nimport Webp from './image-header-webp.js';\nimport Gif from './image-header-gif.js';\nimport Xml from './xml.js';\nimport {objectAssign} from './utils.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView, async) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return addFileType(Png.findPngOffsets(dataView, async), 'png', 'PNG');\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n    }\n\n    if (Constants.USE_AVIF && Avif.isAvifFile(dataView)) {\n        return addFileType(Avif.findAvifOffsets(dataView), 'avif', 'AVIF');\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n    }\n\n    if (Constants.USE_GIF && Gif.isGifFile(dataView)) {\n        return addFileType(Gif.findOffsets(dataView), 'gif', 'GIF');\n    }\n\n    if (Constants.USE_XMP && Xml.isXMLFile(dataView)) {\n        return addFileType(Xml.findOffsets(dataView), 'xml', 'XML');\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n    return objectAssign({}, offsets, {fileType: {value: fileType, description: fileTypeDescription}});\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification:\n// https://aomediacodec.github.io/av1-avif\n\nimport {parseBox, findOffsets} from './image-header-iso-bmff.js';\n\nexport default {\n    isAvifFile,\n    findAvifOffsets\n};\n\n/**\n * Checks if the provided data view represents an AVIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents an AVIF file, false otherwise.\n */\nfunction isAvifFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    try {\n        const headerBox = parseBox(dataView, 0);\n        return headerBox && headerBox.majorBrand === 'avif';\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Finds the offsets of an AVIF file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findAvifOffsets(dataView) {\n    return findOffsets(dataView);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n    let vp8xChunkOffset;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        } else if (chunkId === 'VP8X') {\n            hasAppMarkers = true;\n            vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks,\n        vp8xChunkOffset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] / value[1] > 0.25) {\n            const decimal = value[0] / value[1];\n            if (Number.isInteger(decimal)) {\n                return '' + decimal;\n            }\n            return decimal.toFixed(1);\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${value[0] / value[1]}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport const IFD_TYPE_0TH = '0th';\nexport const IFD_TYPE_1ST = '1st';\nexport const IFD_TYPE_EXIF = 'exif';\nexport const IFD_TYPE_GPS = 'gps';\nexport const IFD_TYPE_INTEROPERABILITY = 'interoperability';\nexport const IFD_TYPE_MPF = 'mpf';\n\nexport default {\n    [IFD_TYPE_0TH]: tagNames0thExifIfds,\n    [IFD_TYPE_1ST]: TagNames0thIfd,\n    [IFD_TYPE_EXIF]: tagNames0thExifIfds,\n    [IFD_TYPE_GPS]: TagNamesGpsIfd,\n    [IFD_TYPE_INTEROPERABILITY]: TagNamesInteroperabilityIfd,\n    [IFD_TYPE_MPF]: Constants.USE_MPF ? TagNamesMpfIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x935c: 'ImageSourceData',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengthFrom = parseFloat((value[0][0] / value[0][1]).toFixed(5));\n            const focalLengthTo = parseFloat((value[1][0] / value[1][1]).toFixed(5));\n            const focalLengths = `${focalLengthFrom}-${focalLengthTo} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            const maxAperture = 1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]));\n            return `${focalLengths} f/${parseFloat(maxAperture.toFixed(5))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Types from './types.js';\nimport TagNames, {IFD_TYPE_0TH, IFD_TYPE_1ST} from './tag-names.js';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport function get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nexport function readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0 && ifdType === IFD_TYPE_0TH) {\n            tags['Thumbnail'] = readIfd(dataView, IFD_TYPE_1ST, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport {IFD_TYPE_0TH, IFD_TYPE_EXIF, IFD_TYPE_GPS, IFD_TYPE_INTEROPERABILITY} from './tag-names.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nexport default {\n    read,\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, IFD_TYPE_0TH, tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_EXIF, tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_GPS, tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_INTEROPERABILITY, tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport {IFD_TYPE_MPF} from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nexport default {\n    read\n};\n\nconst ENTRY_SIZE = 16;\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, IFD_TYPE_MPF, dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = getImageOffset(i, tags['MPEntry'], byteOrder, dataOffset);\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction getImageOffset(imageIndex, mpEntry, byteOrder, dataOffset) {\n    if (isFirstIndividualImage(imageIndex)) {\n        return 0;\n    }\n    return getImageNumberValue(mpEntry.value, imageIndex * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n}\n\nfunction isFirstIndividualImage(imageIndex) {\n    return imageIndex === 0;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(tagValue instanceof DataView ? tagValue.buffer : Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    const tags = {};\n\n    if (typeof dataView === 'string') {\n        readTags(tags, dataView);\n        return tags;\n    }\n\n    const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n\n    const hasStandardTags = readTags(tags, standardXmp);\n\n    if (extendedXmp) {\n        const hasExtendedTags = readTags(tags, extendedXmp);\n\n        if (!hasStandardTags && !hasExtendedTags) {\n            // Some writers are not spec-compliant in that they split an XMP\n            // metadata tree over both the standard XMP block and the extended\n            // XMP block. If we failed parsing both of the XMPs in the regular\n            // way, we try to combine them to see if that works better.\n            delete tags._raw;\n            readTags(tags, combineChunks(dataView, chunks));\n        }\n    }\n\n    return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const domParser = DOMParser.get();\n    if (!domParser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        try {\n            if (isTagAttribute(name)) {\n                tags[getLocalName(name)] = {\n                    value: attributes[name],\n                    attributes: {},\n                    description: getDescription(attributes[name], name)\n                };\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        try {\n            if (!isNamespaceDefinition(name)) {\n                tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (isDuplicateTag(node)) {\n        return parseNodeAsDuplicateTag(node, name);\n    }\n    if (isEmptyResourceTag(node)) {\n        return {value: '', attributes: {}, description: ''};\n    }\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction isEmptyResourceTag(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        && (typeof node.value === 'string')\n        && (node.value.trim() === '');\n}\n\nfunction isDuplicateTag(node) {\n    return Array.isArray(node);\n}\n\nfunction parseNodeAsDuplicateTag(node, name) {\n    return parseNodeAsSimpleValue(node[node.length - 1], name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return new DOMParser();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        return new (__non_webpack_require__('@xmldom/xmldom').DOMParser)({\n            errorHandler: {\n                error: () => {\n                    throw new Error('Faulty XML');\n                }\n            }\n        });\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {\n    getPascalStringFromDataView,\n    padStart,\n    parseFloatRadix,\n    strRepeat\n} from './utils.js';\n\n// export const OsTypeKeys = {\n//     OBJC: 'Objc',\n//     DOUB: 'doub',\n//     UNTF: 'UntF',\n//     TEXT: 'TEXT',\n//     BOOL: 'bool',\n//     ENUM: 'enum',\n//     LONG: 'long'\n// };\n\nexport const PathRecordTypes = {\n    CLOSED_SUBPATH_LENGTH: 0,\n    CLOSED_SUBPATH_BEZIER_LINKED: 1,\n    CLOSED_SUBPATH_BEZIER_UNLINKED: 2,\n    OPEN_SUBPATH_LENGTH: 3,\n    OPEN_SUBPATH_BEZIER_LINKED: 4,\n    OPEN_SUBPATH_BEZIER_UNLINKED: 5,\n    FILL_RULE: 6,\n    CLIPBOARD: 7,\n    INITIAL_FILL_RULE: 8\n};\n\nconst PATH_RECORD_SIZE = 24;\n\nexport default {\n    // 0x0425: {\n    //     name: 'CaptionDigest',\n    //     description(dataView) {\n    //         let description = '';\n    //         for (let i = 0; i < dataView.byteLength; i++) {\n    //             const byte = dataView.getUint8(i);\n    //             description += padStart(byte.toString(16), 2, '0');\n    //         }\n    //         return description;\n    //     }\n    // },\n    // Commented out for now to lower bundle size until someone asks for it.\n    // 0x043a: {\n    //     name: 'PrintInformation',\n    //     description: parseDescriptor\n    // },\n    // 0x043b: {\n    //     name: 'PrintStyle',\n    //     description: parseDescriptor\n    // },\n    0x07d0: {\n        name: 'PathInformation',\n        description: pathResource\n    },\n    0x0bb7: {\n        name: 'ClippingPathName',\n        description(dataView) {\n            const [, string] = getPascalStringFromDataView(dataView, 0);\n            return string;\n        }\n    },\n};\n\n// function parseDescriptor(dataView) {\n//     const DESCRIPTOR_VERSION_SIZE = 4;\n//     // This is a unicode string terminated with null. Unsure about the format though since in my example image it starts with 0x0000.\n//     const UNCLEAR_CLASS_ID_NAME_PART_SIZE = 6;\n//     let offset = 0;\n//     offset += DESCRIPTOR_VERSION_SIZE + UNCLEAR_CLASS_ID_NAME_PART_SIZE;\n//     const [classId, classIdSize] = getBlockValue(dataView, offset);\n//     offset += classIdSize;\n//     const numItems = Types.getLongAt(dataView, offset);\n//     offset += 4;\n//     const descriptor = {[classId]: {}};\n//     for (let i = 0; i < numItems; i++) {\n//         const [itemKey, itemKeySize] = getBlockValue(dataView, offset);\n//         offset += itemKeySize;\n//         const osTypeKey = getStringFromDataView(dataView, offset, 4);\n//         offset += 4;\n//         try {\n//             const {itemValue, itemSize} = getItemValue(dataView, offset, osTypeKey);\n//             offset += itemSize;\n//             descriptor[classId][ITEM_KEY_TERMS[itemKey] || itemKey] = itemValue;\n//         } catch (error) {\n//             // We can't recover from unknown OS type key since we don't know\n//             // where the next one starts.\n//             break;\n//         }\n//     }\n//     return JSON.stringify(descriptor);\n// }\n\n// function getBlockValue(dataView, offset, unicode = false) {\n//     const length = (unicode ? 2 : 1) * Types.getLongAt(dataView, offset) || 4;\n//     offset += 4;\n//     const value = (unicode ? getUnicodeStringFromDataView : getStringFromDataView)(dataView, offset, length);\n//     offset += length;\n//     return [value, 4 + length];\n// }\n\n// function getItemValue(dataView, offset, osTypeKey) {\n//     // Not all OSType keys are implemented yet because they are missing in the example image.\n//     if (osTypeKey === OsTypeKeys.OBJC) {\n//         const [classIdName, classIdNameSize] = getBlockValue(dataView, offset, true);\n//         offset += classIdNameSize;\n//         const [classId, classIdSize] = getBlockValue(dataView, offset);\n//         offset += classIdSize;\n//         const _offset = Types.getLongAt(dataView, offset);\n//         return {\n//             itemValue: {[classIdName]: {[classId]: _offset}},\n//             itemSize: classIdNameSize + classIdSize + 4\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.DOUB) {\n//         return {\n//             itemValue: parseDouble(dataView, offset),\n//             itemSize: 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.UNTF) {\n//         const unit = getStringFromDataView(dataView, offset, 4);\n//         return {\n//             itemValue: {unit, value: parseDouble(dataView, offset + 4)},\n//             itemSize: unit.length + 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.TEXT) {\n//         const length = 2 * Types.getLongAt(dataView, offset);\n//         offset += 4;\n//         const text = getUnicodeStringFromDataView(dataView, offset, length);\n//         return {\n//             itemValue: text,\n//             itemSize: 4 + length\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.BOOL) {\n//         return {\n//             itemValue: Types.getByteAt(dataView, offset) === 1,\n//             itemSize: 1\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.ENUM) {\n//         const [type, typeSize] = getBlockValue(dataView, offset);\n//         offset += typeSize;\n//         const [enumName, enumSize] = getBlockValue(dataView, offset);\n//         return {\n//             itemValue: {[type]: enumName},\n//             itemSize: typeSize + enumSize\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.LONG) {\n//         return {\n//             itemValue: Types.getLongAt(dataView, offset),\n//             itemSize: 4\n//         };\n//     }\n//     throw new Error(`Unknown OS type key: ${osTypeKey}`);\n// }\n\n// function parseDouble(dataView, offset) {\n//     const BIAS = 1023;\n//     const sign = (Types.getByteAt(dataView, offset) & parseInt('10000000', 2)) === 0 ? 1 : -1;\n//     const exponent = ((Types.getShortAt(dataView, offset) & parseInt('0111111111110000', 2)) >> 4) - BIAS;\n//     const fractionHigh = padStart((Types.getLongAt(dataView, offset) & parseInt('00000000000011111111111111111111', 2)).toString(2), 20, '0');\n//     const fractionLow = padStart(Types.getLongAt(dataView, offset + 4).toString(2), 32, '0');\n//     const fraction = parseFloatRadix('1.' + fractionHigh + fractionLow, 2);\n//     return sign * fraction * Math.pow(2, exponent);\n// }\n\nfunction pathResource(dataView) {\n    const TYPE_SIZE = 2;\n    const types = {};\n    const paths = [];\n\n    for (let offset = 0; offset < dataView.byteLength; offset += TYPE_SIZE + PATH_RECORD_SIZE) {\n        const type = Types.getShortAt(dataView, offset);\n        if (PATH_RECORD_TYPES[type]) {\n            if (!types[type]) {\n                types[type] = PATH_RECORD_TYPES[type].description;\n            }\n            paths.push({\n                type,\n                path: PATH_RECORD_TYPES[type].path(dataView, offset + TYPE_SIZE)\n            });\n        }\n    }\n    return JSON.stringify({types, paths});\n}\n\nconst PATH_RECORD_TYPES = {\n    [PathRecordTypes.CLOSED_SUBPATH_LENGTH]: {\n        description: 'Closed subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_LINKED]: {\n        description: 'Closed subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Closed subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_LENGTH]: {\n        description: 'Open subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_LINKED]: {\n        description: 'Open subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Open subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.FILL_RULE]: {\n        description: 'Path fill rule',\n        path: () => []\n    },\n    [PathRecordTypes.INITIAL_FILL_RULE]: {\n        description: 'Initial fill rule',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLIPBOARD]: {\n        description: 'Clipboard',\n        path: parseClipboard\n    }\n};\n\nfunction parseBezierKnot(dataView, offset) {\n    const PATH_POINT_SIZE = 8;\n    const path = [];\n    for (let i = 0; i < PATH_RECORD_SIZE; i += PATH_POINT_SIZE) {\n        path.push(parsePathPoint(dataView, offset + i));\n    }\n    return path;\n}\n\nfunction parsePathPoint(dataView, offset) {\n    const vertical = getFixedPointNumber(dataView, offset, 8);\n    const horizontal = getFixedPointNumber(dataView, offset + 4, 8);\n    return [horizontal, vertical];\n}\n\nfunction parseClipboard(dataView, offset) {\n    return [\n        [\n            getFixedPointNumber(dataView, offset, 8), // Top\n            getFixedPointNumber(dataView, offset + 4, 8), // Left\n            getFixedPointNumber(dataView, offset + 8, 8), // Botton\n            getFixedPointNumber(dataView, offset + 12, 8), // Right\n        ],\n        getFixedPointNumber(dataView, offset + 16, 8) // Resolution\n    ];\n}\n\nfunction getFixedPointNumber(dataView, offset, binaryPoint) {\n    const number = Types.getLongAt(dataView, offset);\n\n    const sign = (number >>> 31) === 0 ? 1 : -1;\n    const integer = (number & 0x7f000000) >>> (32 - binaryPoint);\n    const fraction = number & parseInt(strRepeat('1', 32 - binaryPoint), 2);\n\n    return sign * parseFloatRadix(integer.toString(2) + '.' + padStart(fraction.toString(2), 32 - binaryPoint, '0'), 2);\n}\n\n// Item key terminology: https://psd-tools.readthedocs.io/en/latest/reference/psd_tools.terminology.html\n// Are these correct? There are collisions that are commented out. A lot of code for little gain?\n// const ITEM_KEY_TERMS = {\n//     'A   ': 'A',\n//     'Adjs': 'Adjustment',\n//     'Algd': 'Aligned',\n//     'Algn': 'Alignment',\n//     'AllE': 'AllExcept',\n//     'All ': 'AllPS',\n//     'AlTl': 'AllToolOptions',\n//     'AChn': 'AlphaChannelOptions',\n//     'AlpC': 'AlphaChannels',\n//     'AmbB': 'AmbientBrightness',\n//     'AmbC': 'AmbientColor',\n//     'Amnt': 'Amount',\n//     'AmMx': 'AmplitudeMax',\n//     'AmMn': 'AmplitudeMin',\n//     'Anch': 'Anchor',\n//     'Angl': 'Angle',\n//     'Ang1': 'Angle1',\n//     'Ang2': 'Angle2',\n//     'Ang3': 'Angle3',\n//     'Ang4': 'Angle4',\n//     'AntA': 'AntiAlias',\n//     'Appe': 'Append',\n//     'Aply': 'Apply',\n//     'Ar  ': 'Area',\n//     'Arrw': 'Arrowhead',\n//     'As  ': 'As',\n//     'Asst': 'AssetBin',\n//     'AssC': 'AssumedCMYK',\n//     'AssG': 'AssumedGray',\n//     'AssR': 'AssumedRGB',\n//     'At  ': 'At',\n//     'Auto': 'Auto',\n//     'AuCo': 'AutoContrast',\n//     'Atrs': 'AutoErase',\n//     'AtKr': 'AutoKern',\n//     'AtUp': 'AutoUpdate',\n//     'Axis': 'Axis',\n//     'B   ': 'B',\n//     'Bckg': 'Background',\n//     'BckC': 'BackgroundColor',\n//     'BckL': 'BackgroundLevel',\n//     'Bwd ': 'Backward',\n//     'Blnc': 'Balance',\n//     'Bsln': 'BaselineShift',\n//     'BpWh': 'BeepWhenDone',\n//     'BgnR': 'BeginRamp',\n//     'BgnS': 'BeginSustain',\n//     'bvlD': 'BevelDirection',\n//     'ebbl': 'BevelEmboss',\n//     'bvlS': 'BevelStyle',\n//     'bvlT': 'BevelTechnique',\n//     'BgNH': 'BigNudgeH',\n//     'BgNV': 'BigNudgeV',\n//     'BtDp': 'BitDepth',\n//     'Blck': 'Black',\n//     'BlcC': 'BlackClip',\n//     'Blcn': 'BlackGeneration',\n//     'BlcG': 'BlackGenerationCurve',\n//     'BlcI': 'BlackIntensity',\n//     'BlcL': 'BlackLevel',\n//     // 'BlcL': 'BlackLimit',\n//     'Bld ': 'Bleed',\n//     'Blnd': 'BlendRange',\n//     'Bl  ': 'Blue',\n//     'BlBl': 'BlueBlackPoint',\n//     'blueFloat': 'BlueFloat',\n//     'BlGm': 'BlueGamma',\n//     'BlWh': 'BlueWhitePoint',\n//     'BlX ': 'BlueX',\n//     'BlY ': 'BlueY',\n//     'blur': 'Blur',\n//     'BlrM': 'BlurMethod',\n//     'BlrQ': 'BlurQuality',\n//     'Bk  ': 'Book',\n//     'BrdT': 'BorderThickness',\n//     'Btom': 'Bottom',\n//     'Brgh': 'Brightness',\n//     'BrsD': 'BrushDetail',\n//     'BrsS': 'BrushSize',\n//     'BrsT': 'BrushType',\n//     'Brsh': 'Brushes',\n//     'BmpA': 'BumpAmplitude',\n//     'BmpC': 'BumpChannel',\n//     'By  ': 'By',\n//     'Byln': 'Byline',\n//     'BylT': 'BylineTitle',\n//     'BytO': 'ByteOrder',\n//     'CMYS': 'CMYKSetup',\n//     'CchP': 'CachePrefs',\n//     'Clcl': 'Calculation',\n//     'Clbr': 'CalibrationBars',\n//     'Cptn': 'Caption',\n//     'CptW': 'CaptionWriter',\n//     'Ctgr': 'Category',\n//     'ClSz': 'CellSize',\n//     'Cntr': 'Center',\n//     'CntC': 'CenterCropMarks',\n//     'ChlA': 'ChalkArea',\n//     'Chnl': 'Channel',\n//     'ChMx': 'ChannelMatrix',\n//     'ChnN': 'ChannelName',\n//     'Chns': 'Channels',\n//     'ChnI': 'ChannelsInterleaved',\n//     'ChAm': 'CharcoalAmount',\n//     'ChrA': 'CharcoalArea',\n//     'Ckmt': 'ChokeMatte',\n//     'ChFX': 'ChromeFX',\n//     'City': 'City',\n//     'ClrA': 'ClearAmount',\n//     'ClPt': 'ClippingPath',\n//     'ClpP': 'ClippingPathEPS',\n//     'ClpF': 'ClippingPathFlatness',\n//     'ClpI': 'ClippingPathIndex',\n//     'Clpg': 'ClippingPathInfo',\n//     'ClnS': 'CloneSource',\n//     'Clsp': 'ClosedSubpath',\n//     'Clr ': 'Color',\n//     'Clrh': 'ColorChannels',\n//     'ClrC': 'ColorCorrection',\n//     'ClrI': 'ColorIndicates',\n//     'ClMg': 'ColorManagement',\n//     'Clrr': 'ColorPickerPrefs',\n//     'ClrS': 'ColorSpace',\n//     'ClrT': 'ColorTable',\n//     'Clrz': 'Colorize',\n//     'Clrs': 'Colors',\n//     'ClrL': 'ColorsList',\n//     'ClmW': 'ColumnWidth',\n//     'CmdK': 'CommandKey',\n//     'Cmpn': 'Compensation',\n//     'Cmpr': 'Compression',\n//     'Cncv': 'Concavity',\n//     'Cndt': 'Condition',\n//     'Cnst': 'Constant',\n//     // 'Cnst': 'Constrain',\n//     'CnsP': 'ConstrainProportions',\n//     'Cfov': 'ConstructionFOV',\n//     'Cntg': 'Contiguous',\n//     'Cntn': 'Continue',\n//     'Cnty': 'Continuity',\n//     'ShpC': 'ContourType',\n//     // 'Cntr': 'Contrast',\n//     'Cnvr': 'Convert',\n//     'Cpy ': 'Copy',\n//     'Cpyr': 'Copyright',\n//     'CprN': 'CopyrightNotice',\n//     'CrnC': 'CornerCropMarks',\n//     'Cnt ': 'Count',\n//     'CntN': 'CountryName',\n//     'CrcB': 'CrackBrightness',\n//     'CrcD': 'CrackDepth',\n//     'CrcS': 'CrackSpacing',\n//     'blfl': 'CreateLayersFromLayerFX',\n//     'Crdt': 'Credit',\n//     'Crss': 'Crossover',\n//     'Crnt': 'Current',\n//     'CrnH': 'CurrentHistoryState',\n//     'CrnL': 'CurrentLight',\n//     'CrnT': 'CurrentToolOptions',\n//     'Crv ': 'Curve',\n//     'CrvF': 'CurveFile',\n//     'Cstm': 'Custom',\n//     'CstF': 'CustomForced',\n//     'CstM': 'CustomMatte',\n//     'CstP': 'CustomPalette',\n//     'Cyn ': 'Cyan',\n//     'DCS ': 'DCS',\n//     'DPXf': 'DPXFormat',\n//     'DrkI': 'DarkIntensity',\n//     'Drkn': 'Darkness',\n//     'DtCr': 'DateCreated',\n//     'Dt ': 'Datum',\n//     'Dfnt': 'Definition',\n//     'Dnst': 'Density',\n//     'Dpth': 'Depth',\n//     'Dstl': 'DestBlackMax',\n//     'DstB': 'DestBlackMin',\n//     'Dstt': 'DestWhiteMax',\n//     'DstW': 'DestWhiteMin',\n//     'DstM': 'DestinationMode',\n//     'Dtl ': 'Detail',\n//     'Dmtr': 'Diameter',\n//     'DffD': 'DiffusionDither',\n//     'Drct': 'Direction',\n//     'DrcB': 'DirectionBalance',\n//     'DspF': 'DisplaceFile',\n//     'DspM': 'DisplacementMap',\n//     'DspP': 'DisplayPrefs',\n//     'Dstn': 'Distance',\n//     // 'Dstr': 'Distortion',\n//     // 'Dstr': 'Distribution',\n//     'Dthr': 'Dither',\n//     'DthA': 'DitherAmount',\n//     'Dthp': 'DitherPreserve',\n//     'Dthq': 'DitherQuality',\n//     'DocI': 'DocumentID',\n//     'DtGn': 'DotGain',\n//     'DtGC': 'DotGainCurves',\n//     'DrSh': 'DropShadow',\n//     'Dplc': 'Duplicate',\n//     'DnmC': 'DynamicColorSliders',\n//     'Edg ': 'Edge',\n//     'EdgB': 'EdgeBrightness',\n//     'EdgF': 'EdgeFidelity',\n//     'EdgI': 'EdgeIntensity',\n//     'EdgS': 'EdgeSimplicity',\n//     'EdgT': 'EdgeThickness',\n//     'EdgW': 'EdgeWidth',\n//     'Effc': 'Effect',\n//     'EmbC': 'EmbedCMYK',\n//     'EmbG': 'EmbedGray',\n//     'EmbL': 'EmbedLab',\n//     'EmbP': 'EmbedProfiles',\n//     'EmbR': 'EmbedRGB',\n//     'EmlD': 'EmulsionDown',\n//     'EGst': 'EnableGestures',\n//     'enab': 'Enabled',\n//     'Encd': 'Encoding',\n//     'End ': 'End',\n//     'EndA': 'EndArrowhead',\n//     'EndR': 'EndRamp',\n//     'EndS': 'EndSustain',\n//     'Engn': 'Engine',\n//     'ErsT': 'EraseToHistory',\n//     'ErsK': 'EraserKind',\n//     'ExcP': 'ExactPoints',\n//     'Expr': 'Export',\n//     'ExpC': 'ExportClipboard',\n//     'Exps': 'Exposure',\n//     'Extd': 'Extend',\n//     'EQlt': 'ExtendedQuality',\n//     'Extn': 'Extension',\n//     'ExtQ': 'ExtensionsQuery',\n//     'ExtD': 'ExtrudeDepth',\n//     'ExtM': 'ExtrudeMaskIncomplete',\n//     'ExtR': 'ExtrudeRandom',\n//     'ExtS': 'ExtrudeSize',\n//     'ExtF': 'ExtrudeSolidFace',\n//     'ExtT': 'ExtrudeType',\n//     'EyDr': 'EyeDropperSample',\n//     'FxCm': 'FPXCompress',\n//     'FxQl': 'FPXQuality',\n//     'FxSz': 'FPXSize',\n//     'FxVw': 'FPXView',\n//     'FdT ': 'FadeTo',\n//     'FdtS': 'FadeoutSteps',\n//     'FlOf': 'Falloff',\n//     'Fthr': 'Feather',\n//     'FbrL': 'FiberLength',\n//     'File': 'File',\n//     'FlCr': 'FileCreator',\n//     'FlIn': 'FileInfo',\n//     'FilR': 'FileReference',\n//     'FlSP': 'FileSavePrefs',\n//     'FlTy': 'FileType',\n//     'flst': 'FilesList',\n//     'Fl  ': 'Fill',\n//     'FlCl': 'FillColor',\n//     'FlNt': 'FillNeutral',\n//     'FlPd': 'FilterLayerPersistentData',\n//     'FlRs': 'FilterLayerRandomSeed',\n//     'Fngr': 'Fingerpainting',\n//     'FlrC': 'FlareCenter',\n//     'Fltn': 'Flatness',\n//     'Fltt': 'Flatten',\n//     'FlpV': 'FlipVertical',\n//     'Fcs ': 'Focus',\n//     'Fldr': 'Folders',\n//     'FntD': 'FontDesignAxes',\n//     'FntV': 'FontDesignAxesVectors',\n//     'FntN': 'FontName',\n//     'Scrp': 'FontScript',\n//     'FntS': 'FontStyleName',\n//     'FntT': 'FontTechnology',\n//     'FrcC': 'ForcedColors',\n//     'FrgC': 'ForegroundColor',\n//     'FrgL': 'ForegroundLevel',\n//     'Fmt ': 'Format',\n//     'Fwd ': 'Forward',\n//     'FrFX': 'FrameFX',\n//     'FrmW': 'FrameWidth',\n//     'FTcs': 'FreeTransformCenterState',\n//     'Frqn': 'Frequency',\n//     'From': 'From',\n//     'FrmB': 'FromBuiltin',\n//     'FrmM': 'FromMode',\n//     'FncK': 'FunctionKey',\n//     'Fzns': 'Fuzziness',\n//     'GCR ': 'GCR',\n//     'GFPT': 'GIFColorFileType',\n//     'GFCL': 'GIFColorLimit',\n//     'GFEC': 'GIFExportCaption',\n//     'GFMI': 'GIFMaskChannelIndex',\n//     'GFMV': 'GIFMaskChannelInverted',\n//     'GFPF': 'GIFPaletteFile',\n//     'GFPL': 'GIFPaletteType',\n//     'GFCS': 'GIFRequiredColorSpaceType',\n//     'GFIT': 'GIFRowOrderType',\n//     'GFTC': 'GIFTransparentColor',\n//     'GFTB': 'GIFTransparentIndexBlue',\n//     'GFTG': 'GIFTransparentIndexGreen',\n//     'GFTR': 'GIFTransparentIndexRed',\n//     'GFBM': 'GIFUseBestMatch',\n//     'Gmm ': 'Gamma',\n//     'GmtW': 'GamutWarning',\n//     'GnrP': 'GeneralPrefs',\n//     'gblA': 'GlobalAngle',\n//     'gagl': 'GlobalLightingAngle',\n//     'Glos': 'Gloss',\n//     'GlwA': 'GlowAmount',\n//     'GlwT': 'GlowTechnique',\n//     'Grad': 'Gradient',\n//     'Grdf': 'GradientFill',\n//     // 'Grn ': 'Grain',\n//     'Grnt': 'GrainType',\n//     'Grns': 'Graininess',\n//     'Gry ': 'Gray',\n//     'GrBh': 'GrayBehavior',\n//     'GrSt': 'GraySetup',\n//     'Grn ': 'Green',\n//     'GrnB': 'GreenBlackPoint',\n//     'greenFloat': 'GreenFloat',\n//     'GrnG': 'GreenGamma',\n//     'GrnW': 'GreenWhitePoint',\n//     'GrnX': 'GreenX',\n//     'GrnY': 'GreenY',\n//     'GrdC': 'GridColor',\n//     'Grds': 'GridCustomColor',\n//     'GrdM': 'GridMajor',\n//     'Grdn': 'GridMinor',\n//     'GrdS': 'GridStyle',\n//     'Grdt': 'GridUnits',\n//     'Grup': 'Group',\n//     'GrtW': 'GroutWidth',\n//     'GrwS': 'GrowSelection',\n//     'Gdes': 'Guides',\n//     'GdsC': 'GuidesColor',\n//     'Gdss': 'GuidesCustomColor',\n//     'GdPr': 'GuidesPrefs',\n//     'GdsS': 'GuidesStyle',\n//     'GttW': 'GutterWidth',\n//     'HlfF': 'HalftoneFile',\n//     'HlfS': 'HalftoneScreen',\n//     'HlSz': 'HalftoneSize',\n//     'Hlfp': 'HalftoneSpec',\n//     'Hrdn': 'Hardness',\n//     'HCdH': 'HasCmdHPreference',\n//     'Hdr ': 'Header',\n//     'Hdln': 'Headline',\n//     'Hght': 'Height',\n//     'HghA': 'HighlightArea',\n//     'hglC': 'HighlightColor',\n//     'HghL': 'HighlightLevels',\n//     'hglM': 'HighlightMode',\n//     'hglO': 'HighlightOpacity',\n//     'HghS': 'HighlightStrength',\n//     'HstB': 'HistoryBrushSource',\n//     'HstP': 'HistoryPrefs',\n//     'HsSS': 'HistoryStateSource',\n//     'HsSt': 'HistoryStates',\n//     'Hrzn': 'Horizontal',\n//     'HrzS': 'HorizontalScale',\n//     'HstN': 'HostName',\n//     'HstV': 'HostVersion',\n//     'H   ': 'Hue',\n//     'ICCE': 'ICCEngine',\n//     'ICCt': 'ICCSetupName',\n//     'Idnt': 'ID',\n//     'Idle': 'Idle',\n//     'ImgB': 'ImageBalance',\n//     'Impr': 'Import',\n//     'Imps': 'Impressionist',\n//     'In  ': 'In',\n//     'c@#^': 'Inherits',\n//     'InkC': 'InkColors',\n//     'Inks': 'Inks',\n//     'IrGl': 'InnerGlow',\n//     'glwS': 'InnerGlowSource',\n//     'IrSh': 'InnerShadow',\n//     'Inpt': 'Input',\n//     'kIBP': 'InputBlackPoint',\n//     'Inmr': 'InputMapRange',\n//     'Inpr': 'InputRange',\n//     'kIWP': 'InputWhitePoint',\n//     'Intn': 'Intensity',\n//     'Inte': 'Intent',\n//     'IntH': 'InterfaceBevelHighlight',\n//     'Intv': 'InterfaceBevelShadow',\n//     'IntB': 'InterfaceBlack',\n//     'Intd': 'InterfaceBorder',\n//     'Intk': 'InterfaceButtonDarkShadow',\n//     'Intt': 'InterfaceButtonDownFill',\n//     'InBF': 'InterfaceButtonUpFill',\n//     'ICBL': 'InterfaceColorBlue2',\n//     'ICBH': 'InterfaceColorBlue32',\n//     'ICGL': 'InterfaceColorGreen2',\n//     'ICGH': 'InterfaceColorGreen32',\n//     'ICRL': 'InterfaceColorRed2',\n//     'ICRH': 'InterfaceColorRed32',\n//     'IntI': 'InterfaceIconFillActive',\n//     'IntF': 'InterfaceIconFillDimmed',\n//     'Intc': 'InterfaceIconFillSelected',\n//     'Intm': 'InterfaceIconFrameActive',\n//     // 'Intr': 'InterfaceIconFrameDimmed',\n//     'IntS': 'InterfaceIconFrameSelected',\n//     'IntP': 'InterfacePaletteFill',\n//     'IntR': 'InterfaceRed',\n//     'IntT': 'InterfaceToolTipBackground',\n//     'ITTT': 'InterfaceToolTipText',\n//     'ITBg': 'InterfaceTransparencyBackground',\n//     'ITFg': 'InterfaceTransparencyForeground',\n//     'IntW': 'InterfaceWhite',\n//     // 'Intr': 'Interlace',\n//     'IntC': 'InterlaceCreateType',\n//     'IntE': 'InterlaceEliminateType',\n//     // 'Intr': 'Interpolation',\n//     'IntM': 'InterpolationMethod',\n//     'Invr': 'Invert',\n//     'InvM': 'InvertMask',\n//     'InvS': 'InvertSource2',\n//     'InvT': 'InvertTexture',\n//     'IsDr': 'IsDirty',\n//     'ItmI': 'ItemIndex',\n//     'JPEQ': 'JPEGQuality',\n//     'Krng': 'Kerning',\n//     'Kywd': 'Keywords',\n//     'Knd ': 'Kind',\n//     'LTnm': 'LUTAnimation',\n//     'LZWC': 'LZWCompression',\n//     'Lbls': 'Labels',\n//     'Lnds': 'Landscape',\n//     'LstT': 'LastTransform',\n//     'Lyr ': 'Layer',\n//     'Lefx': 'LayerEffects',\n//     'lfxv': 'LayerFXVisible',\n//     'LyrI': 'LayerID',\n//     'LyrN': 'LayerName',\n//     'Lyrs': 'Layers',\n//     'Ldng': 'Leading',\n//     'Left': 'Left',\n//     'lSNs': 'LegacySerialString',\n//     // 'Lngt': 'Length',\n//     'Lns ': 'Lens',\n//     'Lvl ': 'Level',\n//     'Lvls': 'Levels',\n//     'LgDr': 'LightDark',\n//     'LghD': 'LightDirection',\n//     'LghI': 'LightIntensity',\n//     'LghP': 'LightPosition',\n//     'LghS': 'LightSource',\n//     'LghT': 'LightType',\n//     'LghG': 'LightenGrout',\n//     'Lght': 'Lightness',\n//     'Line': 'Line',\n//     'lnkE': 'LinkEnable',\n//     'LnkL': 'LinkedLayerIDs',\n//     'Lald': 'LocalLightingAltitude',\n//     'lagl': 'LocalLightingAngle',\n//     'LclR': 'LocalRange',\n//     'Lctn': 'Location',\n//     'Log ': 'Log',\n//     'kLog': 'Logarithmic',\n//     'LwCs': 'LowerCase',\n//     'Lmnc': 'Luminance',\n//     'Mgnt': 'Magenta',\n//     'MkVs': 'MakeVisible',\n//     'Mfov': 'ManipulationFOV',\n//     'MpBl': 'MapBlack',\n//     'Mpng': 'Mapping',\n//     'MpgS': 'MappingShape',\n//     'Mtrl': 'Material',\n//     'Mtrx': 'Matrix',\n//     'MttC': 'MatteColor',\n//     'Mxm ': 'Maximum',\n//     'MxmS': 'MaximumStates',\n//     'MmrU': 'MemoryUsagePercent',\n//     'Mrge': 'Merge',\n//     'Mrgd': 'Merged',\n//     'Msge': 'Message',\n//     'Mthd': 'Method',\n//     'MztT': 'MezzotintType',\n//     'Mdpn': 'Midpoint',\n//     'MdtL': 'MidtoneLevels',\n//     'Mnm ': 'Minimum',\n//     'MsmC': 'MismatchCMYK',\n//     'MsmG': 'MismatchGray',\n//     'MsmR': 'MismatchRGB',\n//     'Md  ': 'Mode',\n//     'Mnch': 'Monochromatic',\n//     'MvT ': 'MoveTo',\n//     'Nm  ': 'Name',\n//     'Ngtv': 'Negative',\n//     'Nw  ': 'New',\n//     'Nose': 'Noise',\n//     'NnIm': 'NonImageData',\n//     'NnLn': 'NonLinear',\n//     'null': 'Null',\n//     'Nm L': 'NumLights',\n//     'Nmbr': 'Number',\n//     'NCch': 'NumberOfCacheLevels',\n//     'NC64': 'NumberOfCacheLevels64',\n//     'NmbO': 'NumberOfChannels',\n//     'NmbC': 'NumberOfChildren',\n//     'NmbD': 'NumberOfDocuments',\n//     'NmbG': 'NumberOfGenerators',\n//     // 'NmbL': 'NumberOfLayers',\n//     // 'NmbL': 'NumberOfLevels',\n//     'NmbP': 'NumberOfPaths',\n//     'NmbR': 'NumberOfRipples',\n//     'NmbS': 'NumberOfSiblings',\n//     'ObjN': 'ObjectName',\n//     'Ofst': 'Offset',\n//     'Sftt': 'OldSmallFontType',\n//     'On  ': 'On',\n//     'Opct': 'Opacity',\n//     'Optm': 'Optimized',\n//     'Ornt': 'Orientation',\n//     'OrgH': 'OriginalHeader',\n//     'OrgT': 'OriginalTransmissionReference',\n//     'OthC': 'OtherCursors',\n//     'OrGl': 'OuterGlow',\n//     'Otpt': 'Output',\n//     'kOBP': 'OutputBlackPoint',\n//     'kOWP': 'OutputWhitePoint',\n//     'OvrC': 'OverprintColors',\n//     'OvrO': 'OverrideOpen',\n//     'ObrP': 'OverridePrinter',\n//     'Ovrd': 'OverrideSave',\n//     'PNGf': 'PNGFilter',\n//     'PGIT': 'PNGInterlaceType',\n//     'PMpf': 'PageFormat',\n//     'PgNm': 'PageNumber',\n//     'PgPs': 'PagePosition',\n//     'PgSt': 'PageSetup',\n//     'PnCK': 'PaintCursorKind',\n//     'PntT': 'PaintType',\n//     'PntC': 'PaintingCursors',\n//     'Plt ': 'Palette',\n//     'PltF': 'PaletteFile',\n//     'PprB': 'PaperBrightness',\n//     'PrIn': 'ParentIndex',\n//     'PrNm': 'ParentName',\n//     'Path': 'Path',\n//     'PthC': 'PathContents',\n//     'PthN': 'PathName',\n//     'Pttn': 'Pattern',\n//     'Pncl': 'PencilWidth',\n//     'Prsp': 'PerspectiveIndex',\n//     'Phsp': 'Phosphors',\n//     'PckI': 'PickerID',\n//     'Pckr': 'PickerKind',\n//     'PPSz': 'PixelPaintSize',\n//     'Pltf': 'Platform',\n//     'PlgF': 'PluginFolder',\n//     'PlgP': 'PluginPrefs',\n//     'Pts ': 'Points',\n//     'Pstn': 'Position',\n//     'PstS': 'PostScriptColor',\n//     'Pstr': 'Posterization',\n//     'PrdC': 'PredefinedColors',\n//     'PrfB': 'PreferBuiltin',\n//     'Prfr': 'Preferences',\n//     'PrsA': 'PreserveAdditional',\n//     'PrsL': 'PreserveLuminosity',\n//     'PrsT': 'PreserveTransparency',\n//     'Prs ': 'Pressure',\n//     'Prvw': 'Preview',\n//     'PrvK': 'PreviewCMYK',\n//     'PrvF': 'PreviewFullSize',\n//     'PrvI': 'PreviewIcon',\n//     'PrvM': 'PreviewMacThumbnail',\n//     'PrvW': 'PreviewWinThumbnail',\n//     'PrvQ': 'PreviewsQuery',\n//     'PMps': 'PrintSettings',\n//     'PrfS': 'ProfileSetup',\n//     'PrvS': 'ProvinceState',\n//     'Qlty': 'Quality',\n//     'QucM': 'QuickMask',\n//     'RGBS': 'RGBSetup',\n//     'Rds ': 'Radius',\n//     'RndS': 'RandomSeed',\n//     'Rt  ': 'Ratio',\n//     'Rcnf': 'RecentFiles',\n//     'Rd  ': 'Red',\n//     'RdBl': 'RedBlackPoint',\n//     'redFloat': 'RedFloat',\n//     'RdGm': 'RedGamma',\n//     'RdWh': 'RedWhitePoint',\n//     'RdX ': 'RedX',\n//     'RdY ': 'RedY',\n//     'RgsM': 'RegistrationMarks',\n//     'Rltv': 'Relative',\n//     'Rlf ': 'Relief',\n//     'Rfid': 'RenderFidelity',\n//     'Rsmp': 'Resample',\n//     'RWOZ': 'ResizeWindowsOnZoom',\n//     'Rslt': 'Resolution',\n//     'RsrI': 'ResourceID',\n//     'Rspn': 'Response',\n//     'RtnH': 'RetainHeader',\n//     'Rvrs': 'Reverse',\n//     'Rght': 'Right',\n//     'RplM': 'RippleMagnitude',\n//     'RplS': 'RippleSize',\n//     'Rtt ': 'Rotate',\n//     'Rndn': 'Roundness',\n//     'RlrH': 'RulerOriginH',\n//     'RlrV': 'RulerOriginV',\n//     'RlrU': 'RulerUnits',\n//     // 'Strt': 'Saturation',\n//     'SvAn': 'SaveAndClose',\n//     'SvCm': 'SaveComposite',\n//     'PltL': 'SavePaletteLocations',\n//     'SvPt': 'SavePaths',\n//     'SvPy': 'SavePyramids',\n//     'Svng': 'Saving',\n//     'Scl ': 'Scale',\n//     'SclH': 'ScaleHorizontal',\n//     'SclV': 'ScaleVertical',\n//     'Scln': 'Scaling',\n//     'Scns': 'Scans',\n//     'ScrD': 'ScratchDisks',\n//     'ScrF': 'ScreenFile',\n//     'ScrT': 'ScreenType',\n//     'Sprt': 'Separations',\n//     'SrlS': 'SerialString',\n//     // 'ShdI': 'ShadingIntensity',\n//     'ShdN': 'ShadingNoise',\n//     'ShdS': 'ShadingShape',\n//     'sdwC': 'ShadowColor',\n//     // 'ShdI': 'ShadowIntensity',\n//     'ShdL': 'ShadowLevels',\n//     'sdwM': 'ShadowMode',\n//     'sdwO': 'ShadowOpacity',\n//     'Shp ': 'Shape',\n//     'Shrp': 'Sharpness',\n//     'ShrE': 'ShearEd',\n//     'ShrP': 'ShearPoints',\n//     'ShrS': 'ShearSt',\n//     'ShfK': 'ShiftKey',\n//     'ShKT': 'ShiftKeyToolSwitch',\n//     'ShrN': 'ShortNames',\n//     'ShwE': 'ShowEnglishFontNames',\n//     'SwMC': 'ShowMenuColors',\n//     'ShwT': 'ShowToolTips',\n//     'ShTr': 'ShowTransparency',\n//     'Sz  ': 'SizeKey',\n//     'Skew': 'Skew',\n//     'Sfts': 'SmallFontType',\n//     'SmBM': 'SmartBlurMode',\n//     'SmBQ': 'SmartBlurQuality',\n//     'Smoo': 'Smooth',\n//     'Smth': 'Smoothness',\n//     'SnpI': 'SnapshotInitial',\n//     'SfCl': 'SoftClip',\n//     'Sftn': 'Softness',\n//     'SoFi': 'SolidFill',\n//     'Srce': 'Source',\n//     'Src2': 'Source2',\n//     'SrcM': 'SourceMode',\n//     'Spcn': 'Spacing',\n//     'SpcI': 'SpecialInstructions',\n//     'SphM': 'SpherizeMode',\n//     'Spot': 'Spot',\n//     'SprR': 'SprayRadius',\n//     'SqrS': 'SquareSize',\n//     'Srcl': 'SrcBlackMax',\n//     'SrcB': 'SrcBlackMin',\n//     'Srcm': 'SrcWhiteMax',\n//     'SrcW': 'SrcWhiteMin',\n//     // 'Strt': 'Start',\n//     'StrA': 'StartArrowhead',\n//     'Stte': 'State',\n//     'srgh': 'Strength',\n//     'srgR': 'StrengthRatio',\n//     'Strg': 'Strength_PLUGIN',\n//     'StDt': 'StrokeDetail',\n//     'SDir': 'StrokeDirection',\n//     'StrL': 'StrokeLength',\n//     'StrP': 'StrokePressure',\n//     'StrS': 'StrokeSize',\n//     'StrW': 'StrokeWidth',\n//     'Styl': 'Style',\n//     'Stys': 'Styles',\n//     'StlC': 'StylusIsColor',\n//     'StlO': 'StylusIsOpacity',\n//     'StlP': 'StylusIsPressure',\n//     'StlS': 'StylusIsSize',\n//     'SbpL': 'SubPathList',\n//     'SplC': 'SupplementalCategories',\n//     'SstI': 'SystemInfo',\n//     'SstP': 'SystemPalette',\n//     // 'null': 'Target',\n//     'Trgp': 'TargetPath',\n//     'TrgP': 'TargetPathIndex',\n//     // 'Lngt': 'TermLength',\n//     'Txt ': 'Text',\n//     // 'TxtC': 'TextClickPoint',\n//     'TxtD': 'TextData',\n//     'TxtS': 'TextStyle',\n//     'Txtt': 'TextStyleRange',\n//     'Txtr': 'Texture',\n//     // 'TxtC': 'TextureCoverage',\n//     'TxtF': 'TextureFile',\n//     'TxtT': 'TextureType',\n//     'Thsh': 'Threshold',\n//     'TlNm': 'TileNumber',\n//     'TlOf': 'TileOffset',\n//     'TlSz': 'TileSize',\n//     'Ttl ': 'Title',\n//     'T   ': 'To',\n//     'TBl ': 'ToBuiltin',\n//     'ToLk': 'ToLinked',\n//     'TMd ': 'ToMode',\n//     'TglO': 'ToggleOthers',\n//     'Tlrn': 'Tolerance',\n//     'Top ': 'Top',\n//     'TtlL': 'TotalLimit',\n//     'Trck': 'Tracking',\n//     'TrnF': 'TransferFunction',\n//     // 'TrnS': 'TransferSpec',\n//     'Trns': 'Transparency',\n//     // 'TrnG': 'TransparencyGrid',\n//     'TrnC': 'TransparencyGridColors',\n//     // 'TrnG': 'TransparencyGridSize',\n//     'TrnP': 'TransparencyPrefs',\n//     // 'TrnS': 'TransparencyShape',\n//     'TrnI': 'TransparentIndex',\n//     'TrnW': 'TransparentWhites',\n//     'Twst': 'Twist',\n//     'Type': 'Type',\n//     'UC  ': 'UCA',\n//     'URL ': 'URL',\n//     'UndA': 'UndefinedArea',\n//     'Undl': 'Underline',\n//     'UntP': 'UnitsPrefs',\n//     'Untl': 'Untitled',\n//     'UppY': 'UpperY',\n//     'Urgn': 'Urgency',\n//     'AcrS': 'UseAccurateScreens',\n//     'AdPl': 'UseAdditionalPlugins',\n//     'UsCc': 'UseCacheForHistograms',\n//     'UsCr': 'UseCurves',\n//     'UsDf': 'UseDefault',\n//     'uglg': 'UseGlobalAngle',\n//     'UsIC': 'UseICCProfile',\n//     'UsMs': 'UseMask',\n//     'UsrM': 'UserMaskEnabled',\n//     'Usrs': 'UserMaskLinked',\n//     'Usng': 'Using',\n//     'Vl  ': 'Value',\n//     'Vrnc': 'Variance',\n//     'Vct0': 'Vector0',\n//     'Vct1': 'Vector1',\n//     'VctC': 'VectorColor',\n//     'VrsF': 'VersionFix',\n//     'VrsM': 'VersionMajor',\n//     'VrsN': 'VersionMinor',\n//     'Vrtc': 'Vertical',\n//     'VrtS': 'VerticalScale',\n//     'Vdlp': 'VideoAlpha',\n//     'Vsbl': 'Visible',\n//     'WtcS': 'WatchSuspension',\n//     'watr': 'Watermark',\n//     'Wvtp': 'WaveType',\n//     'WLMx': 'WavelengthMax',\n//     'WLMn': 'WavelengthMin',\n//     'WbdP': 'WebdavPrefs',\n//     'Wtdg': 'WetEdges',\n//     'What': 'What',\n//     'WhtC': 'WhiteClip',\n//     'WhtI': 'WhiteIntensity',\n//     'WhHi': 'WhiteIsHigh',\n//     'WhtL': 'WhiteLevel',\n//     'WhtP': 'WhitePoint',\n//     'WhPt': 'WholePath',\n//     'Wdth': 'Width',\n//     'WndM': 'WindMethod',\n//     'With': 'With',\n//     'WrPt': 'WorkPath',\n//     'WrkP': 'WorkPathIndex',\n//     'X   ': 'X',\n//     'Y   ': 'Y',\n//     'Ylw ': 'Yellow',\n//     'ZZTy': 'ZigZagType',\n//     'Alis': '_3DAntiAlias',\n// };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: https://www.adobe.com/devnet-apps/photoshop/fileformatashtml/\n\nimport {getDataView, getStringFromDataView, getPascalStringFromDataView} from './utils.js';\nimport Types from './types.js';\nimport TagNames from './photoshop-tag-names.js';\n\nexport default {\n    read\n};\n\nconst SIGNATURE = '8BIM';\nconst TAG_ID_SIZE = 2;\nconst RESOURCE_LENGTH_SIZE = 4;\n\nconst SIGNATURE_SIZE = SIGNATURE.length;\n\nfunction read(bytes, includeUnknown) {\n    const dataView = getDataView(new Uint8Array(bytes).buffer);\n    const tags = {};\n    let offset = 0;\n\n    while (offset < bytes.length) {\n        const signature = getStringFromDataView(dataView, offset, SIGNATURE_SIZE);\n        offset += SIGNATURE_SIZE;\n        const tagId = Types.getShortAt(dataView, offset);\n        offset += TAG_ID_SIZE;\n        const {tagName, tagNameSize} = getTagName(dataView, offset);\n        offset += tagNameSize;\n        const resourceSize = Types.getLongAt(dataView, offset);\n        offset += RESOURCE_LENGTH_SIZE;\n        if (signature === SIGNATURE) {\n            const valueDataView = getDataView(dataView.buffer, offset, resourceSize);\n            const tag = {\n                id: tagId,\n                value: getStringFromDataView(valueDataView, 0, resourceSize),\n            };\n            if (TagNames[tagId]) {\n                try {\n                    tag.description = TagNames[tagId].description(valueDataView);\n                } catch (error) {\n                    tag.description = '<no description formatter>';\n                }\n                tags[tagName ? tagName : TagNames[tagId].name] = tag;\n            } else if (includeUnknown) {\n                tags[`undefined-${tagId}`] = tag;\n            }\n        }\n        offset += resourceSize + (resourceSize % 2);\n    }\n\n    return tags;\n}\n\nfunction getTagName(dataView, offset) {\n    // The name is encoded as a Pascal string (the string is prefixed with one\n    // byte containing the length of the string) and everything is padded with a\n    // null byte to make the size even.\n    const [stringSize, string] = getPascalStringFromDataView(dataView, offset);\n    return {\n        tagName: string,\n        tagNameSize: 1 + stringSize + (stringSize % 2 === 0 ? 1 : 0)\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView, decompress, COMPRESSION_METHOD_NONE, COMPRESSION_METHOD_DEFLATE} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continuous array of bytes.\n// Compressed ICC profile data only has support for a single chunk.\nfunction read(dataView, iccData, async) {\n    if (async && iccData[0].compressionMethod !== COMPRESSION_METHOD_NONE) {\n        return readCompressedIcc(dataView, iccData);\n    }\n\n    return readIcc(dataView, iccData);\n}\n\nfunction readCompressedIcc(dataView, iccData) {\n    if (!compressionMethodIsSupported(iccData[0].compressionMethod)) {\n        return {};\n    }\n    const compressedDataView = new DataView(dataView.buffer.slice(iccData[0].offset, iccData[0].offset + iccData[0].length));\n    return decompress(compressedDataView, iccData[0].compressionMethod, 'utf-8', 'dataview')\n        .then(parseTags)\n        .catch(() => ({}));\n}\n\nfunction compressionMethodIsSupported(compressionMethod) {\n    return compressionMethod === COMPRESSION_METHOD_DEFLATE;\n}\n\nfunction readIcc(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringValueFromArray, getStringFromDataView, decompress, COMPRESSION_METHOD_NONE} from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport {TYPE_TEXT, TYPE_ITXT, TYPE_ZTXT} from './image-header-png.js';\nimport Tags from './tags.js';\nimport IptcTags from './iptc-tags.js';\nimport Constants from './constants.js';\n\nexport default {\n    read\n};\n\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_ITXT_EXTRA_BYTE = 1;\nconst COMPRESSION_FLAG_COMPRESSED = 1;\nconst EXIF_OFFSET = 6;\n\nfunction read(dataView, pngTextChunks, async, includeUnknown) {\n    const tags = {};\n    const tagsPromises = [];\n    for (let i = 0; i < pngTextChunks.length; i++) {\n        const {offset, length, type} = pngTextChunks[i];\n        const nameAndValue = getNameAndValue(dataView, offset, length, type, async);\n        if (nameAndValue instanceof Promise) {\n            tagsPromises.push(nameAndValue.then(({name, value, description}) => {\n                try {\n                    if (Constants.USE_EXIF && isExifGroupTag(name, value)) {\n                        return {\n                            __exif: Tags.read(decodeRawData(value), EXIF_OFFSET, includeUnknown)\n                        };\n                    } else if (Constants.USE_IPTC && isIptcGroupTag(name, value)) {\n                        return {\n                            __iptc: IptcTags.read(decodeRawData(value), 0, includeUnknown)\n                        };\n                    } else if (name) {\n                        return {\n                            [name]: {\n                                value,\n                                description\n                            }\n                        };\n                    }\n                } catch (error) {\n                    // Ignore the broken tag.\n                }\n                return {};\n            }));\n        } else {\n            const {name, value, description} = nameAndValue;\n            if (name) {\n                tags[name] = {\n                    value,\n                    description\n                };\n            }\n        }\n    }\n\n    return {\n        readTags: tags,\n        readTagsPromise: tagsPromises.length > 0 ? Promise.all(tagsPromises) : undefined\n    };\n}\n\nfunction getNameAndValue(dataView, offset, length, type, async) {\n    const keywordChars = [];\n    const langChars = [];\n    const translatedKeywordChars = [];\n    let valueChars;\n    let parsingState = STATE_KEYWORD;\n    let compressionMethod = COMPRESSION_METHOD_NONE;\n\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        if (parsingState === STATE_COMPRESSION) {\n            compressionMethod = getCompressionMethod({type, dataView, offset: offset + i});\n            if (type === TYPE_ITXT) {\n                i += COMPRESSION_SECTION_ITXT_EXTRA_BYTE;\n            }\n            parsingState = moveToNextState(type, parsingState);\n            continue;\n        } else if (parsingState === STATE_TEXT) {\n            valueChars = new DataView(dataView.buffer.slice(offset + i, offset + length));\n            break;\n        }\n        const byte = dataView.getUint8(offset + i);\n        if (byte === 0) {\n            parsingState = moveToNextState(type, parsingState);\n        } else if (parsingState === STATE_KEYWORD) {\n            keywordChars.push(byte);\n        } else if (parsingState === STATE_LANG) {\n            langChars.push(byte);\n        } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n            translatedKeywordChars.push(byte);\n        }\n    }\n\n    if (compressionMethod !== COMPRESSION_METHOD_NONE && !async) {\n        return {};\n    }\n    const decompressedValueChars = decompress(valueChars, compressionMethod, getEncodingFromType(type));\n    if (decompressedValueChars instanceof Promise) {\n        return decompressedValueChars\n            .then((_decompressedValueChars) => constructTag(_decompressedValueChars, type, langChars, keywordChars))\n            .catch(() => constructTag('<text using unknown compression>'.split(''), type, langChars, keywordChars));\n    }\n    return constructTag(decompressedValueChars, type, langChars, keywordChars);\n}\n\nfunction getCompressionMethod({type, dataView, offset}) {\n    if (type === TYPE_ITXT) {\n        if (dataView.getUint8(offset) === COMPRESSION_FLAG_COMPRESSED) {\n            return dataView.getUint8(offset + 1);\n        }\n    } else if (type === TYPE_ZTXT) {\n        return dataView.getUint8(offset);\n    }\n    return COMPRESSION_METHOD_NONE;\n}\n\nfunction moveToNextState(type, parsingState) {\n    if (parsingState === STATE_KEYWORD && [TYPE_ITXT, TYPE_ZTXT].includes(type)) {\n        return STATE_COMPRESSION;\n    }\n    if (parsingState === STATE_COMPRESSION) {\n        if (type === TYPE_ITXT) {\n            return STATE_LANG;\n        }\n        return STATE_TEXT;\n    }\n    if (parsingState === STATE_LANG) {\n        return STATE_TRANSLATED_KEYWORD;\n    }\n    return STATE_TEXT;\n}\n\nfunction getEncodingFromType(type) {\n    if (type === TYPE_TEXT || type === TYPE_ZTXT) {\n        return 'latin1';\n    }\n    return 'utf-8';\n}\n\nfunction constructTag(valueChars, type, langChars, keywordChars) {\n    const value = getValue(valueChars);\n    return {\n        name: getName(type, langChars, keywordChars),\n        value,\n        description: type === TYPE_ITXT ? getDescription(valueChars) : value\n    };\n}\n\nfunction getName(type, langChars, keywordChars) {\n    const name = getStringValueFromArray(keywordChars);\n    if (type === TYPE_TEXT || langChars.length === 0) {\n        return name;\n    }\n    const lang = getStringValueFromArray(langChars);\n    return `${name} (${lang})`;\n}\n\nfunction getValue(valueChars) {\n    if (valueChars instanceof DataView) {\n        return getStringFromDataView(valueChars, 0, valueChars.byteLength);\n    }\n    return valueChars;\n}\n\nfunction getDescription(valueChars) {\n    return TagDecoder.decode('UTF-8', valueChars);\n}\n\nfunction isExifGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type exif' && value.substring(1, 5) === 'exif';\n}\n\nfunction isIptcGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type iptc' && value.substring(1, 5) === 'iptc';\n}\n\nfunction decodeRawData(value) {\n    const parts = value.match(/\\n(exif|iptc)\\n\\s*\\d+\\n([\\s\\S]*)$/);\n    return hexToDataView(parts[2].replace(/\\n/g, ''));\n}\n\nfunction hexToDataView(hex) {\n    const dataView = new DataView(new ArrayBuffer(hex.length / 2));\n    for (let i = 0; i < hex.length; i += 2) {\n        dataView.setUint8(i / 2, parseInt(hex.substring(i, i + 2), 16));\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME} from './image-header-png.js';\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunkOffsets) {\n    const tags = {};\n\n    for (let i = 0; i < chunkOffsets.length; i++) {\n        const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n        const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n\n        if (chunkType === TYPE_PHYS) {\n            tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n        } else if (chunkType === TYPE_TIME) {\n            tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n        }\n    }\n\n    return tags;\n}\n\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 0;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 4;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 8;\n    const TAG_SIZE = 1;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: value === 1 ? 'meters' : 'Unknown'\n    };\n}\n\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n    const TIME_TAG_SIZE = 7;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n        return undefined;\n    }\n\n    const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n    const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n    const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n    const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n    const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n    const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n\n    return {\n        value: [year, month, day, hours, minutes, seconds],\n        description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n    };\n}\n\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n    return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\n\nfunction pad(number, size) {\n    return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nconst IMAGE_WIDTH_OFFSET = 4;\nconst IMAGE_HEIGHT_OFFSET = 7;\n\n// https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\nfunction read(dataView, chunkOffset) {\n    const tags = {};\n\n    const flags = Types.getByteAt(dataView, chunkOffset);\n\n    tags['Alpha'] = getAlpha(flags);\n    tags['Animation'] = getAnimation(flags);\n    tags['ImageWidth'] = getThreeByteValue(dataView, chunkOffset + IMAGE_WIDTH_OFFSET);\n    tags['ImageHeight'] = getThreeByteValue(dataView, chunkOffset + IMAGE_HEIGHT_OFFSET);\n\n    return tags;\n}\n\nfunction getAlpha(flags) {\n    const value = flags & 0x10;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getAnimation(flags) {\n    const value = flags & 0x02;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getThreeByteValue(dataView, offset) {\n    // Values are stored little-endian.\n    const value = Types.getByteAt(dataView, offset)\n        + 256 * Types.getByteAt(dataView, offset + 1)\n        + 256 * 256 * Types.getByteAt(dataView, offset + 2)\n        + 1; // Value is 1-based, i.e. a value of 7 means 8px.\n\n    return {\n        value,\n        description: value + 'px'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// https://www.w3.org/Graphics/GIF/spec-gif87.txt\n// https://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView) {\n    return {\n        'GIF Version': getGifVersion(dataView),\n        'Image Width': getImageWidth(dataView),\n        'Image Height': getImageHeight(dataView),\n        'Global Color Map': getGlobalColorMap(dataView),\n        'Bits Per Pixel': getBitDepth(dataView),\n        'Color Resolution Depth': getColorResolution(dataView)\n    };\n}\n\nfunction getGifVersion(dataView) {\n    const OFFSET = 3;\n    const SIZE = 3;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = getStringFromDataView(dataView, OFFSET, SIZE);\n    return {\n        value,\n        description: value\n    };\n}\n\nfunction getImageWidth(dataView) {\n    const OFFSET = 6;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView) {\n    const OFFSET = 8;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getGlobalColorMap(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b10000000) >>> 7;\n    return {\n        value,\n        description: value === 1 ? 'Yes' : 'No'\n    };\n}\n\nfunction getColorResolution(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = ((byteValue & 0b01110000) >>> 4) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n\nfunction getBitDepth(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b00000111) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign, dataUriToBuffer} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport MpfTags from './mpf-tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport PhotoshopTags from './photoshop-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Vp8xTags from './vp8x-tags.js';\nimport GifFileTags from './gif-file-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {}) {\n    if (isFilePathOrURL(data)) {\n        options.async = true;\n        return loadFile(data, options).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        options.async = true;\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename, options) {\n    if (/^\\w+:\\/\\//.test(filename)) {\n        if (typeof fetch !== 'undefined') {\n            return fetchRemoteFile(filename, options);\n        }\n\n        return nodeGetRemoteFile(filename, options);\n    }\n\n    if (isDataUri(filename)) {\n        return Promise.resolve(dataUriToBuffer(filename));\n    }\n\n    return loadLocalFile(filename, options);\n}\n\nfunction fetchRemoteFile(url, {length} = {}) {\n    const options = {method: 'GET'};\n    if (Number.isInteger(length) && length >= 0) {\n        options.headers = {\n            range: `bytes=0-${length - 1}`,\n        };\n    }\n    return fetch(url, options).then((response) => response.arrayBuffer());\n}\n\nfunction nodeGetRemoteFile(url, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const options = {};\n        if (Number.isInteger(length) && length >= 0) {\n            options.headers = {\n                range: `bytes=0-${length - 1}`,\n            };\n        }\n\n        const get = requireNodeGet(url);\n        get(url, options, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction isDataUri(filename) {\n    return /^data:[^;,]*(;base64)?,/.test(filename);\n}\n\nfunction loadLocalFile(filename, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n                        const buffer = Buffer.alloc(size);\n                        const options = {\n                            buffer,\n                            length: size\n                        };\n                        fs.read(fd, options, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof window !== 'undefined') && (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(\n    dataView,\n    {expanded = false, async = false, includeUnknown = false} = {expanded: false, async: false, includeUnknown: false}\n) {\n    let foundMetaData = false;\n    let tags = {};\n    const tagsPromises = [];\n\n    const {\n        fileType,\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset,\n        pngTextChunks,\n        pngChunkOffsets,\n        vp8xChunkOffset,\n        gifHeaderOffset\n    } = ImageHeader.parseAppMarkers(dataView, async);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_PHOTOSHOP && readTags['ImageSourceData']) {\n            const readPhotoshopTags = PhotoshopTags.read(readTags['PhotoshopSettings'].value, includeUnknown);\n            if (expanded) {\n                tags.photoshop = readPhotoshopTags;\n            } else {\n                tags = objectAssign({}, tags, readPhotoshopTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks, async);\n        if (readTags instanceof Promise) {\n            tagsPromises.push(readTags.then(addIccTags));\n        } else {\n            addIccTags(readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = MpfTags.read(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n        foundMetaData = true;\n        const {readTags, readTagsPromise} = PngTextTags.read(dataView, pngTextChunks, async, includeUnknown);\n        addPngTextTags(readTags);\n        if (readTagsPromise) {\n            tagsPromises.push(readTagsPromise.then((tagList) => tagList.forEach(addPngTextTags)));\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n        foundMetaData = true;\n        const readTags = PngTags.read(dataView, pngChunkOffsets);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_WEBP && hasVp8xData(vp8xChunkOffset)) {\n        foundMetaData = true;\n        const readTags = Vp8xTags.read(dataView, vp8xChunkOffset);\n        if (expanded) {\n            tags.riff = !tags.riff ? readTags : objectAssign({}, tags.riff, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_GIF && hasGifFileData(gifHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = GifFileTags.read(dataView, gifHeaderOffset);\n        if (expanded) {\n            tags.gif = !tags.gif ? readTags : objectAssign({}, tags.gif, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (fileType) {\n        if (expanded) {\n            if (!tags.file) {\n                tags.file = {};\n            }\n            tags.file.FileType = fileType;\n        } else {\n            tags.FileType = fileType;\n        }\n        foundMetaData = true;\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    if (async) {\n        return Promise.all(tagsPromises).then(() => tags);\n    }\n    return tags;\n\n    function addIccTags(readTags) {\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    function addPngTextTags(readTags) {\n        if (expanded) {\n            for (const group of ['exif', 'iptc']) {\n                const groupKey = `__${group}`;\n                if (readTags[groupKey]) {\n                    tags[group] = !tags[group] ? readTags[groupKey] : objectAssign({}, tags.exif, readTags[groupKey]);\n                    delete readTags[groupKey];\n                }\n            }\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngText = !tags.pngText ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign(\n                {},\n                tags,\n                readTags.__exif ? readTags.__exif : {},\n                readTags.__iptc ? readTags.__iptc : {},\n                readTags\n            );\n            delete tags.__exif;\n            delete tags.__iptc;\n        }\n    }\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n\nfunction hasPngTextData(pngTextChunks) {\n    return pngTextChunks !== undefined;\n}\n\nfunction hasPngData(pngChunkOffsets) {\n    return pngChunkOffsets !== undefined;\n}\n\nfunction hasVp8xData(vp8xChunkOffset) {\n    return vp8xChunkOffset !== undefined;\n}\n\nfunction hasGifFileData(gifHeaderOffset) {\n    return gifHeaderOffset !== undefined;\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","DataView","buffer","_classCallCheck","_typeof","undefined","length","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","byteLength","offset","littleEndian","getDataView","data","byteOffset","error","DataViewWrapper","getStringFromDataView","dataView","chars","i","push","getUint8","getStringValueFromArray","getNullTerminatedStringFromDataView","char","getUnicodeStringFromDataView","getUint16","pop","getPascalStringFromDataView","size","charArray","map","charCode","String","fromCharCode","join","objectAssign","arguments","property","deferInit","object","initializer","initialized","configurable","apply","writable","getBase64Image","image","btoa","Array","reduce","Uint8Array","byte","Buffer","from","toString","strRepeat","string","num","COMPRESSION_METHOD_NONE","COMPRESSION_METHOD_DEFLATE","decompress","compressionMethod","encoding","returnType","DecompressionStream","decompressionStream","decompressedStream","Blob","stream","pipeThrough","Response","arrayBuffer","then","TextDecoder","decode","Promise","reject","concat","USE_FILE","USE_JFIF","USE_PNG_FILE","USE_EXIF","USE_IPTC","USE_XMP","USE_ICC","USE_MPF","USE_PHOTOSHOP","USE_THUMBNAIL","USE_TIFF","USE_JPEG","USE_PNG","USE_HEIC","USE_AVIF","USE_WEBP","USE_GIF","getStringValue","getEncodedString","slice","getCalculatedGpsValue","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","MIN_JPEG_DATA_BUFFER_LENGTH","JPEG_ID","JPEG_ID_SIZE","APP_ID_OFFSET","APP_MARKER_SIZE","JFIF_DATA_OFFSET","TIFF_HEADER_OFFSET","IPTC_DATA_OFFSET","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_DATA_OFFSET","MPF_DATA_OFFSET","APP2_ICC_IDENTIFIER","ICC_CHUNK_NUMBER_OFFSET","ICC_TOTAL_CHUNKS_OFFSET","APP2_MPF_IDENTIFIER","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","FILL_BYTE","APP0_JFIF_IDENTIFIER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","isSOF0Marker","appMarkerPosition","isSOF2Marker","isApp2ICCMarker","markerIdLength","isApp2MPFMarker","isApp0JfifMarker","isApp1ExifMarker","isApp1XmpMarker","isXmpIdentifier","isApp1ExtendedXmpMarker","isExtendedXmpIdentifier","getXmpChunkDetails","fieldLength","dataOffset","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","isAppMarker","appMarker","isFillByte","PNG_ID","PNG_CHUNK_LENGTH_SIZE","PNG_CHUNK_TYPE_SIZE","PNG_CHUNK_LENGTH_OFFSET","PNG_CHUNK_TYPE_OFFSET","PNG_CHUNK_DATA_OFFSET","PNG_XMP_PREFIX","TYPE_TEXT","TYPE_ITXT","TYPE_ZTXT","TYPE_PHYS","TYPE_TIME","TYPE_EXIF","TYPE_ICCP","isPngImageHeaderChunk","isPngXmpChunk","isPngTextChunk","async","chunkType","isPngExifChunk","isPngIccpChunk","isPngChunk","SUPPORTED_PNG_CHUNK_TYPES","includes","getPngXmpDataOffset","numberOfNullSeparators","parseIccHeader","profileName","compressedProfileOffset","getItems","version","offsets","sizes","offsetSize","lengthSize","indexSize","itemCount","items","item","extents","itemId","getItemId","constructionMethod","dataReferenceIndex","baseOffset","getVariableSizedValue","extentCount","j","extent","extentIndex","getExtentIndex","extentOffset","extentLength","getUint32","console","warn","get64BitValue","TYPE_FTYP","TYPE_IPRP","TYPE_META","TYPE_ILOC","TYPE_IINF","TYPE_INFE","TYPE_IPCO","TYPE_COLR","ITEM_INFO_TYPE_EXIF","ITEM_INFO_TYPE_MIME","ITEM_INFO_TYPE_URI","parseBox","_getBoxLength","boxLength","extendsToEndOfFile","contentOffset","hasExtendedSize","hasEmptyHighBits","getBoxLength","type","majorBrand","parseFileTypeBox","startOffset","subBoxes","parseSubBoxes","parseItemPropertiesBox","properties","parseItemPropertyContainerBox","icc","parseIcc","parseColorInformationBox","parseMetadataBox","_getItemLocationBoxOf","baseOffsetSize","getItemLocationBoxOffsetsAndSizes","getIndexSize","getItemCount","parseItemLocationBox","_getItemInformationBo","entryCount","itemInfos","getItemInformationBoxOffsetsAndSizes","parseItemInformationBox","entry","itemProtectionIndex","itemName","itemType","contentType","contentEncoding","itemUri","parseItemInformationEntryBox","findOffsets","Constants","metaBox","box","findMetaBox","exifItemId","find","itemInfo","findIinfExifItemId","ilocItem","findIlocItem","exifOffset","getTiffHeaderOffset","findExifOffset","xmpChunks","xmpItemId","findIinfXmpItemId","ilocItemExtent","findXmpChunks","iccChunks","findIccChunks","hasAppMarkers","colorType","chunkNumber","chunksTotal","ACCEPTED_ITEM_INFO_TYPES","currentOffset","indexOf","GIF_SIGNATURE_SIZE","GIF_SIGNATURES","XML_MARKER_OFFSET","XML_MARKER","parseAppMarkers","ByteOrder","hasTiffMarker","Tiff","addFileType","Jpeg","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","mpfDataOffset","iccDataOffset","iccDataLength","iccChunkNumber","iccChunksTotal","fileDataOffset","Png","pngHeaderOffset","pngTextChunks","chunkDataLength","iccHeaderOffset","_parseIccHeader","pngChunkOffsets","headerBox","Heic","Avif","RIFF_ID","WEBP_MARKER","Webp","vp8xChunkOffset","chunkId","chunkSize","EXIF_IDENTIFIER","Gif","gifHeaderOffset","Xml","fileType","fileTypeDescription","description","ApertureValue","Math","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","decimal","Number","isInteger","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","name","TagNamesCommon","values","formats","isArray","sample","ref","_ref","_ref2","test","status","mode","tagNames0thExifIfds","TagNames0thIfd","x","y","focalLengthFrom","parseFloat","focalLengthTo","focalLengths","maxAperture","IFD_TYPE_0TH","IFD_TYPE_EXIF","IFD_TYPE_INTEROPERABILITY","_defineProperty","TagNamesGpsIfd","TagNamesInteroperabilityIfd","TagNamesMpfIfd","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getInt32","getTagValueAt","Types","get0thIfdOffset","readIfd","ifdType","includeUnknown","FIELD_COUNT_SIZE","tags","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","id","nextIfdOffset","tagValue","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","TagNames","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","decodeAsciiValue","splitNullSeparatedAsciiString","tagName","tagDescription","getDescriptionFromTagValue","count","valueIndex","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","read","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","images","ceil","ENTRY_SIZE","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","getImageOffset","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","entries","flags","flagsDescription","imageFormat","imageIndex","mpEntry","isFirstIndividualImage","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","Decoder","TAG_HEADER_SIZE","parseTags","_getNaaResourceBlock","BYTES_8BIM_SIZE","resourceBlock","getResourceBlock","isNaaResourceBlock","naaBlock","getBlockPadding","getNaaResourceBlock","endOfBlockOffset","_readTag","tagSize","leadByteIsMissing","IptcTagNames","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","fraction","calculateGPSValue","substring","parseNumber","numbers","number","charCodeAt","isFraction","func","_value$split2","degreesString","minutesString","degrees","minutes","isNaN","chunks","readTags","_extractCompleteChunk2","completeChunks","combineChunks","extractCompleteChunks","standardXmp","extendedXmp","hasStandardTags","hasExtendedTags","_raw","totalLength","chunk","combinedChunks","set","chunkDataView","_getDocument","domParser","DOMParser","__non_webpack_require__","errorHandler","xmlString","doc","parseFromString","replace","documentElement","nodeName","textContent","raw","getDocument","parseXMPObject","convertToObject","getRDF","node","childNodes","nodes","isTopNode","elements","getChildNodes","nodeValue","getTextValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","getDescriptionOfArray","XmpTagNames","descriptions","getClearTextKey","getDescriptionOfObject","children","parseNodeAsTag","isDuplicateTag","parseNodeAsSimpleValue","parseNodeAsDuplicateTag","trim","isEmptyResourceTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","parseNodeAttributes","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","paths","TYPE_SIZE","PATH_RECORD_TYPES","path","JSON","stringify","parseBezierKnot","getFixedPointNumber","parsePathPoint","vertical","binaryPoint","sign","integer","radix","parseFloatRadix","bytes","signature","SIGNATURE_SIZE","tagId","_getTagName","TAG_ID_SIZE","tagNameSize","resourceSize","RESOURCE_LENGTH_SIZE","SIGNATURE","valueDataView","_getPascalStringFromD2","stringSize","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","iccData","catch","readCompressedIcc","totalIccProfileLength","sum","iccBinaryData","getBuffer","_loop","iccDataChunk","chunkData","readIcc","PROFILE_HEADER_LENGTH","ICC_TAG_COUNT_OFFSET","ICC_SIGNATURE","TAG_TYPE_DESC","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","hasTagsData","tagHeaderOffset","iccProfileKeys","profileEntry","sliceToString","iccDoesNotHaveTagCount","tagSignature","tagOffset","tagValueSize","addTag","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","getBitDepth","getColorType","getCompression","getFilter","getInterlace","tagsPromises","_pngTextChunks$i","nameAndValue","getNameAndValue","isExifGroupTag","__exif","Tags","decodeRawData","EXIF_OFFSET","isIptcGroupTag","__iptc","IptcTags","readTagsPromise","all","STATE_KEYWORD","STATE_COMPRESSION","STATE_LANG","STATE_TRANSLATED_KEYWORD","STATE_TEXT","COMPRESSION_SECTION_ITXT_EXTRA_BYTE","COMPRESSION_FLAG_COMPRESSED","valueChars","keywordChars","langChars","translatedKeywordChars","parsingState","moveToNextState","getCompressionMethod","decompressedValueChars","getEncodingFromType","_decompressedValueChars","constructTag","_ref3","getValue","getName","lang","hex","ArrayBuffer","setUint8","hexToDataView","match","chunkOffsets","chunkLength","getPixelsPerUnitX","getPixelsPerUnitY","getPixelUnits","getModifyDate","chunkOffset","tagFitsInBuffer","pad","repeat","getAlpha","getAnimation","getThreeByteValue","IMAGE_WIDTH_OFFSET","IMAGE_HEIGHT_OFFSET","getGifVersion","getGlobalColorMap","getColorResolution","COMPRESSION_JPEG","thumbnailTags","Compression","JPEGInterchangeFormat","JPEGInterchangeFormatLength","MetadataMissingError","message","stack","load","loadView","errors","exifErrors","file","options","isFilePathOrURL","filename","fetch","url","method","headers","range","response","fetchRemoteFile","resolve","requireNodeGet","statusCode","on","statusMessage","resume","nodeGetRemoteFile","isDataUri","dataUri","atob","decodedData","dataUriToBuffer","fs","requireNodeFs","open","fd","stat","min","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","window","File","isBrowserFileObject","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","isBuffer","isNodeBuffer","_ref4","expanded","_ref4$expanded","_ref4$async","_ref4$includeUnknown","foundMetaData","_ImageHeader$parseApp","ImageHeader","hasFileData","FileTags","hasJfifData","JfifTags","jfif","hasExifData","Thumbnail","exif","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","addGpsGroup","hasIptcData","readIptcTags","iptc","hasXmpData","readXmpTags","XmpTags","xmp","readPhotoshopTags","PhotoshopTags","photoshop","hasIccData","readIccTags","IccTags","addIccTags","hasMpfData","readMpfTags","MpfTags","mpf","PngFileTags","png","pngFile","hasPngTextData","_PngTextTags$read","PngTextTags","addPngTextTags","tagList","hasPngData","PngTags","hasVp8xData","Vp8xTags","riff","hasGifFileData","GifFileTags","gif","FileType","_i","_arr","group","groupKey","pngText","iccDataOffsets"],"sourceRoot":""}