{"version":3,"sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tag-names-common.js","webpack://ExifReader/./src/exif-reader.js","webpack://ExifReader/./src/dataview.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/file-tags.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/tag-decoder.js","webpack://ExifReader/./src/text-decoder.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/dom-parser.js","webpack://ExifReader/./src/icc-tags.js","webpack://ExifReader/./src/icc-tag-names.js","webpack://ExifReader/./src/errors.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getStringValueFromArray","charArray","map","charCode","String","fromCharCode","getStringFromDataView","dataView","offset","length","chars","byteLength","push","getUint8","join","getUnicodeStringFromDataView","getUint16","objectAssign","target","sources","source","getStringValue","getEncodedString","encoding","slice","getCharacterArray","string","split","character","charCodeAt","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","Error","typeSizes","1","2","3","4","5","7","9","10","13","tagTypes","getByteAt","getLongAt","byteOrder","getUint32","ByteOrder","getSlongAt","getInt32","getAsciiValue","getAsciiAt","getShortAt","getRationalAt","getUndefinedAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","undefined","load","loadView","data","options","expanded","DataView","error","DataViewWrapper","getDataView","iccDataOffsets","foundMetaData","tags","ImageHeader","parseAppMarkers","fileDataOffset","iptcDataOffset","xmpChunks","iccChunks","hasFileData","readTags","FileTags","read","file","hasExifData","Tags","exif","hasIptcData","IptcTags","iptc","Array","isArray","hasXmpData","XmpTags","xmp","IccTags","icc","exifErrors","MetadataMissingError","errors","buffer","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","littleEndian","MIN_TIFF_DATA_BUFFER_LENGTH","MIN_JPEG_DATA_BUFFER_LENGTH","TIFF_ID","TIFF_ID_OFFSET","TIFF_FILE_HEADER_OFFSET","HEIC_ID","HEIC_ID_OFFSET","HEIC_MAJOR_BRANDS","HEIC_MAJOR_BRAND_LENGTH","JPEG_ID","JPEG_ID_SIZE","APP_ID_OFFSET","APP_MARKER_SIZE","TIFF_HEADER_OFFSET","IPTC_DATA_OFFSET","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_DATA_OFFSET","APP2_ICC_IDENTIFIER","ICC_CHUNK_NUMBER_OFFSET","ICC_TOTAL_CHUNKS_OFFSET","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","isSOF0Marker","appMarkerPosition","isSOF2Marker","isApp2ICCMarker","markerIdLength","isApp1ExifMarker","isApp1XmpMarker","isXmpIdentifier","isApp1ExtendedXmpMarker","isExtendedXmpIdentifier","getXmpChunkDetails","fieldLength","dataOffset","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","isAppMarker","appMarker","hasTiffMarker","isTiffFile","hasAppMarkers","isJpegFile","sof0DataOffset","sof2DataOffset","iccDataOffset","iccDataLength","iccChunkNumber","iccChunksTotal","chunkNumber","chunksTotal","findJpegOffsets","heicMajorBrand","indexOf","isHeicFile","findHeicOffsets","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","getTagValueAt","Types","readIfd","ifdType","FIELD_COUNT_SIZE","numberOfFields","fieldIndex","tag","readTag","id","description","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValue","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","decodeAsciiValue","splitNullSeparatedAsciiString","TagNames","tagName","tagDescription","getDescriptionFromTagValue","type","count","valueIndex","get0thIfdOffset","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","tagNames0thExifIfds","TagNames0thIfd","TagNamesExifIfd","TagNamesGpsIfd","TagNamesInteroperabilityIfd","0","formats","6","sample","TagNamesCommon","ref","num","status","getDataPrecision","OFFSET","getImageHeight","getImageWidth","getSubsampling","numberOfColorComponents","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","getLength","getNumberOfColorComponents","BYTES_8BIM","BYTES_8BIM_SIZE","RESOURCE_BLOCK_HEADER_SIZE","NAA_RESOURCE_BLOCK_TYPE","TAG_HEADER_SIZE","getResourceBlock","size","isNaaResourceBlock","resourceBlock","getBlockPadding","leadByteIsMissing","tagSize","getTagName","IptcTagNames","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","decode","naaBlock","getNaaResourceBlock","endOfBlockOffset","parseTags","getCreationDate","date","substr","getCreationTime","time","parsedTime","getEncodingName","toString","parts","stringValue","character0","charAt","character1","parseInt","bits","duration","intValue","formatVersions","objectDataPreviewFileFormat","Decoder","TextDecoder","Uint8Array","from","combineChunks","chunks","totalLength","reduce","chunk","combinedChunks","set","chunkDataView","rdf","getRDF","node","childNodes","Parser","DOMParser","console","warn","domParser","xmlSource","doc","parseFromString","documentElement","nodeName","textContent","getDocument","parseXMPObject","convertToObject","nodes","isTopNode","elements","getChildNodes","nodeValue","getTextValue","forEach","isElement","nodeElement","attributes","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","item","getDescriptionOfArray","descriptions","getClearTextKey","getDescriptionOfObject","XmpTagNames","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAttributes","parseNodeAsStructureRdfDescription","keys","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","hasNestedArrayValue","parseArrayValue","parseNodeAsArray","getURIValue","parseNodeAsSimpleValue","parseNodeChildrenAsAttributes","parseRdfValue","completeChunks","extractCompleteChunks","calculateGPSValue","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","eval","iccData","totalIccProfileLength","sum","iccBinaryData","iccDataChunk","find","x","chunkData","PROFILE_HEADER_LENGTH","ICC_TAG_COUNT_OFFSET","ICC_SIGNATURE","TAG_TYPE_DESC","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","hasTagsData","tagHeaderOffset","iccProfile","profileEntry","sliceToString","iccDoesNotHaveTagCount","tagSignature","tagOffset","tagValueSize","addTag","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","apply","iccTags","toCompany","toLowerCase","8","12","16","20","24","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","36","40","48","52","64","80","message","stack"],"mappings":"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","file":"exif-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i, false));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    return getStringValueFromArray(chars).join('');\n}\n\nfunction getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nexport function objectAssign(target, ...sources) {\n    for (const source of sources) {\n        for (const property in source) {\n            target[property] = source[property];\n        }\n    }\n\n    return target;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder) / getLongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return getSlongAt(dataView, offset, byteOrder) / getSlongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'LightSource': (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    }\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2018  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport {objectAssign} from './utils';\nimport DataViewWrapper from './dataview';\nimport ImageHeader from './image-header';\nimport Tags from './tags';\nimport FileTags from './file-tags';\nimport IptcTags from './iptc-tags';\nimport XmpTags from './xmp-tags';\nimport IccTags from './icc-tags';\nimport exifErrors from './errors';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {expanded: false}) {\n    return loadView(getDataView(data), options);\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(dataView, options = {expanded: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    const {fileDataOffset, tiffHeaderOffset, iptcDataOffset, xmpChunks, iccChunks} = ImageHeader.parseAppMarkers(dataView);\n\n    if (hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (options.expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset);\n        if (options.expanded) {\n            tags.exif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset);\n        if (options.expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (options.expanded) {\n            tags.xmp = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks);\n        if (options.expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\nimport ByteOrder from './byte-order';\n\nconst MIN_TIFF_DATA_BUFFER_LENGTH = 4;\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst TIFF_ID = 0x2a;\nconst TIFF_ID_OFFSET = 2;\nconst TIFF_FILE_HEADER_OFFSET = 0;\nconst HEIC_ID = 'ftyp';\nconst HEIC_ID_OFFSET = 4;\nconst HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\nconst HEIC_MAJOR_BRAND_LENGTH = 4;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView) {\n    if (isTiffFile(dataView)) {\n        return findTiffOffsets();\n    }\n\n    if (isJpegFile(dataView)) {\n        return findJpegOffsets(dataView);\n    }\n\n    if (isHeicFile(dataView)) {\n        return findHeicOffsets(dataView);\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction isTiffFile(dataView) {\n    return (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    return {\n        hasAppMarkers: true,\n        tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n    };\n}\n\nfunction isJpegFile(dataView) {\n    return (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0, false) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET, false);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET, false);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition, false);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isHeicFile(dataView) {\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    const NULL_VALUES_LENGTH = 2;\n    const BYTE_ORDER_LENGTH = 2;\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n    let offset = HEIC_ID_OFFSET + HEIC_ID.length + HEIC_MAJOR_BRAND_LENGTH;\n\n    while (offset + markerIdLength + NULL_VALUES_LENGTH + BYTE_ORDER_LENGTH <= dataView.byteLength) {\n        const byteOrder = dataView.getUint16(offset + markerIdLength + NULL_VALUES_LENGTH, false);\n\n        if ((getStringFromDataView(dataView, offset, markerIdLength) === APP1_EXIF_IDENTIFIER)\n            && (dataView.getUint8(offset + markerIdLength, false) === 0x00)\n            && ((byteOrder === ByteOrder.LITTLE_ENDIAN) || (byteOrder === ByteOrder.BIG_ENDIAN))) {\n            return {\n                hasAppMarkers: true,\n                tiffHeaderOffset: offset + markerIdLength + NULL_VALUES_LENGTH\n            };\n        }\n\n        offset++;\n    }\n\n    return {\n        hasAppMarkers: false\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils';\nimport ByteOrder from './byte-order';\nimport Types from './types';\nimport TagNames from './tag-names';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport default {\n    read\n};\n\nfunction read(dataView, tiffHeaderOffset) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = Types.getShortAt(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n        offset += FIELD_SIZE;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n        return {\n            id: tagCode,\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n    }\n\n    return {\n        id: tagCode,\n        name: `undefined-${tagCode}`,\n        value: tagValue,\n        description: tagValue\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\n    let value = [];\n\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (const character of string) {\n        if (character === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += character;\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils';\nimport TagNames0thIfd from './tag-names-0th-ifd';\nimport TagNamesExifIfd from './tag-names-exif-ifd';\nimport TagNamesGpsIfd from './tag-names-gps-ifd';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport default {\n    '0th': tagNames0thExifIfds,\n    'exif': tagNames0thExifIfds,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: 'XResolution',\n    0x011b: 'YResolution',\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: 'XPosition',\n    0x011f: 'YPosition',\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: (value) => {\n            if (value === 2) {\n                return 'inches';\n            }\n            if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: 'WhitePoint',\n    0x013f: 'PrimaryChromaticities',\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: 'YCbCrCoefficients',\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: 'ReferenceBlackWhite',\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils';\nimport TagNamesCommon from './tag-names-common';\n\nexport default {\n    0x829a: 'ExposureTime',\n    0x829d: 'FNumber',\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Undefined';\n            } else if (value === 1) {\n                return 'Manual';\n            } else if (value === 2) {\n                return 'Normal program';\n            } else if (value === 3) {\n                return 'Aperture priority';\n            } else if (value === 4) {\n                return 'Shutter priority';\n            } else if (value === 5) {\n                return 'Creative program';\n            } else if (value === 6) {\n                return 'Action program';\n            } else if (value === 7) {\n                return 'Portrait mode';\n            } else if (value === 8) {\n                return 'Landscape mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': (value) => {\n            return value.map((character) => {\n                if (character === 0x31) {\n                    return 'Y';\n                } else if (character === 0x32) {\n                    return 'Cb';\n                } else if (character === 0x33) {\n                    return 'Cr';\n                } else if (character === 0x34) {\n                    return 'R';\n                } else if (character === 0x35) {\n                    return 'G';\n                } else if (character === 0x36) {\n                    return 'B';\n                }\n            }).join('');\n        }\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: 'ShutterSpeedValue',\n    0x9202: 'ApertureValue',\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: 'MaxApertureValue',\n    0x9206: 'SubjectDistance',\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Average';\n            } else if (value === 2) {\n                return 'CenterWeightedAverage';\n            } else if (value === 3) {\n                return 'Spot';\n            } else if (value === 4) {\n                return 'MultiSpot';\n            } else if (value === 5) {\n                return 'Pattern';\n            } else if (value === 6) {\n                return 'Partial';\n            } else if (value === 255) {\n                return 'Other';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon['LightSource']\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: 'FocalLength',\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x9400: 'AmbientTemperature',\n    0x9401: 'Humidity',\n    0x9402: 'Pressure',\n    0x9403: 'WaterDepth',\n    0x9404: 'Acceleration',\n    0x9405: 'CameraElevationAngle',\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': (value) => {\n            if (value === 1) {\n                return 'sRGB';\n            } else if (value === 0xffff) {\n                return 'Uncalibrated';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': (value) => {\n            if (value === 2) {\n                return 'inches';\n            } else if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal process';\n            } else if (value === 1) {\n                return 'Custom process';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto exposure';\n            } else if (value === 1) {\n                return 'Manual exposure';\n            } else if (value === 2) {\n                return 'Auto bracket';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto white balance';\n            } else if (value === 1) {\n                return 'Manual white balance';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Digital zoom was not used';\n            }\n            return value;\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Standard';\n            } else if (value === 1) {\n                return 'Landscape';\n            } else if (value === 2) {\n                return 'Portrait';\n            } else if (value === 3) {\n                return 'Night scene';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Low saturation';\n            } else if (value === 2) {\n                return 'High saturation';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: 'LensSpecification',\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return value + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (value) => {\n            return value.map((num) => {\n                if (`${num}`.length === 1) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names';\nimport TagDecoder from './tag-decoder';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset) {\n    try {\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset) {\n    const tags = {};\n    let encoding = undefined;\n\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding);\n\n        if (tag === null) {\n            break;\n        }\n\n        if ('encoding' in tag) {\n            encoding = tag.encoding;\n        }\n\n        if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n            tags[tag.name] = {\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            };\n        } else {\n            if (!(tags[tag.name] instanceof Array)) {\n                tags[tag.name] = [{\n                    id: tags[tag.name].id,\n                    value: tags[tag.name].value,\n                    description: tags[tag.name].description\n                }];\n            }\n            tags[tag.name].push({\n                id: tag.id,\n                value: tag.value,\n                description: tag.description\n            });\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                return value.length === 2 ? 'ObjectData Preview File Format' : 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils';\nimport XmpTagNames from './xmp-tag-names';\nimport DOMParser from './dom-parser';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    return extractCompleteChunks(dataView, chunks).reduce(readTags, {});\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (const chunk of chunks) {\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const doc = getDocument(chunkDataView);\n        const rdf = getRDF(doc);\n\n        return objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n    } catch (error) {\n        return tags;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const Parser = DOMParser.get();\n    if (!Parser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const domParser = new Parser();\n    const xmlSource = getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(xmlSource, 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return doc;\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        return getDescriptionOfArray(value);\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${value[key].value}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    } else if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    } else if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    } else if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n\n    if (hasNestedArrayValue(item)) {\n        return parseNodeChildrenAsTags(item.value);\n    }\n\n    return {\n        value: item.value,\n        attributes: parseNodeAttributes(item),\n        description: getDescription(item.value)\n    };\n}\n\nfunction hasNestedArrayValue(node) {\n    return node.attributes['rdf:parseType'] === 'Resource';\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue\n};\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return DOMParser;\n    }\n    try {\n        return eval('require')('xmldom').DOMParser; // This stops Webpack from replacing the require with a generic import and bundling the module.\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names';\nimport {getStringFromDataView, getUnicodeStringFromDataView} from './utils';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\nfunction read(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = dataView.buffer;\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    for (const offset of Object.keys(iccProfile)) {\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n"],"sourceRoot":""}