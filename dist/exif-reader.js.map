{"version":3,"file":"exif-reader.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAoB,WAAID,IAExBD,EAAiB,WAAIC,GACtB,CATD,CASmB,oBAATK,KAAuBA,KAAOC,MAAM,WAC9C,O,wBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,SAASN,EAASO,GACzC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAET,EAASQ,IAC5EE,OAAOC,eAAeX,EAASQ,EAAK,CAAEI,WAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAF,EAAwB,SAASQ,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,ECCtGT,EAAwB,SAASN,GACX,oBAAXmB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeX,EAASmB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeX,EAAS,aAAc,CAAEqB,MAAO,GACvD,G,oXCNqBC,EAAQ,WACzB,SAAAA,EAAYC,GACR,G,4FADgBC,CAAA,KAAAF,GAmCxB,SAAiCC,GAC7B,MAAyB,WAAlBE,EAAOF,SACWG,IAAlBH,EAAOI,aACcD,IAArBH,EAAOK,gBACiBF,IAAxBH,EAAOM,mBACiBH,IAAxBH,EAAOO,mBACiBJ,IAAxBH,EAAOQ,mBACiBL,IAAxBH,EAAOS,mBACgBN,IAAvBH,EAAOU,kBACgBP,IAAvBH,EAAOW,WAClB,CA5CYC,CAAwBZ,GACxB,MAAUa,MAAM,gDAGpB/B,KAAKkB,OAASA,EACdlB,KAAKgC,WAAahC,KAAKkB,OAAOI,MAClC,C,QAyBC,O,EAzBAL,G,EAAA,EAAAd,IAAA,WAAAa,MAED,SAASiB,GACL,OAAOjC,KAAKkB,OAAOK,UAAUU,EACjC,GAAC,CAAA9B,IAAA,YAAAa,MAED,SAAUiB,EAAQC,GACd,OAAIA,EACOlC,KAAKkB,OAAOM,aAAaS,GAE7BjC,KAAKkB,OAAOO,aAAaQ,EACpC,GAAC,CAAA9B,IAAA,YAAAa,MAED,SAAUiB,EAAQC,GACd,OAAIA,EACOlC,KAAKkB,OAAOQ,aAAaO,GAE7BjC,KAAKkB,OAAOS,aAAaM,EACpC,GAAC,CAAA9B,IAAA,WAAAa,MAED,SAASiB,EAAQC,GACb,OAAIA,EACOlC,KAAKkB,OAAOU,YAAYK,GAE5BjC,KAAKkB,OAAOW,YAAYI,EACnC,M,yeAAChB,CAAA,CAjCwB,GCMtB,SAASkB,EAAYC,EAAMC,EAAYL,GAC1C,IACI,OAAO,IAAIf,SAASmB,EAAMC,EAAYL,EAC1C,CAAE,MAAOM,GACL,OAAO,IAAIC,EAAgBH,EAAMC,EAAYL,EACjD,CACJ,CAEO,SAASQ,EAAsBC,EAAUR,EAAQX,GAEpD,IADA,IAAMoB,EAAQ,GACLC,EAAI,EAAGA,EAAIrB,GAAUW,EAASU,EAAIF,EAAST,WAAYW,IAC5DD,EAAME,KAAKH,EAASI,SAASZ,EAASU,IAE1C,OAAOG,EAAwBJ,EACnC,CAgBO,SAASK,EAA6BN,EAAUR,EAAQX,GAE3D,IADA,IAAMoB,EAAQ,GACLC,EAAI,EAAGA,EAAIrB,GAAUW,EAASU,EAAIF,EAAST,WAAYW,GAAK,EACjED,EAAME,KAAKH,EAASO,UAAUf,EAASU,IAK3C,OAHgC,IAA5BD,EAAMA,EAAMpB,OAAS,IACrBoB,EAAMO,MAEHH,EAAwBJ,EACnC,CAEO,SAASQ,EAA4BT,EAAUR,GAClD,IAAMkB,EAAOV,EAASI,SAASZ,GAE/B,MAAO,CAACkB,EADOX,EAAsBC,EAAUR,EAAS,EAAGkB,GAE/D,CAEO,SAASL,EAAwBM,GACpC,OAAOA,EAAUC,KAAI,SAACC,GAAQ,OAAKC,OAAOC,aAAaF,EAAS,IAAEG,KAAK,GAC3E,CAMO,SAASC,IACZ,IAAK,IAAIf,EAAI,EAAGA,EAAIgB,UAAUrC,OAAQqB,IAClC,IAAK,IAAMiB,KAAYD,UAAUhB,GAC7BgB,UAAU,GAAGC,GAAYD,UAAUhB,GAAGiB,GAI9C,OAAOD,UAAU,EACrB,CAEO,SAASE,EAAUC,EAAQ3D,EAAK4D,GACnC,IAAIC,EAAc,EAClB3D,OAAOC,eAAewD,EAAQ3D,EAAK,CAC/BK,IAAG,WAUC,OATKwD,IACDA,EAAc,EACd3D,OAAOC,eAAewD,EAAQ3D,EAAK,CAC/B8D,aAAc,EACd1D,WAAY,EACZS,MAAO+C,EAAYG,MAAMJ,GACzBK,SAAU,KAGXL,EAAO3D,EAClB,EACA8D,aAAc,EACd1D,WAAY,GAEpB,CAEO,SAAS6D,EAAeC,GAC3B,MAAoB,oBAATC,KACc,iBAAVD,EAEAC,KAAKD,GAGTC,KAAKC,MAAM5D,UAAU6D,OAAO3D,KAAK,IAAI4D,WAAWJ,IAAQ,SAACjC,EAAMsC,GAAI,OAAKtC,EAAOmB,OAAOC,aAAakB,EAAK,GAAE,KAE/F,oBAAXC,OAGgB,oBAAhBA,OAAOC,KACPD,OAAOC,KAAKP,GAAOQ,SAAS,UAE/B,IAAIF,OAAON,GAAQQ,SAAS,eANpC,CAOJ,CAsCO,SAASC,EAAUC,EAAQC,GAC9B,OAAWT,MAAMS,EAAM,GAAGvB,KAAKsB,EACnC,CAEO,IAAME,OAA0B5D,EAC1B6D,EAA6B,EAEnC,SAASC,EAAW1C,EAAU2C,GAA0C,IAAvBC,EAAU1B,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,GAAG,SACjE,GAAIyB,IAAsBF,GACa,mBAAxBI,oBAAoC,CAC3C,IAAMC,EAAsB,IAAID,oBAAoB,WAC9CE,EAAqB,IAAIC,KAAK,CAAChD,IAAWiD,SAASC,YAAYJ,GACrE,MAAmB,aAAfF,EACO,IAAIO,SAASJ,GAAoBK,cAAcC,MAAK,SAACD,GAAW,OAAK,IAAI5E,SAAS4E,EAAY,IAElG,IAAID,SAASJ,GAAoBO,MAC5C,CAEJ,YAA0B1E,IAAtB+D,EACOY,QAAQC,OAAO,8BAADC,OAA+Bd,EAAiB,MAElE3C,CACX,CCnKA,OACI0D,SAAU,EACVC,SAAU,EACVC,aAAc,EACdC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,cAAe,EACfC,cAAe,EACfC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,QAAS,GCjBN,SAASC,EAAepG,GAC3B,OAAOA,EAAMqC,KAAI,SAACC,GAAQ,OAAKC,OAAOC,aAAaF,EAAS,IAAEG,KAAK,GACvE,CAEO,SAAS4D,EAAiBrG,GAC7B,GAAIA,EAAMM,QAAU,EAAG,CACnB,IAAMgG,EAAWF,EAAepG,EAAMuG,MAAM,EAAG,IAE/C,GAAiB,gBAAbD,EACA,OAAOF,EAAepG,EAAMuG,MAAM,IAC/B,GAAiB,kBAAbD,EACP,MAAO,qBACJ,GAAiB,cAAbA,EACP,MAAO,yBACJ,GAAiB,qBAAbA,EACP,MAAO,sBAEf,CAEA,MAAO,WACX,CAEO,SAASE,EAAsBxG,GAClC,OAAQA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAOA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAM,GAAMA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAM,IAC1G,CCxBA,IAAMyG,EAAgB,MAChBC,EAAa,MAEnB,GACIA,WAAAA,EACAD,cAAAA,EACAE,aAGJ,SAAsBlF,EAAUmF,GAC5B,GAAInF,EAASO,UAAU4E,KAAsBH,EACzC,OAAOA,EACJ,GAAIhF,EAASO,UAAU4E,KAAsBF,EAChD,OAAOA,EAEX,MAAU3F,MAAM,0CACpB,GCRM8F,EAA8B,EAC9BC,EAAU,MACVC,EAAe,EACfC,EAAgB,EAChBC,EAAkB,EAClBC,EAAmB,EACnBC,EAAqB,GACrBC,EAAmB,GACnBC,EAAkB,GAClBC,EAA2B,GAC3BC,EAAuB,GACvBC,EAAkB,EAElBC,EAAsB,gBACtBC,EAA0BV,EAAgBS,EAAoBnH,OAC9DqH,EAA0BD,EAA0B,EAEpDE,EAAsB,QAEtBC,EAAc,MACdC,EAAc,MACdC,EAAa,MACbC,EAAa,MACbC,EAAa,MACbC,EAAa,MAEbC,EAAc,MACdC,EAAc,MACdC,EAAc,MACdC,EAAe,MACfC,EAAe,MACfC,EAAiB,MAIjBC,EAAY,MAEZC,EAAuB,OACvBC,EAAuB,OACvBC,GAAsB,iCACtBC,GAA+B,uCAC/BC,GAAwB,gBAmF9B,SAASC,GAAatH,EAAUuH,GAC5B,OAAQvH,EAASO,UAAUgH,KAAuBnB,CACtD,CAEA,SAASoB,GAAaxH,EAAUuH,GAC5B,OAAQvH,EAASO,UAAUgH,KAAuBlB,CACtD,CAEA,SAASoB,GAAgBzH,EAAUuH,GAC/B,IAAMG,EAAiB1B,EAAoBnH,OAE3C,OAAQmB,EAASO,UAAUgH,KAAuBX,GAC1C7G,EAAsBC,EAAUuH,EAAoBhC,EAAemC,KAAoB1B,CACnG,CAEA,SAAS2B,GAAgB3H,EAAUuH,GAC/B,IAAMG,EAAiBvB,EAAoBtH,OAE3C,OAAQmB,EAASO,UAAUgH,KAAuBX,GAC1C7G,EAAsBC,EAAUuH,EAAoBhC,EAAemC,KAAoBvB,CACnG,CAEA,SAASyB,GAAiB5H,EAAUuH,GAChC,IAAMG,EAAiBT,EAAqBpI,OAE5C,OAAQmB,EAASO,UAAUgH,KAAuBb,GAC1C3G,EAAsBC,EAAUuH,EAAoBhC,EAAemC,KAAoBT,GACb,IAA1EjH,EAASI,SAASmH,EAAoBhC,EAAgBmC,EAClE,CAEA,SAASG,GAAiB7H,EAAUuH,GAChC,IAAMG,EAAiBR,EAAqBrI,OAE5C,OAAQmB,EAASO,UAAUgH,KAAuBZ,GAC1C5G,EAAsBC,EAAUuH,EAAoBhC,EAAemC,KAAoBR,GACb,IAA1ElH,EAASI,SAASmH,EAAoBhC,EAAgBmC,EAClE,CAEA,SAASI,GAAgB9H,EAAUuH,GAC/B,OAAQvH,EAASO,UAAUgH,KAAuBZ,GAItD,SAAyB3G,EAAUuH,GAC/B,IAAMG,EAAiBP,GAAoBtI,OAC3C,OAAOkB,EAAsBC,EAAUuH,EAAoBhC,EAAemC,KAAoBP,EAClG,CANWY,CAAgB/H,EAAUuH,EACrC,CAOA,SAASS,GAAwBhI,EAAUuH,GACvC,OAAQvH,EAASO,UAAUgH,KAAuBZ,GAItD,SAAiC3G,EAAUuH,GACvC,IAAMG,EAAiBN,GAA6BvI,OACpD,OAAOkB,EAAsBC,EAAUuH,EAAoBhC,EAAemC,KAAoBN,EAClG,CANWa,CAAwBjI,EAAUuH,EAC7C,CAOA,SAASW,GAAmBX,EAAmBY,GAC3C,MAAO,CACHC,WAAYb,EAAoB3B,EAChC/G,OAAQsJ,GAAevC,EAAkBJ,GAEjD,CAEA,SAAS6C,GAA2Bd,EAAmBY,GACnD,MAAO,CACHC,WAAYb,EAAoB1B,EAChChH,OAAQsJ,GAAetC,EAA2BL,GAE1D,CAEA,SAAS8C,GAAuBtI,EAAUuH,GACtC,IAAMG,EAAiBL,GAAsBxI,OAE7C,OAAQmB,EAASO,UAAUgH,KAAuBV,GAC1C9G,EAAsBC,EAAUuH,EAAoBhC,EAAemC,KAAoBL,IACb,IAA1ErH,EAASI,SAASmH,EAAoBhC,EAAgBmC,EAClE,CAEA,SAASa,GAAYvI,EAAUuH,GAC3B,IAAMiB,EAAYxI,EAASO,UAAUgH,GACrC,OAASiB,GAAa9B,GAAiB8B,GAAa1B,GAC5C0B,IAAczB,GACdyB,IAAcpC,GACdoC,IAAcnC,GACdmC,IAAclC,GACdkC,IAAcjC,GACdiC,IAAchC,GACdgC,IAAc/B,CAC1B,CAEA,SAASgC,GAAWzI,EAAUuH,GAC1B,OAAOvH,EAASO,UAAUgH,KAAuBP,CACrD,CC7NA,IAKM0B,GAAS,cACTC,GAAwB,EACjBC,GAAsB,EACtBC,GAA0B,EAC1BC,GAAwBH,GACxBI,GAAwBJ,GAAwBC,GACvDI,GAAiB,sBACVC,GAAY,OACZC,GAAY,OACZC,GAAY,OACZC,GAAY,OACZC,GAAY,OACZC,GAAY,OACZC,GAAY,OA2EzB,SAASC,GAAsBxJ,EAAUR,GAErC,MADoC,SAC7BO,EAAsBC,EAAUR,EAASsJ,GAAuBF,GAC3E,CAEA,SAASa,GAAczJ,EAAUR,GAC7B,OAAQO,EAAsBC,EAAUR,EAASsJ,GAAuBF,MAAyBM,IACzFnJ,EAAsBC,EAAUR,EAASuJ,GAAuBC,GAAenK,UAAYmK,EACvG,CAEA,SAASU,GAAe1J,EAAUR,EAAQmK,GACtC,IAAMC,EAAY7J,EAAsBC,EAAUR,EAASsJ,GAAuBF,IAClF,OAAOgB,IAAcX,IAAaW,IAAcV,IAAcU,IAAcT,IAAaQ,CAC7F,CAEA,SAASE,GAAe7J,EAAUR,GAC9B,OAAOO,EAAsBC,EAAUR,EAASsJ,GAAuBF,MAAyBU,EACpG,CAEA,SAASQ,GAAe9J,EAAUR,GAC9B,OAAOO,EAAsBC,EAAUR,EAASsJ,GAAuBF,MAAyBW,EACpG,CAEA,SAASQ,GAAW/J,EAAUR,GAC1B,IAAMwK,EAA4B,CAACZ,GAAWC,IACxCO,EAAY7J,EAAsBC,EAAUR,EAASsJ,GAAuBF,IAClF,OAAOoB,EAA0BC,SAASL,EAC9C,CAEA,SAASM,GAAoBlK,EAAUR,GAInCA,GAAUuJ,GAAwBC,GAAenK,OAHnB,EACE,EAKhC,IADA,IAAIsL,EAAyB,EACtBA,EAAyB,GAAK3K,EAASQ,EAAST,YACjB,IAA9BS,EAASI,SAASZ,IAClB2K,IAEJ3K,IAEJ,KAAI2K,EAAyB,GAG7B,OAAO3K,CACX,CAEA,SAAS4K,GAAepK,EAAUR,GAC9B,IAGM6K,ELpIH,SAA6CrK,EAAUR,GAG1D,IAFA,IAAMS,EAAQ,GACVC,EAAI,EACDV,EAASU,EAAIF,EAAST,YAAY,CACrC,IAAM+K,EAAOtK,EAASI,SAASZ,EAASU,GACxC,GAAa,IAAToK,EACA,MAEJrK,EAAME,KAAKmK,GACXpK,GACJ,CACA,OAAOG,EAAwBJ,EACnC,CKwHwBsK,CAAoCvK,EAAUR,GAMlE,OALAA,GAAU6K,EAAYxL,OAJM,EASrB,CACHwL,YAAAA,EACA1H,kBALsB3C,EAASI,SAASZ,GAMxCgL,wBALJhL,GANgC,EAapC,CCtFA,SAASiL,GAAazK,EAAUR,GAC5B,IAEMkL,EAAY1K,EAAS2K,UAAUnL,GACrC,OAcJ,SAA4BkL,GACxB,OAAqB,IAAdA,CACX,CAhBQE,CAAmBF,GACZ1K,EAAST,WAAaC,EAiBrC,SAAyBkL,GACrB,OAAqB,IAAdA,CACX,CAjBQG,CAAgBH,IAmBxB,SAA0B1K,EAAUR,GAEhC,OAAiE,IAA1DQ,EAAS2K,UAAUnL,EADO,EAErC,CArBYsL,CAAiB9K,EAAUR,GAGpBQ,EAAS2K,UAAUnL,EAVG,IAc9BkL,CACX,CCxFA,ICIMK,GAAqB,EACrBC,GAAiB,CAAC,SAAU,UCClC,IACIC,gBAGJ,SAAyBjL,EAAU2J,GAC/B,GAAIuB,EAAU9G,UCNlB,SAAoBpE,GAGhB,QAASA,GAAaA,EAAST,YAFK,GAKxC,SAAuBS,GACnB,IAGMP,EAAeO,EAASO,UAAU,KAAO4K,EAAUnG,cACzD,OAJgB,KAIThF,EAASO,UAHO,EAGmBd,EAC9C,CATiF2L,CAAcpL,EAC/F,CDE8BqL,CAAgBrL,GACtC,OAAOsL,GCUPJ,EAAUrH,SACH,CACH0H,cAAe,EACfpG,iBALwB,GAQzB,CAAC,EDhBuC,OAAQ,QAGvD,GAAI+F,EAAU7G,ULiClB,SAAoBrE,GAChB,QAASA,GAAaA,EAAST,YAAc6F,GAAiCpF,EAASO,UAAU,KAAO8E,CAC5G,CKnC8BmG,CAAgBxL,GACtC,OAAOsL,GLoCf,SAAyBtL,GAYrB,IAXA,IACImI,EACAsD,EACAC,EACAC,EACAxG,EACAyG,EACAC,EACAC,EACAC,EATAxE,EAAoBjC,EAWjBiC,EAAoBhC,EAAgB,GAAKvF,EAAST,YAAY,CACjE,GAAI2L,EAAUxH,UAAY4D,GAAatH,EAAUuH,GAC7CY,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDiG,EAAiBlE,EAAoB/B,OAClC,GAAI0F,EAAUxH,UAAY8D,GAAaxH,EAAUuH,GACpDY,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDkG,EAAiBnE,EAAoB/B,OAClC,GAAI0F,EAAUvH,UAAYiE,GAAiB5H,EAAUuH,GACxDY,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDmG,EAAiBpE,EAAoB9B,OAClC,GAAIyF,EAAUrH,UAAYgE,GAAiB7H,EAAUuH,GACxDY,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDL,EAAmBoC,EAAoB7B,OACpC,GAAIwF,EAAUnH,SAAW+D,GAAgB9H,EAAUuH,GACjDsE,IACDA,EAAY,IAEhB1D,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDqG,EAAU1L,KAAK+H,GAAmBX,EAAmBY,SAClD,GAAI+C,EAAUnH,SAAWiE,GAAwBhI,EAAUuH,GACzDsE,IACDA,EAAY,IAEhB1D,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDqG,EAAU1L,KAAKkI,GAA2Bd,EAAmBY,SAC1D,GAAI+C,EAAUpH,UAAYwE,GAAuBtI,EAAUuH,GAC9DY,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDoG,EAAiBrE,EAAoB5B,OAClC,GAAIuF,EAAUlH,SAAWyD,GAAgBzH,EAAUuH,GAAoB,CAC1EY,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrD,IAAMwG,EAAgBzE,EAAoBzB,EACpCmG,EAAgB9D,GAAerC,EAAuBN,GAEtD0G,EAAiBlM,EAASI,SAASmH,EAAoBtB,GACvDkG,EAAiBnM,EAASI,SAASmH,EAAoBrB,GACxD4F,IACDA,EAAY,IAEhBA,EAAU3L,KAAK,CAACX,OAAQwM,EAAenN,OAAQoN,EAAeG,YAAaF,EAAgBG,YAAaF,GAC5G,MAAO,GAAIjB,EAAUjH,SAAW0D,GAAgB3H,EAAUuH,GACtDY,EAAcnI,EAASO,UAAUgH,EAAoB/B,GACrDuG,EAAgBxE,EAAoBxB,MACjC,KAAIwC,GAAYvI,EAAUuH,GAE1B,IAAIkB,GAAWzI,EAAUuH,GAAoB,CAChDA,IACA,QACJ,CACI,KACJ,CANIY,EAAcnI,EAASO,UAAUgH,EAAoB/B,EAMzD,CACA+B,GAAqB/B,EAAkB2C,CAC3C,CAEA,MAAO,CACHoD,cAAehE,EAAoBjC,EACnCgH,eAAgBb,GAAkBC,EAClCC,eAAAA,EACAxG,iBAAAA,EACAyG,eAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,cAAAA,EAER,CK/G2BP,CAAqBxL,GAAW,OAAQ,QAG/D,GAAIkL,EAAU5G,SJGlB,SAAmBtE,GACf,QAASA,GAAYD,EAAsBC,EAAU,EAAG0I,GAAO7J,UAAY6J,EAC/E,CIL6B6D,CAAcvM,GACnC,OAAOsL,GJMf,SAAwBtL,EAAU2J,GAS9B,IARA,IAEM6C,EAAU,CACZjB,cAAe,GAGf/L,EAASkJ,GAAO7J,OAEbW,EAASmJ,GAAwBC,IAAuB5I,EAAST,YAAY,CAChF,GAAI2L,EAAUtH,cAAgB4F,GAAsBxJ,EAAUR,GAC1DgN,EAAQjB,cAAgB,EACxBiB,EAAQC,gBAAkBjN,EAASuJ,QAChC,GAAImC,EAAUnH,SAAW0F,GAAczJ,EAAUR,GAAS,CAC7D,IAAM4I,EAAa8B,GAAoBlK,EAAUR,QAC9BZ,IAAfwJ,IACAoE,EAAQjB,cAAgB,EACxBiB,EAAQX,UAAY,CAAC,CACjBzD,WAAAA,EACAvJ,OAAQmB,EAAS2K,UAAUnL,EAASqJ,KAA4BT,GAAc5I,EAASuJ,OAGnG,MAAO,GAAIW,GAAe1J,EAAUR,EAAQmK,GAAQ,CAChD6C,EAAQjB,cAAgB,EACxB,IAAM3B,EAAY7J,EAAsBC,EAAUR,EAASsJ,GAAuBF,IAC7E4D,EAAQE,gBACTF,EAAQE,cAAgB,IAE5BF,EAAQE,cAAcvM,KAAK,CACvBtB,OAAQmB,EAAS2K,UAAUnL,EAASqJ,IACpC8D,KAAM/C,EACNpK,OAAQA,EAASuJ,IAEzB,MAAO,GAAIc,GAAe7J,EAAUR,GAChCgN,EAAQjB,cAAgB,EACxBiB,EAAQrH,iBAAmB3F,EAASuJ,QACjC,GAAImC,EAAUlH,SAAW2F,GAASG,GAAe9J,EAAUR,GAAS,CACvEgN,EAAQjB,cAAgB,EACxB,IAAMqB,EAAkB5M,EAAS2K,UAAUnL,EAASqJ,IAC9CgE,EAAkBrN,EAASuJ,GACjC+D,EAAkE1C,GAAepK,EAAU6M,GAApFxC,EAAWyC,EAAXzC,YAAa1H,EAAiBmK,EAAjBnK,kBAAmB6H,EAAuBsC,EAAvBtC,wBAClCgC,EAAQV,YACTU,EAAQV,UAAY,IAExBU,EAAQV,UAAU3L,KAAK,CACnBX,OAAQgL,EACR3L,OAAQ+N,GAAmBpC,EAA0BqC,GACrDT,YAAa,EACbC,YAAa,EACbhC,YAAAA,EACA1H,kBAAAA,GAER,MAAWoH,GAAW/J,EAAUR,KAC5BgN,EAAQjB,cAAgB,EACnBiB,EAAQO,kBACTP,EAAQO,gBAAkB,IAE9BP,EAAQO,gBAAgB5M,KAAKX,EAASqJ,KAG1CrJ,GAAUQ,EAAS2K,UAAUnL,EAASqJ,IAChCF,GACAC,GA7DW,CA+DrB,CAEA,OAAO4D,CACX,CIzE2BD,CAAmBvM,EAAU2J,GAAQ,MAAO,OAGnE,GAAIuB,EAAU3G,UHlBlB,SAAoBvE,GAChB,IAAKA,EACD,OAAO,EAGX,IAKMgN,EAAiBjN,EAAsBC,EAAUiN,EAFvB,GAIhC,MAPgB,SAORlN,EAAsBC,EANP,EAMiCkN,KACD,IAN7B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAMjEC,QAAQH,EACtC,CGI8BI,CAAgBpN,GACtC,OAAOsL,GHHf,SAAyBtL,GACrB,GAAIkL,EAAUrH,UAAYqH,EAAUlH,QAAS,CACzC,IAAAqJ,EAoBR,SAAqBrN,GAQjB,IAPA,IAKIR,EAAS,EAENA,EAPiB,EACF,GAM6BQ,EAAST,YAAY,CACpE,IAAMmL,EAAYD,GAAazK,EAAUR,GACzC,GAAIkL,GAPe,GASC,SADA3K,EAAsBC,EAAUR,EAPhC,EAFF,GAWV,MAAO,CACHA,OAAAA,EACAX,OAAQ6L,GAKpBlL,GAAUkL,CACd,CAEA,MAAO,CACHlL,YAAQZ,EACRC,OAAQ,EAEhB,CA/CyDyO,CAAYtN,GAA9CuN,EAAUF,EAAlB7N,OAA4BgO,EAAUH,EAAlBxO,OAC3B,QAAmBD,IAAf2O,EACA,MAAO,CAAChC,cAAe,GAG3B,IAAMkC,EAAgBC,KAAKC,IAAIJ,EAAaC,EAAYxN,EAAST,YACjEqO,EA0ER,SAAuB5N,EAAUR,EAAQiO,GASrC,IARA,IAEMjB,EAAU,CACZqB,gBAAYjP,EACZkP,oBAAgBlP,EAChBmP,gBAAYnP,GAGRY,EARY,GAQYiO,KACvBjB,EAAQqB,aAAerB,EAAQsB,iBAAmBtB,EAAQuB,aAAa,CAC5E,IAAMC,EAAWjO,EAAsBC,EAAUR,EAVjC,GAWZ0L,EAAUrH,UAA0B,SAAbmK,EACvBxB,EAAQqB,WAAarO,EACd0L,EAAUrH,UAA0B,SAAbmK,EAC9BxB,EAAQsB,eAAiBtO,GAbH,EAcf0L,EAAUlH,SAAyB,SAAbgK,IAC7BxB,EAAQuB,WAAavO,GAfC,GAkB1BA,GACJ,CAEA,OAAOgN,CACX,CAlGyDyB,CAAcjO,EAAUuN,EAAYE,GAA9EK,EAAcF,EAAdE,eAAgBD,EAAUD,EAAVC,WAAYE,EAAUH,EAAVG,WAE7BG,EAkGd,SAAwBlO,EAAU8N,EAAgBtO,EAAQiO,GAQtD,GAAKjO,GAAWsO,KAAmBA,EAPL,EAO8CL,GAA5E,CAIA,IAAMU,EAAgBnO,EAASO,UAAUuN,GAGzC,IAFAtO,GAXyB,GAalBA,EATgB,IASWiO,GAAe,CAE7C,GADkBzN,EAASO,UAAUf,KACnB2O,EAAe,CAC7B,IAAMC,EAAcpO,EAAS2K,UAAUnL,EAfnB,GAgBpB,GAAI4O,EAfc,GAeqBpO,EAAST,WAG5C,OAAO6O,GAFYpO,EAAS2K,UAAUyD,GAfhB,EAmB9B,CACA5O,GAnBmB,EAoBvB,CAhBA,CAmBJ,CA/H2B6O,CAAerO,EAAU8N,EAAgBD,EAAYJ,GAClE3B,EAgId,SAAuB9L,EAAUR,EAAQiO,GAKrC,GAAKjO,KAAWA,EAFY,GAEmBiO,GAA/C,CAIA,IAAMa,EAAYvO,EAAsBC,EAAUR,EARzB,EACF,GAQvB,GAAmB,SAAd8O,GAAwC,SAAdA,EAI/B,MAAO,CAAC,CACJ9O,OAAQA,EAZgB,GAaxBX,OAAQ4L,GAAazK,EAAUR,GAbP,GAcxB4M,YAAa,EACbC,YAAa,GAXjB,CAaJ,CApJ0BkC,CAAcvO,EAAU+N,EAAYN,GACtD,MAAO,CACHlC,mBAA+B3M,IAAfsP,QAA4CtP,IAAdkN,EAC9C3G,iBAAkB+I,EAClBpC,UAAAA,EAER,CAEA,MAAO,CAACP,cAAe,EAC3B,CGjB2B6B,CAAqBpN,GAAW,OAAQ,QAG/D,GAAIkL,EAAUzG,UFtBlB,SAAoBzE,GAMhB,QAASA,GAJO,SAIKD,EAAsBC,EALpB,EAK8CwO,IAFjD,SAGbzO,EAAsBC,EAJF,EAIgCyO,EAC/D,CEc8BC,CAAgB1O,GACtC,OAAOsL,GFbf,SAAqBtL,GAajB,IAZA,IAOImF,EACA0G,EACAC,EACA6C,EALAnP,EAL2B,GAM3B+L,EAAgB,EAMb/L,EATmB,EASUQ,EAAST,YAAY,CACrD,IAAMqP,EAAU7O,EAAsBC,EAAUR,EAAQ,GAClDqP,EAAY7O,EAAS2K,UAAUnL,EAbf,EAa2C,GAE7D0L,EAAUrH,UAAyB,SAAZ+K,GACvBrD,EAAgB,EAEZpG,EAjBY,aAgBZpF,EAAsBC,EAAUR,EAflB,EAe8CsP,GACzCtP,EAhBL,EAgBkCsP,EAE7BtP,EAlBL,GAoBX0L,EAAUnH,SAAwB,SAAZ6K,GAC7BrD,EAAgB,EAChBM,EAAY,CAAC,CACTzD,WAAY5I,EAvBE,EAwBdX,OAAQgQ,KAEL3D,EAAUlH,SAAwB,SAAZ4K,GAC7BrD,EAAgB,EAChBO,EAAY,CAAC,CACTtM,OAAQA,EA7BM,EA8BdX,OAAQgQ,EACRzC,YAAa,EACbC,YAAa,KAEE,SAAZuC,IACPrD,EAAgB,EAChBoD,EAAkBnP,EApCA,GAuCtBA,GAvCsB,GAuCSqP,EAAY,GAAM,EAAIA,EAAYA,EAAY,EACjF,CAEA,MAAO,CACHtD,cAAAA,EACApG,iBAAAA,EACA0G,UAAAA,EACAC,UAAAA,EACA6C,gBAAAA,EAER,CExC2BD,CAAiB1O,GAAW,OAAQ,QAG3D,GAAIkL,EAAUxG,SDxBlB,SAAmB1E,GACf,QAASA,GAAYgL,GAAef,SAASlK,EAAsBC,EAAU,EAAG+K,IACpF,CCsB6BgE,CAAc/O,GACnC,OAAOsL,GDpBJ,CACH0D,gBAAiB,GCmB6B,MAAO,OAGzD,MAAU1P,MAAM,uBACpB,GAEA,SAASgM,GAAYkB,EAASyC,EAAUC,GACpC,OAAOjO,EAAa,CAAC,EAAGuL,EAAS,CAACyC,SAAU,CAAC1Q,MAAO0Q,EAAUE,YAAaD,IAC/E,CE3CA,QACIE,cAAe,SAAC7Q,GAAK,OAAKmP,KAAK2B,IAAI3B,KAAK4B,KAAK,GAAI/Q,EAAM,GAAKA,EAAM,IAAIgR,QAAQ,EAAE,EAChFC,WAAU,SAACjR,GACP,OAAc,IAAVA,EACO,OACU,QAAVA,EACA,eAEJ,SACX,EACAkR,wBAAuB,SAAClR,GACpB,OAAOA,EAAMqC,KAAI,SAAC8O,GACd,OAAkB,KAAdA,EACO,IACc,KAAdA,EACA,KACc,KAAdA,EACA,KACc,KAAdA,EACA,IACc,KAAdA,EACA,IACc,KAAdA,EACA,SADJ,CAGX,IAAG1O,KAAK,GACZ,EACA2O,SAAQ,SAACpR,GACL,OAAc,IAAVA,EACO,SACU,IAAVA,EACA,OACU,IAAVA,EACA,OAEJ,SACX,EACAqR,eAAc,SAACrR,GACX,OAAc,IAAVA,EACO,iBACU,IAAVA,EACA,iBAEJ,SACX,EACAsR,aAAY,SAACtR,GACT,OAAc,IAAVA,EACO,gBACU,IAAVA,EACA,kBACU,IAAVA,EACA,eAEJ,SACX,EACAuR,gBAAe,SAACvR,GACZ,OAAc,IAAVA,EACO,YACU,IAAVA,EACA,SACU,IAAVA,EACA,iBACU,IAAVA,EACA,oBACU,IAAVA,EACA,mBACU,IAAVA,EACA,mBACU,IAAVA,EACA,iBACU,IAAVA,EACA,gBACU,IAAVA,EACA,iBACU,IAAVA,EACA,OAEJ,SACX,EACAwR,aAAY,SAACxR,GACT,GAAIA,EAAM,GAAKA,EAAM,GAAK,IAAM,CAC5B,IAAMyR,EAAUzR,EAAM,GAAKA,EAAM,GACjC,OAAI0R,OAAOC,UAAUF,GACV,GAAKA,EAETA,EAAQT,QAAQ,EAC3B,CACA,OAAiB,IAAbhR,EAAM,GACC,KAAPkF,OAAYiK,KAAKyC,MAAM5R,EAAM,GAAKA,EAAM,KAErC,KAAPkF,OAAYlF,EAAM,GACtB,EACA6R,QAAS,SAAC7R,GAAK,WAAAkF,OAAUlF,EAAM,GAAKA,EAAM,GAAE,EAC5C8R,YAAa,SAAC9R,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,KAAK,EACrD+R,yBAAwB,SAAC/R,GACrB,OAAc,IAAVA,EACO,SACU,IAAVA,EACA,cAEJ,SACX,EACAgS,YAAa,SAAChS,GACV,OAAc,IAAVA,EACO,WACU,IAAVA,EACA,cACU,IAAVA,EACA,gCACU,IAAVA,EACA,QACU,IAAVA,EACA,eACU,KAAVA,EACA,iBACU,KAAVA,EACA,QACU,KAAVA,EACA,wCACU,KAAVA,EACA,yCACU,KAAVA,EACA,0CACU,KAAVA,EACA,sCACU,KAAVA,EACA,mBACU,KAAVA,EACA,mBACU,KAAVA,EACA,mBACU,KAAVA,EACA,MACU,KAAVA,EACA,MACU,KAAVA,EACA,MACU,KAAVA,EACA,MACU,KAAVA,EACA,sBACU,MAAVA,EACA,qBAEJ,SACX,EACAiS,aAAY,SAACjS,GACT,OAAc,IAAVA,EACO,UACU,IAAVA,EACA,wBACU,IAAVA,EACA,OACU,IAAVA,EACA,YACU,IAAVA,EACA,UACU,IAAVA,EACA,UACU,MAAVA,EACA,QAEJ,SACX,EACAkS,eAAc,SAAClS,GACX,OAAc,IAAVA,EACO,SAEG,IAAVA,EACO,cAEJ,SACX,EACAmS,WAAU,SAACnS,GACP,OAAc,IAAVA,EACO,SACU,IAAVA,EACA,iBACU,IAAVA,EACA,kBAEJ,SACX,EACAoS,iBAAgB,SAACpS,GACb,OAAc,IAAVA,EACO,WACU,IAAVA,EACA,YACU,IAAVA,EACA,WACU,IAAVA,EACA,cAEJ,SACX,EACAqS,UAAS,SAACrS,GACN,OAAc,IAAVA,EACO,SACU,IAAVA,EACA,OACU,IAAVA,EACA,OAEJ,SACX,EACAsS,kBAAiB,SAACtS,GACd,IAAMuS,EAAcpD,KAAK2B,IAAI,EAAG9Q,EAAM,GAAKA,EAAM,IACjD,OAAIuS,GAAe,EACR,GAAPrN,OAAUiK,KAAKyC,MAAM,EAAIW,IAEtB,KAAPrN,OAAYiK,KAAKyC,MAAMW,GAC3B,EACAC,aAAY,SAACxS,GACT,OAAc,IAAVA,EACO,qBACU,IAAVA,EACA,uBAEJ,SACX,EACAyS,YAAa,SAACzS,GAAK,MAAK,GAAKmP,KAAKyC,MAAM5R,EAAM,GAAKA,EAAM,GAAG,EAC5D0S,YAAa,SAAC1S,GAAK,MAAK,GAAKmP,KAAKyC,MAAM5R,EAAM,GAAKA,EAAM,GAAG,GC3NhE,IACI,GAAQ,qBACR,IAAQ,CACJ2S,KAAM,cACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAK,wBACL,EAAK,2BACL,EAAK,kCACL,EAAK,qDACL,EAAK,oBACL,EAAK,gDACL,EAAK,wCACL,EAAK,2DACL,MAAS,qCACT,WAAY,WACbA,IAAU,SAAS,GAE1B,IAAQ,CACJ2S,KAAM,iBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,wBACH,EAAG,2BACH,EAAG,mCACJA,IAAU,SAAS,GAE1B,IAAQ,aACR,IAAQ,cACR,IAAQ,gBACR,IAAQ,cACR,IAAQ,4BACR,IAAQ,CACJ2S,KAAM,eACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,6BACH,EAAG,4BACH,EAAG,qBACJA,IAAU,SAAS,GAE1B,IAAQ,YACR,IAAQ,aACR,IAAQ,CACJ2S,KAAM,YACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,SACH,EAAG,YACJA,IAAU,SAAS,GAE1B,IAAQ,eACR,IAAQ,mBACR,IAAQ,OACR,IAAQ,QACR,IAAQ,eACR,IAAQ,CACJ2S,KAAM,cACN/B,YAAa,SAAC5Q,GACV,OAAc,IAAVA,EACO,WAEG,IAAVA,EACO,YAEG,IAAVA,EACO,eAEG,IAAVA,EACO,cAEG,IAAVA,EACO,WAEG,IAAVA,EACO,YAEG,IAAVA,EACO,eAEG,IAAVA,EACO,cAEJ,WACX,GAEJ,IAAQ,kBACR,IAAQ,eACR,IAAQ,kBACR,IAAQ,iBACR,IAAQ,iBACR,IAAQ,CACJ,KAAQ,cACR,YAAe4S,GAAeH,aAElC,IAAQ,CACJ,KAAQ,cACR,YAAeG,GAAeF,aAElC,IAAQ,sBACR,IAAQ,WACR,IAAQ,CACJ,KAAQ,YACR,YAAe,SAAC1S,GACZ,MAAO,GAAKmP,KAAKyC,MAAM5R,EAAM,GAAKA,EAAM,GAC5C,GAEJ,IAAQ,CACJ,KAAQ,YACR,YAAe,SAACA,GACZ,MAAO,GAAKmP,KAAKyC,MAAM5R,EAAM,GAAKA,EAAM,GAC5C,GAEJ,IAAQ,CACJ2S,KAAM,mBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,MACH,EAAG,QACH,EAAG,SACH,EAAG,QACH,EAAG,SACJA,IAAU,SAAS,GAE1B,IAAQ,CACJ2S,KAAM,iBACN/B,YAAagC,GAAeV,gBAEhC,IAAQ,aACR,IAAQ,mBACR,IAAQ,WACR,IAAQ,WACR,IAAQ,SACR,IAAQ,eACR,IAAQ,YACR,IAAQ,CACJ,KAAQ,aACR,YAAe,SAACW,GACZ,OAAOA,EAAOxQ,KAAI,SAACrC,GAAK,SAAAkF,OAAQlF,EAAM,GAAE,KAAAkF,OAAIlF,EAAM,GAAE,IAAIyC,KAAK,KACjE,GAEJ,IAAQ,CACJ,KAAQ,wBACR,YAAe,SAACoQ,GACZ,OAAOA,EAAOxQ,KAAI,SAACrC,GAAK,SAAAkF,OAAQlF,EAAM,GAAE,KAAAkF,OAAIlF,EAAM,GAAE,IAAIyC,KAAK,KACjE,GAEJ,IAAQ,gBACR,IAAQ,YACR,IAAQ,aACR,IAAQ,iBACR,IAAQ,CACJkQ,KAAM,SACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,OACH,EAAG,YACJA,IAAU,SAAS,GAE1B,IAAQ,gBACR,IAAQ,CACJ2S,KAAM,eACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,cACH,EAAG,mBACH,EAAG,sBACJA,IAAU,SAAS,GAE1B,IAAQ,CACJ2S,KAAM,eACN/B,YAAa,SAAC5Q,GACV,IAAM8S,EAAU,CACZ,EAAG,WACH,EAAG,SACH,EAAG,QACH,EAAG,YACH,EAAG,cACH,EAAG,iBAEP,OAAKvP,MAAMwP,QAAQ/S,GAGZA,EAAMqC,KAAI,SAAC2Q,GAAM,OAAKF,EAAQE,IAAW,SAAS,IAAEvQ,KAAK,MAFrD,SAGf,GAEJ,IAAQ,wBACR,IAAQ,8BACR,IAAQ,CACJ,KAAQ,oBACR,YAAe,SAACoQ,GACZ,OAAOA,EAAOxQ,KAAI,SAACrC,GAAK,MAAK,GAAKA,EAAM,GAAKA,EAAM,EAAE,IAAEyC,KAAK,IAChE,GAEJ,IAAQ,mBACR,IAAQ,CACJkQ,KAAM,mBACN/B,YAAa,SAAC5Q,GACV,OAAc,IAAVA,EACO,WAEG,IAAVA,EACO,WAEJ,aAAeA,CAC1B,GAEJ,IAAQ,CACJ,KAAQ,sBACR,YAAe,SAAC6S,GACZ,OAAOA,EAAOxQ,KAAI,SAACrC,GAAK,MAAK,GAAKA,EAAM,GAAKA,EAAM,EAAE,IAAEyC,KAAK,KAChE,GAEJ,IAAQ,mBACR,MAAQ,SACR,MAAQ,gBACR,MAAQ,CACJkQ,KAAM,YACN/B,YAAa,SAAC5Q,GAAK,OAAKA,EAAMyC,KAAK,KAAK,GAE5C,MAAQ,aACR,MAAQ,WACR,MAAQ,mBACR,MAAQ,gBACR,MAAQ,UACR,MAAQ,iBACR,MAAQ,oBACR,MAAQ,mBACR,MAAQ,cACR,MAAQ,mBACR,MAAQ,sBACR,MAAQ,qBACR,MAAQ,uBACR,MAAQ,UACR,MAAQ,YACR,MAAQ,WACR,MAAQ,aACR,MAAQ,YACR,MAAQ,eACR,MAAQ,aACR,MAAQ,UACR,MAAQ,qBACR,MAAQ,oBACR,MAAQ,uBACR,MAAQ,eACR,MAAQ,eACR,MAAQ,qBACR,MAAQ,qBACR,MAAQ,mBACR,MAAQ,mBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,mBACR,MAAQ,gBACR,MAAQ,oBACR,MAAQ,sBACR,MAAQ,qBACR,MAAQ,cACR,MAAQ,cACR,MAAQ,CACJkQ,KAAM,kBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,SACH,EAAG,QACJA,IAAU,SAAS,GAE1B,MAAQ,CACJ2S,KAAM,yBACN/B,YAAagC,GAA4B,aAE7C,MAAQ,CACJD,KAAM,yBACN/B,YAAagC,GAA4B,aAE7C,MAAQ,kBACR,MAAQ,sBACR,MAAQ,sBACR,MAAQ,mBACR,MAAQ,yBACR,MAAQ,oBACR,MAAQ,0BACR,MAAQ,wBACR,MAAQ,WACR,MAAQ,iBACR,MAAQ,kBACR,MAAQ,uBACR,MAAQ,wBACR,MAAQ,aACR,MAAQ,oBACR,MAAQ,cACR,MAAQ,uBACR,MAAQ,wBACR,MAAQ,wBACR,MAAQ,mBACR,MAAQ,CACJD,KAAM,qBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,gBACH,EAAG,gBACH,EAAG,cACH,EAAG,mBACJA,IAAU,SAAS,GAE1B,MAAQ,mBACR,MAAQ,iBACR,MAAQ,iBACR,MAAQ,yBACR,MAAQ,4BACR,MAAQ,sBACR,MAAQ,wBACR,MAAQ,CACJ2S,KAAM,oBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,iBACH,EAAG,OACH,EAAG,YACH,EAAG,gBACJA,IAAU,SAAS,GAE1B,MAAQ,kBACR,MAAQ,iBACR,MAAQ,wBACR,MAAQ,uBACR,MAAQ,uBACR,MAAQ,YACR,MAAQ,YACR,MAAQ,QACR,MAAQ,WACR,MAAQ,2BACR,MAAQ,0BACR,MAAQ,0BACR,MAAQ,cACR,MAAQ,CACJ2S,KAAM,2BACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,SACH,EAAG,QACJA,IAAU,SAAS,GAE1B,MAAQ,CACJ2S,KAAM,2BACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,SACH,EAAG,QACJA,IAAU,SAAS,GAE1B,MAAQ,yBACR,MAAQ,CACJ2S,KAAM,qBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,OACH,EAAG,QACJA,IAAU,SAAS,GAE1B,MAAQ,oBACR,MAAQ,oB,8MC7VZ,I,GAAA,IACI,EAAQ,CACJ,KAAQ,eACR,YAAe,SAACA,GACZ,OAAiB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,GACrD,cAEJ,SACX,GAEJ,EAAQ,CACJ,KAAQ,iBACR,YAAe,SAACA,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,iBACQ,MAARA,EACA,iBAEJ,SACX,GAEJ,EAAQ,CACJ,KAAQ,cACR,YAAezM,GAEnB,EAAQ,CACJ,KAAQ,kBACR,YAAe,SAACxG,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,iBACQ,MAARA,EACA,iBAEJ,SACX,GAEJ,EAAQ,CACJ,KAAQ,eACR,YAAezM,GAEnB,EAAQ,CACJ,KAAQ,iBACR,YAAe,SAACxG,GACZ,OAAc,IAAVA,EACO,YACU,IAAVA,EACA,uCAEJ,SACX,GAEJ,EAAQ,CACJ,KAAQ,cACR,YAAe,SAACA,GACZ,OAAQA,EAAM,GAAKA,EAAM,GAAM,IACnC,GAEJ,EAAQ,CACJ,KAAQ,eACR,YAAe,SAAC6S,GACZ,OAAOA,EAAOxQ,KAAI,SAAA6Q,GAA8B,I,EAAAC,GAAA,E,4CAAAD,I,mzBACtClP,EADmBmP,EAAA,GAAaA,EAAA,GAEtC,MAAI,YAAYC,KAAK,GAADlO,OAAIlB,IACb,IAAPkB,OAAWlB,GAERA,CACX,IAAGvB,KAAK,IACZ,GAEJ,EAAQ,gBACR,EAAQ,CACJ,KAAQ,YACR,YAAe,SAACzC,GACZ,IAAMqT,EAASrT,EAAMyC,KAAK,IAC1B,MAAe,MAAX4Q,EACO,0BACW,MAAXA,EACA,+BAEJ,SACX,GAEJ,GAAQ,CACJ,KAAQ,iBACR,YAAe,SAACrT,GACZ,IAAMsT,EAAOtT,EAAMyC,KAAK,IACxB,MAAa,MAAT6Q,EACO,4BACS,MAATA,EACA,4BAEJ,SACX,GAEJ,GAAQ,SACR,GAAQ,CACJ,KAAQ,cACR,YAAe,SAACtT,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,sBACQ,MAARA,EACA,iBACQ,MAARA,EACA,QAEJ,SACX,GAEJ,GAAQ,WACR,GAAQ,CACJ,KAAQ,cACR,YAAe,SAACjT,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,iBACQ,MAARA,EACA,qBAEJ,SACX,GAEJ,GAAQ,WACR,GAAQ,CACJ,KAAQ,qBACR,YAAe,SAACjT,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,iBACQ,MAARA,EACA,qBAEJ,SACX,GAEJ,GAAQ,kBACR,GAAQ,cACR,GAAQ,CACJ,KAAQ,qBACR,YAAe,SAACjT,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,iBACQ,MAARA,EACA,iBAEJ,SACX,GAEJ,GAAQ,CACJ,KAAQ,kBACR,YAAe,SAACjT,GACZ,OAAQA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAOA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAM,GAAMA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAM,IAC1G,GAEJ,GAAQ,CACJ,KAAQ,sBACR,YAAe,SAACA,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,iBACQ,MAARA,EACA,iBAEJ,SACX,GAEJ,GAAQ,CACJ,KAAQ,mBACR,YAAe,SAACjT,GACZ,OAAQA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAOA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAM,GAAMA,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAM,IAC1G,GAEJ,GAAQ,CACJ,KAAQ,oBACR,YAAe,SAACA,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,iBACQ,MAARA,EACA,qBAEJ,SACX,GAEJ,GAAQ,iBACR,GAAQ,CACJ,KAAQ,qBACR,YAAe,SAACjT,GACZ,IAAMiT,EAAMjT,EAAMyC,KAAK,IACvB,MAAY,MAARwQ,EACO,aACQ,MAARA,EACA,QACQ,MAARA,EACA,QAEJ,SACX,GAEJ,GAAQ,kBACR,GAAQ,CACJ,KAAQ,sBACR,YAAe5M,GAEnB,GAAQ,CACJ,KAAQ,qBACR,YAAeA,GAEnB,GAAQ,eACR,GAAQ,CACJ,KAAQ,kBACR,YAAe,SAACrG,GACZ,OAAc,IAAVA,EACO,8CACU,IAAVA,EACA,kCAEJ,SACX,GAEJ,GAAQ,wBC/NZ,IACI,EAAQ,wBACR,EAAQ,CACJ2S,KAAM,0BACN/B,YAAa,SAAC5Q,GAAK,OAAKoG,EAAepG,EAAM,GAEjD,KAAQ,yBACR,KAAQ,oBACR,KAAQ,sBCRZ,IACI,MAAQ,CACJ,KAAQ,aACR,YAAe,SAACA,GAAK,OAAKoG,EAAepG,EAAM,GAEnD,MAAQ,iBACR,MAAQ,UACR,MAAQ,eACR,MAAQ,e,6nBCFZ,IAAMuT,GAAsB7Q,EAAa,CAAC,EAAG8Q,GCL7C,CACI,MAAQ,CACJ,KAAQ,eACR,YAAeZ,GAAepB,cAElC,MAAQ,CACJ,KAAQ,UACR,YAAeoB,GAAef,SAElC,MAAQ,CACJ,KAAQ,kBACR,YAAee,GAAerB,iBAElC,MAAQ,sBACR,MAAQ,kBACR,MAAQ,CACJ,KAAQ,OACR,YAAe,iBAAM,uBAAuB,GAEhD,MAAQ,iBACR,MAAQ,gBACR,MAAQ,CACJoB,KAAM,kBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,8BACH,EAAG,6BACH,EAAG,YACH,EAAG,6DACH,EAAG,4CACH,EAAG,2CACH,EAAG,yEACJA,IAAU,SAAS,GAE1B,MAAQ,4BACR,MAAQ,2BACR,MAAQ,WACR,MAAQ,sBACR,MAAQ,sBACR,MAAQ,CACJ,KAAQ,cACR,YAAe,SAACA,GAAK,OAAKoG,EAAepG,EAAM,GAEnD,MAAQ,mBACR,MAAQ,oBACR,MAAQ,uBACR,MAAQ,aACR,MAAQ,qBACR,MAAQ,sBACR,MAAQ,CACJ,KAAQ,0BACR,YAAe4S,GAAe1B,yBAElC,MAAQ,yBACR,MAAQ,CACJ,KAAQ,oBACR,YAAe0B,GAAeN,mBAElC,MAAQ,CACJ,KAAQ,gBACR,YAAeM,GAAe/B,eAElC,MAAQ,kBACR,MAAQ,oBACR,MAAQ,CACJ,KAAQ,mBACR,YAAe,SAAC7Q,GACZ,OAAOmP,KAAK2B,IAAI3B,KAAK4B,KAAK,GAAI/Q,EAAM,GAAKA,EAAM,IAAIgR,QAAQ,EAC/D,GAEJ,MAAQ,CACJ,KAAQ,kBACR,YAAe,SAAChR,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,IAAI,GAE1D,MAAQ,CACJ,KAAQ,eACR,YAAe4S,GAAeX,cAElC,MAAQ,CACJ,KAAQ,cACRrB,YAAagC,GAAeZ,aAEhC,MAAQ,CACJ,KAAQ,QACR,YAAe,SAAChS,GACZ,OAAc,IAAVA,EACO,qBACU,IAAVA,EACA,cACU,IAAVA,EACA,mCACU,IAAVA,EACA,+BACU,IAAVA,EACA,qCACU,KAAVA,EACA,gEACU,KAAVA,EACA,4DACU,KAAVA,EACA,4CACU,KAAVA,EACA,gCACU,KAAVA,EACA,yBACU,KAAVA,EACA,oDACU,KAAVA,EACA,gDACU,KAAVA,EACA,oBACU,KAAVA,EACA,sCACU,KAAVA,EACA,iEACU,KAAVA,EACA,6DACU,KAAVA,EACA,6DACU,KAAVA,EACA,wFACU,KAAVA,EACA,oFACU,KAAVA,EACA,iDACU,KAAVA,EACA,4EACU,KAAVA,EACA,wEAEJ,SACX,GAEJ,MAAQ,CACJ,KAAQ,cACR,YAAe4S,GAAed,aAElC,MAAQ,cACR,MAAQ,CACJa,KAAM,yBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAK,eACL,EAAK,aACL,EAAK,SACL,EAAK,aACL,EAAK,gBACNA,IAAU,SAAS,GAE1B,MAAQ,eACR,MAAQ,CACJ,KAAQ,cACR,YAAe,SAACA,GACZ,OAAqB,IAAjBA,EAAMM,OACC,gBAAP4E,OAAuBlF,EAAM,GAAE,SAAAkF,OAAQlF,EAAM,IACrB,IAAjBA,EAAMM,OACN,cAAP4E,OAAqBlF,EAAM,GAAE,SAAAkF,OAAQlF,EAAM,GAAE,gBAAAkF,OAAelF,EAAM,IAC1C,IAAjBA,EAAMM,OACN,iBAAP4E,OAAwBlF,EAAM,GAAE,SAAAkF,OAAQlF,EAAM,GAAE,aAAAkF,OAAYlF,EAAM,GAAE,cAAAkF,OAAalF,EAAM,IAEpF,SACX,GAEJ,MAAQ,CACJ,KAAQ,YACR,YAAe,iBAAM,uBAAuB,GAEhD,MAAQ,CACJ,KAAQ,cACR,YAAeqG,GAEnB,MAAQ,aACR,MAAQ,qBACR,MAAQ,sBACR,MAAQ,kBACR,MAAQ,CACJ,KAAQ,qBACR,YAAe,SAACrG,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,KAAK,GAE3D,MAAQ,CACJ,KAAQ,WACR,YAAe,SAACA,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,IAAI,GAE1D,MAAQ,CACJ,KAAQ,WACR,YAAe,SAACA,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,MAAM,GAE5D,MAAQ,CACJ,KAAQ,aACR,YAAe,SAACA,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,IAAI,GAE1D,MAAQ,CACJ,KAAQ,eACR,YAAe,SAACA,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,OAAO,GAE7D,MAAQ,CACJ,KAAQ,uBACR,YAAe,SAACA,GAAK,OAAMA,EAAM,GAAKA,EAAM,GAAM,IAAI,GAE1D,MAAQ,CACJ,KAAQ,kBACR,YAAe,SAACA,GAAK,OAAKA,EAAMqC,KAAI,SAACC,GAAQ,OAAKC,OAAOC,aAAaF,EAAS,IAAEG,KAAK,GAAG,GAE7F,MAAQ,CACJ,KAAQ,aACR,YAAemQ,GAAe3B,YAElC,MAAQ,kBACR,MAAQ,kBACR,MAAQ,mBACR,MAAQ,+BACR,MAAQ,cACR,MAAQ,CACJ,KAAQ,2BACR,YAAe,iBAAM,sBAAsB,GAE/C,MAAQ,wBACR,MAAQ,wBACR,MAAQ,CACJ,KAAQ,2BACR,YAAe2B,GAAeb,0BAElC,MAAQ,CACJ,KAAQ,kBACR,YAAe,SAAAmB,GAAA,I,EAAAC,GAAA,E,4CAAAD,I,mzBAAEO,EAACN,EAAA,GAAEO,EAACP,EAAA,eAAAjO,OAAYuO,EAAC,SAAAvO,OAAQwO,EAAC,GAE/C,MAAQ,gBACR,MAAQ,CACJ,KAAQ,gBACR,YAAe,SAAC1T,GACZ,OAAc,IAAVA,EACO,YACU,IAAVA,EACA,6BACU,IAAVA,EACA,6BACU,IAAVA,EACA,+BACU,IAAVA,EACA,+BACU,IAAVA,EACA,mBACU,IAAVA,EACA,iCAEJ,SACX,GAEJ,MAAQ,CACJ,KAAQ,aACR,YAAe,SAACA,GACZ,OAAc,IAAVA,EACO,MAEJ,SACX,GAEJ,MAAQ,CACJ,KAAQ,YACR,YAAe,SAACA,GACZ,OAAc,IAAVA,EACO,gCAEJ,SACX,GAEJ,MAAQ,CACJ,KAAQ,aACR,YAAe,iBAAM,8BAA8B,GAEvD,MAAQ,CACJ,KAAQ,iBACR,YAAe4S,GAAevB,gBAElC,MAAQ,CACJ,KAAQ,eACR,YAAeuB,GAAetB,cAElC,MAAQ,CACJ,KAAQ,eACR,YAAesB,GAAeJ,cAElC,MAAQ,CACJ,KAAQ,mBACR,YAAe,SAACxS,GACZ,OAAiB,IAAbA,EAAM,GACC,4BAEJ,GAAMA,EAAM,GAAKA,EAAM,EAClC,GAEJ,MAAQ,CACJ,KAAQ,wBACR,YAAe,SAACA,GACZ,OAAc,IAAVA,EACO,UAEJA,CACX,GAEJ,MAAQ,CACJ,KAAQ,mBACR,YAAe4S,GAAeR,kBAElC,MAAQ,CACJ,KAAQ,cACR,YAAe,SAACpS,GACZ,OAAc,IAAVA,EACO,OACU,IAAVA,EACA,cACU,IAAVA,EACA,eACU,IAAVA,EACA,gBACU,IAAVA,EACA,iBAEJ,SACX,GAEJ,MAAQ,CACJ,KAAQ,WACR,YAAe4S,GAAexB,UAElC,MAAQ,CACJ,KAAQ,aACR,YAAewB,GAAeT,YAElC,MAAQ,CACJ,KAAQ,YACR,YAAeS,GAAeP,WAElC,MAAQ,CACJ,KAAQ,2BACR,YAAe,iBAAM,kCAAkC,GAE3D,MAAQ,CACJ,KAAQ,uBACR,YAAe,SAACrS,GACZ,OAAc,IAAVA,EACO,QACU,IAAVA,EACA,aACU,IAAVA,EACA,eAEJ,SACX,GAEJ,MAAQ,gBACR,MAAQ,kBACR,MAAQ,mBACR,MAAQ,CACJ,KAAQ,oBACR,YAAe,SAACA,GACZ,IAAM2T,EAAe,GAAHzO,OAAMlF,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAE,KAAAkF,OAAIlF,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAE,OAC9E,OAAoB,IAAhBA,EAAM,GAAG,GACF,GAAPkF,OAAUyO,EAAY,QAEnB,GAAPzO,OAAUyO,EAAY,OAAAzO,OAAM,GAAMlF,EAAM,GAAG,GAAKA,EAAM,GAAG,IAAOA,EAAM,GAAG,GAAKA,EAAM,GAAG,KAC3F,GAEJ,MAAQ,WACR,MAAQ,YACR,MAAQ,mBACR,MAAQ,CACJ2S,KAAM,iBACN/B,YAAa,SAAC5Q,GAAK,MAAM,CACrB,EAAG,wBACH,EAAG,0BACH,EAAG,2CACJA,IAAU,SAAS,GAE1B,MAAQ,oCACR,MAAQ,sCACR,MAAQ,QACR,MAAQ,UACR,MAAQ,eACR,KAAQ,YACR,MAAQ,eACR,MAAQ,OACR,MAAQ,UACR,MAAQ,YACR,MAAQ,eACR,MAAQ,WACR,MAAQ,UACR,MAAQ,aACR,MAAQ,WACR,MAAQ,aACR,MAAQ,YACR,MAAQ,aACR,MAAQ,gBD/XC4T,GAAe,MAEfC,GAAgB,OAEhBC,GAA4B,mBAGzC,IAAAC,GAAAC,GAAA,GACKJ,GAAeL,IAAmBQ,GAAAC,GAPX,MAQRR,IAAcO,GAAAC,GAC7BH,GAAgBN,IAAmBQ,GAAAC,GAPZ,MAQRC,IAAcF,GAAAC,GAC7BF,GAA4BI,IAA2BH,GAAAC,GAPhC,MAQRrH,EAAUjH,QAAUyO,GAAiB,CAAC,GAACH,IErBrDI,GAAY,CACd,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,EACH,GAAI,EACJ,GAAI,GAGFC,GAAW,CACb,KAAQ,EACR,MAAS,EACT,MAAS,EACT,KAAQ,EACR,SAAY,EACZ,UAAa,EACb,MAAS,EACT,UAAa,GACb,IAAO,IAGX,IACIC,cAeJ,SAAuBlS,GACnB,OAAOA,EAAUC,KAAI,SAACC,GAAQ,OAAKC,OAAOC,aAAaF,EAAS,GACpE,EAhBIiS,UAAAA,GACAC,WAqBJ,SAAoB/S,EAAUR,GAC1B,OAAOQ,EAASI,SAASZ,EAC7B,EAtBIwT,WAwBJ,SAAoBhT,EAAUR,EAAQyT,GAClC,OAAOjT,EAASO,UAAUf,EAAQyT,IAAc9H,EAAUnG,cAC9D,EAzBIkO,UAAAA,GACAC,cA8BJ,SAAuBnT,EAAUR,EAAQyT,GACrC,MAAO,CAACC,GAAUlT,EAAUR,EAAQyT,GAAYC,GAAUlT,EAAUR,EAAS,EAAGyT,GACpF,EA/BIG,eAiCJ,SAAwBpT,EAAUR,GAC9B,OAAOsT,GAAU9S,EAAUR,EAC/B,EAlCI6T,WAAAA,GACAC,eAuCJ,SAAwBtT,EAAUR,EAAQyT,GACtC,MAAO,CAACI,GAAWrT,EAAUR,EAAQyT,GAAYI,GAAWrT,EAAUR,EAAS,EAAGyT,GACtF,EAxCIM,gBA0CJ,SAAyBvT,EAAUR,EAAQyT,GACvC,OAAOC,GAAUlT,EAAUR,EAAQyT,EACvC,EA3CIN,UAAAA,GACAC,SAAAA,GACAY,YA2CJ,SAAqBC,GACjB,QAA2B7U,IAAvBgU,GAASa,GACT,MAAUnU,MAAM,uBAGpB,OAAOqT,GAAUC,GAASa,GAC9B,GA1CA,SAASX,GAAU9S,EAAUR,GACzB,OAAOQ,EAASI,SAASZ,EAC7B,CAUA,SAAS0T,GAAUlT,EAAUR,EAAQyT,GACjC,OAAOjT,EAAS2K,UAAUnL,EAAQyT,IAAc9H,EAAUnG,cAC9D,CAUA,SAASqO,GAAWrT,EAAUR,EAAQyT,GAClC,OAAOjT,EAAS0T,SAASlU,EAAQyT,IAAc9H,EAAUnG,cAC7D,CCpEA,IAAM2O,GAAgB,CAClB,EAAGC,GAAMd,UACT,EAAGc,GAAMb,WACT,EAAGa,GAAMZ,WACT,EAAGY,GAAMV,UACT,EAAGU,GAAMT,cACT,EAAGS,GAAMR,eACT,EAAGQ,GAAMP,WACT,GAAIO,GAAMN,eACV,GAAIM,GAAML,iBAGP,SAASM,GAAgB7T,EAAUmF,EAAkB8N,GACxD,OAAO9N,EAAmByO,GAAMV,UAAUlT,EAAUmF,EAAmB,EAAG8N,EAC9E,CAEO,SAASa,GAAQ9T,EAAU+T,EAAS5O,EAAkB3F,EAAQyT,EAAWe,GAC5E,IAAMC,EAAmBL,GAAMJ,YAAY,SAGrCU,EAAO,CAAC,EACRC,EA8BV,SAA2BnU,EAAUR,EAAQyT,GACzC,OAAIzT,EAASoU,GAAMJ,YAAY,UAAYxT,EAAST,WACzCqU,GAAMZ,WAAWhT,EAAUR,EAAQyT,GAEvC,CACX,CAnC2BmB,CAAkBpU,EAAUR,EAAQyT,GAE3DzT,GAAUyU,EACV,IAAK,IAAII,EAAa,EAAGA,EAAaF,KAC9B3U,EAPW,GAOWQ,EAAST,YADe8U,IAAc,CAKhE,IAAMC,EAAMC,GAAQvU,EAAU+T,EAAS5O,EAAkB3F,EAAQyT,EAAWe,QAChEpV,IAAR0V,IACAJ,EAAKI,EAAIpD,MAAQ,CACb,GAAMoD,EAAIE,GACV,MAASF,EAAI/V,MACb,YAAe+V,EAAInF,cAI3B3P,GApBe,EAqBnB,CAEA,GAAI0L,EAAU/G,eAAkB3E,EAASQ,EAAST,WAAaqU,GAAMJ,YAAY,QAAU,CACvF,IAAMiB,EAAgBb,GAAMV,UAAUlT,EAAUR,EAAQyT,GAClC,IAAlBwB,GAAuBV,IAAY5B,KACnC+B,EAAgB,UAAIJ,GAAQ9T,EHrCZ,MGqCoCmF,EAAkBA,EAAmBsP,EAAexB,EAAW,GAE3H,CAEA,OAAOiB,CACX,CASA,SAASK,GAAQvU,EAAU+T,EAAS5O,EAAkB3F,EAAQyT,EAAWe,GACrE,IAQIU,EAPEC,EAAkBf,GAAMJ,YAAY,SACpCoB,EAAmBD,EAAkBf,GAAMJ,YAAY,SACvDqB,EAAmBD,EAAmBhB,GAAMJ,YAAY,QAExDsB,EAAUlB,GAAMZ,WAAWhT,EAAUR,EAAQyT,GAC7C8B,EAAUnB,GAAMZ,WAAWhT,EAAUR,EAASmV,EAAiB1B,GAC/D+B,EAAWpB,GAAMV,UAAUlT,EAAUR,EAASoV,EAAkB3B,GAGtE,QAAiCrU,IAA7BgV,GAAMjB,UAAUoC,KAA4Bf,QAAiDpV,IAA/BqW,GAASlB,GAASe,IAApF,CAIA,GA6CJ,SAAkCC,EAASC,GACvC,OAAOpB,GAAMjB,UAAUoC,GAAWC,GAAYpB,GAAMJ,YAAY,OACpE,CA/CQ0B,CAAyBH,EAASC,GAClCN,EAAWS,GAAYnV,EAAUR,EAASqV,EAAkBE,EAASC,EAAU/B,OAC5E,CACH,IAAMmC,EAAiBxB,GAAMV,UAAUlT,EAAUR,EAASqV,EAAkB5B,GAKxEyB,EA8DZ,SAAgC1U,EAAUmF,EAAkBiQ,EAAgBL,EAASC,GACjF,OAAO7P,EAAmBiQ,EAAiBxB,GAAMjB,UAAUoC,GAAWC,GAAYhV,EAAST,UAC/F,CApEY8V,CAAuBrV,EAAUmF,EAAkBiQ,EAAgBL,EAASC,GAEjEG,GAAYnV,EAAUmF,EAAmBiQ,EAAgBL,EAASC,EAAU/B,EApBrE,QAmBI6B,GAGX,gBAEnB,CAEIC,IAAYnB,GAAMhB,SAAgB,QAElC8B,EA8ER,SAA0BY,GACtB,IACI,OAAOA,EAAW1U,KAAI,SAACrC,GAAK,OAAKgX,mBAAmBC,OAAOjX,GAAO,GACtE,CAAE,MAAOsB,GACL,OAAOyV,CACX,CACJ,CApFmBG,CADXf,EA6DR,SAAuCpS,GAInC,IAHA,IAAMoS,EAAW,GACbxU,EAAI,EAECwV,EAAI,EAAGA,EAAIpT,EAAOzD,OAAQ6W,IACb,OAAdpT,EAAOoT,SAIS9W,IAAhB8V,EAASxU,KACTwU,EAASxU,GAAK,IAElBwU,EAASxU,IAAMoC,EAAOoT,IANlBxV,IASR,OAAOwU,CACX,CA7EmBiB,CAA8BjB,KAI7C,IAAIkB,EAAU,aAAHnS,OAAgBqR,GACvBe,EAAiBnB,EAErB,QAAmC9V,IAA/BqW,GAASlB,GAASe,GAClB,QAA4ClW,IAAvCqW,GAASlB,GAASe,GAAe,WAAmElW,IAA9CqW,GAASlB,GAASe,GAAsB,YAAkB,CACjHc,EAAUX,GAASlB,GAASe,GAAe,KAC3C,IACIe,EAAiBZ,GAASlB,GAASe,GAAsB,YAAEJ,EAC/D,CAAE,MAAO7U,GACLgW,EAAiBC,GAA2BpB,EAChD,CACJ,MAAYK,IAAYnB,GAAMhB,SAAmB,UAAOmC,IAAYnB,GAAMhB,SAAoB,WAC1FgD,EAAUX,GAASlB,GAASe,GAC5Be,EAAiB,GAAMnB,EAAS,GAAKA,EAAS,KAE9CkB,EAAUX,GAASlB,GAASe,GAC5Be,EAAiBC,GAA2BpB,IAIpD,MAAO,CACHF,GAAIM,EACJ5D,KAAM0E,EACNrX,MAAOmW,EACPvF,YAAa0G,EA3CjB,CA6CJ,CAMA,SAASV,GAAYnV,EAAUR,EAAQmN,EAAMoJ,EAAO9C,GAAkC,IAC9E1U,EAAQ,GAD4D2C,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,IAAAA,UAAA,KAIpE6U,GAAgBnC,GAAMjB,UAAUhG,GAChCA,EAAOiH,GAAMhB,SAAe,MAEhC,IAAK,IAAIoD,EAAa,EAAGA,EAAaD,EAAOC,IACzCzX,EAAM4B,KAAKwT,GAAchH,GAAM3M,EAAUR,EAAQyT,IACjDzT,GAAUoU,GAAMjB,UAAUhG,GAS9B,OANIA,IAASiH,GAAMhB,SAAgB,MAC/BrU,EAAQqV,GAAMf,cAActU,GACJ,IAAjBA,EAAMM,SACbN,EAAQA,EAAM,IAGXA,CACX,CAgCA,SAASuX,GAA2BpB,GAChC,OAAIA,aAAoB5S,MACb4S,EAAS1T,KAAK,MAElB0T,CACX,CCjLA,IAAMuB,GAAuB,mBACvBC,GAA2B,uBAC3BC,GAAmC,+BAEzC,IACIC,KAGJ,SAAcpW,EAAUmF,EAAkB6O,GACtC,IAAMf,EAAY9H,EAAUjG,aAAalF,EAAUmF,GAC/C+O,EAQR,SAAoBlU,EAAUmF,EAAkB8N,EAAWe,GACvD,OAAOF,GAAQ9T,EAAUmS,GAAchN,EAAkB0O,GAAgB7T,EAAUmF,EAAkB8N,GAAYA,EAAWe,EAChI,CAVeqC,CAAWrW,EAAUmF,EAAkB8N,EAAWe,GAK7D,OAuBJ,SAAiCE,EAAMlU,EAAUmF,EAAkB8N,EAAWe,GAC1E,YAA+CpV,IAA3CsV,EAAKiC,IACElV,EAAaiT,EAAMJ,GAAQ9T,EAAUqS,GAA2BlN,EAAkBA,EAAmB+O,EAAKiC,IAAkC5X,MAAO0U,EAAWe,IAGlKE,CACX,CA/BWoC,CADPpC,EAkBJ,SAAoBA,EAAMlU,EAAUmF,EAAkB8N,EAAWe,GAC7D,YAAuCpV,IAAnCsV,EAAKgC,IACEjV,EAAaiT,EAAMJ,GAAQ9T,EJxBd,MIwBsCmF,EAAkBA,EAAmB+O,EAAKgC,IAA0B3X,MAAO0U,EAAWe,IAG7IE,CACX,CAxBWqC,CADPrC,EAWJ,SAAqBA,EAAMlU,EAAUmF,EAAkB8N,EAAWe,GAC9D,YAAmCpV,IAA/BsV,EAAK+B,IACEhV,EAAaiT,EAAMJ,GAAQ9T,EAAUoS,GAAejN,EAAkBA,EAAmB+O,EAAK+B,IAAsB1X,MAAO0U,EAAWe,IAG1IE,CACX,CAjBWsC,CAAYtC,EAAMlU,EAAUmF,EAAkB8N,EAAWe,GACxChU,EAAUmF,EAAkB8N,EAAWe,GAC1BhU,EAAUmF,EAAkB8N,EAAWe,EAGhF,GCfA,IACIoC,KAKJ,SAAcpW,EAAUoI,EAAY4L,GAChC,IAAMf,EAAY9H,EAAUjG,aAAalF,EAAUoI,GAEnD,OAGJ,SAAsBpI,EAAUoI,EAAY8L,EAAMjB,GAC9C,IAAKiB,EAAc,QACf,OAAOA,EAIX,IADA,IAAMuC,EAAS,GACNvW,EAAI,EAAGA,EAAIwN,KAAKgJ,KAAKxC,EAAc,QAAE3V,MAAMM,OAAS8X,IAAazW,IAAK,CAC3EuW,EAAOvW,GAAK,CAAC,EAEb,IAAM0W,EAAaC,GAAoB3C,EAAc,QAAE3V,MAAO2B,EAAIyW,GAAY/C,GAAMJ,YAAY,QAASP,GACzGwD,EAAOvW,GAAe,WAAI4W,GAAcF,GACxCH,EAAOvW,GAAgB,YAAI6W,GAAeH,GAC1CH,EAAOvW,GAAc,UAAI8W,GAAaJ,GAEtC,IAAMK,EAAYJ,GAAoB3C,EAAc,QAAE3V,MAAO2B,EAAIyW,GAAa,EAAG/C,GAAMJ,YAAY,QAASP,GAC5GwD,EAAOvW,GAAc,UAAI,CACrB3B,MAAO0Y,EACP9H,YAAa,GAAK8H,GAGtB,IAAMC,EAAcC,GAAejX,EAAGgU,EAAc,QAAGjB,EAAW7K,GAClEqO,EAAOvW,GAAgB,YAAI,CACvB3B,MAAO2Y,EACP/H,YAAa,GAAK+H,GAGtB,IAAME,EACFP,GAAoB3C,EAAc,QAAE3V,MAAO2B,EAAIyW,GAAa,GAAI/C,GAAMJ,YAAY,SAAUP,GAChGwD,EAAOvW,GAA+B,2BAAI,CACtC3B,MAAO6Y,EACPjI,YAAa,GAAKiI,GAGtB,IAAMC,EACFR,GAAoB3C,EAAc,QAAE3V,MAAO2B,EAAIyW,GAAa,GAAI/C,GAAMJ,YAAY,SAAUP,GAChGwD,EAAOvW,GAA+B,2BAAI,CACtC3B,MAAO8Y,EACPlI,YAAa,GAAKkI,GAGtBZ,EAAOvW,GAAG0B,MAAQ5B,EAASvB,OAAOqG,MAAMoS,EAAaA,EAAcD,GACnE7V,EAAUqV,EAAOvW,GAAI,UAAU,WAC3B,OAAOyB,EAAepE,KAAKqE,MAC/B,GACJ,CAIA,OAFAsS,EAAa,OAAIuC,EAEVvC,CACX,CApDWoD,CAAatX,EAAUoI,EADjB0L,GAAQ9T,ELCG,MKDqBoI,EAAYyL,GAAgB7T,EAAUoI,EAAY6K,GAAYA,EAAWe,GACtEf,EACpD,GANM0D,GAAa,GA2DnB,SAASE,GAAoBU,EAAS/X,EAAQkB,EAAMuS,GAChD,GAAIA,IAAc9H,EAAUnG,cAAe,CAEvC,IADA,IAAIzG,EAAQ,EACH2B,EAAI,EAAGA,EAAIQ,EAAMR,IACtB3B,GAASgZ,EAAQ/X,EAASU,IAAO,EAAIA,EAEzC,OAAO3B,CACX,CAGA,IADA,IAAIA,EAAQ,EACH2B,EAAI,EAAGA,EAAIQ,EAAMR,IACtB3B,GAASgZ,EAAQ/X,EAASU,IAAO,GAAKQ,EAAO,EAAIR,GAErD,OAAO3B,CACX,CAEA,SAASuY,GAAcF,GACnB,IAAMY,EAAQ,CACTZ,GAAc,GAAM,EACpBA,GAAc,GAAM,EACpBA,GAAc,GAAM,GAGnBa,EAAmB,GAYzB,OAVID,EAAM,IACNC,EAAiBtX,KAAK,0BAEtBqX,EAAM,IACNC,EAAiBtX,KAAK,yBAEtBqX,EAAM,IACNC,EAAiBtX,KAAK,wBAGnB,CACH5B,MAAOiZ,EACPrI,YAAasI,EAAiBzW,KAAK,OAAS,OAEpD,CAEA,SAAS+V,GAAeH,GACpB,IAAMc,EAAcd,GAAc,GAAK,EACvC,MAAO,CACHrY,MAAOmZ,EACPvI,YAA6B,IAAhBuI,EAAoB,OAAS,UAElD,CAEA,SAASV,GAAaJ,GAClB,IAAMjK,EAAoB,SAAbiK,EAWb,MAAO,CACHrY,MAAOoO,EACPwC,YAZiB,CACjB,OAAS,4BACT,MAAS,mCACT,MAAS,uCACT,OAAS,+BACT,OAAS,gCACT,OAAS,kCACT,EAAK,aAKqBxC,IAAS,UAE3C,CAEA,SAASwK,GAAeQ,EAAYC,EAAS3E,EAAW7K,GACpD,OAMJ,SAAgCuP,GAC5B,OAAsB,IAAfA,CACX,CARQE,CAAuBF,GAChB,EAEJd,GAAoBe,EAAQrZ,MAAOoZ,EAAahB,GAAa,EAAG/C,GAAMJ,YAAY,QAASP,GAAa7K,CACnH,CC3IA,QACIgO,KAGJ,SAAcpW,EAAUsM,GACpB,IAAMzN,EAWV,SAAmBmB,EAAUsM,GACzB,OAAOsH,GAAMZ,WAAWhT,EAAUsM,EACtC,CAbmBwL,CAAU9X,EAAUsM,GAC7ByL,EA2DV,SAAoC/X,EAAUsM,EAAgBzN,GAI1D,KAAImZ,EAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMd,UAAU9S,EAAUsM,EAPzB,GAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAa,GAAK5Q,EALtB,CAOJ,CAxEoC0Z,CAA2BjY,EAAUsM,EAAgBzN,GACrF,MAAO,CACH,kBAAmBqZ,GAAiBlY,EAAUsM,EAAgBzN,GAC9D,eAAgBsZ,GAAenY,EAAUsM,EAAgBzN,GACzD,cAAeuZ,GAAcpY,EAAUsM,EAAgBzN,GACvD,mBAAoBkZ,EACpB,YAAeA,GAA2BM,GAAerY,EAAUsM,EAAgByL,EAAwBxZ,MAAOM,GAE1H,GAMA,SAASqZ,GAAiBlY,EAAUsM,EAAgBzN,GAIhD,KAAImZ,EAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMd,UAAU9S,EAAUsM,EAPzB,GAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAa,GAAK5Q,EALtB,CAOJ,CAEA,SAAS4Z,GAAenY,EAAUsM,EAAgBzN,GAI9C,KAAImZ,EAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMZ,WAAWhT,EAAUsM,EAP1B,GAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CAEA,SAAS6Z,GAAcpY,EAAUsM,EAAgBzN,GAI7C,KAAImZ,EAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMZ,WAAWhT,EAAUsM,EAP1B,GAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CAiBA,SAAS8Z,GAAerY,EAAUsM,EAAgByL,EAAyBlZ,GAIvE,KAHe,EACF,EAAIkZ,EAEGlZ,GAApB,CAMA,IAFA,IAAMyZ,EAAa,GAEVpY,EAAI,EAAGA,EAAI6X,EAAyB7X,IAAK,CAC9C,IAAMqY,EAAkBjM,EAVb,EAU2C,EAAJpM,EAClDoY,EAAWnY,KAAK,CACZyT,GAAMd,UAAU9S,EAAUuY,GAC1B3E,GAAMd,UAAU9S,EAAUuY,EAAkB,GAC5C3E,GAAMd,UAAU9S,EAAUuY,EAAkB,IAEpD,CAEA,MAAO,CACHha,MAAO+Z,EACPnJ,YAAamJ,EAAWzZ,OAAS,EAAI2Z,GAAgBF,GAAcG,GAAgBH,GAAc,GAfrG,CAiBJ,CAEA,SAASE,GAAgBF,GACrB,IAAMI,EAAM,CACR,EAAM,IACN,EAAM,KACN,EAAM,KACN,EAAM,IACN,EAAM,KAGV,OAAOJ,EAAW1X,KAAI,SAAC+X,GAAU,OAAKD,EAAIC,EAAW,GAAG,IAAE3X,KAAK,GACnE,CAEA,SAASyX,GAAgBH,GACrB,IAAMM,EAAQ,CACV,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,eAGV,OAA0B,IAAtBN,EAAWzZ,aAAqCD,IAArB0Z,EAAW,GAAG,SAAgD1Z,IAA5Bga,EAAMN,EAAW,GAAG,IAC1E,GAGJM,EAAMN,EAAW,GAAG,GAC/B,CCtIA,QACIlC,KAGJ,SAAcpW,EAAU2L,GACpB,IAAM9M,EA4BV,SAAmBmB,EAAU2L,GACzB,OAAOiI,GAAMZ,WAAWhT,EAAU2L,EACtC,CA9BmBmM,CAAU9X,EAAU2L,GAC7BkN,EAyGV,SAA2B7Y,EAAU2L,EAAgB9M,GAIjD,KAAImZ,GAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMd,UAAU9S,EAAU2L,EAPzB,IAQf,MAAO,CACHpN,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CAtH2Bua,CAAkB9Y,EAAU2L,EAAgB9M,GAC7Dka,EAuHV,SAA4B/Y,EAAU2L,EAAgB9M,GAIlD,KAAImZ,GAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMd,UAAU9S,EAAU2L,EAPzB,IAQf,MAAO,CACHpN,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CApI4Bya,CAAmBhZ,EAAU2L,EAAgB9M,GAC/DqV,EAAO,CACT,eAAgB+E,GAAWjZ,EAAU2L,EAAgB9M,GACrD,kBAAmBqa,GAAkBlZ,EAAU2L,EAAgB9M,GAC/D,YAAesa,GAAenZ,EAAU2L,EAAgB9M,GACxD,YAAeua,GAAepZ,EAAU2L,EAAgB9M,GACxD,uBAAwBga,EACxB,wBAAyBE,GAG7B,QAAuBna,IAAnBia,QAAoDja,IAApBma,EAA+B,CAC/D,IAAMM,EA2Hd,SAAsBrZ,EAAU2L,EAAgB2N,EAAiBza,GAG7D,KAAwB,IAApBya,GAFW,GAEuBA,EAAkBza,GAKxD,MAAO,CACHN,MAFUyB,EAASvB,OAAOqG,MAAM6G,EANrB,GAM8CA,EAN9C,GAMwE2N,GAGnFnK,YAAa,0BAErB,CAvI0BoK,CAAavZ,EAAU2L,EAAgB,EAAIkN,EAAeta,MAAQwa,EAAgBxa,MAAOM,GACvGwa,IACAnF,EAAK,kBAAoBmF,EAEjC,CAEA,IAAK,IAAMzD,KAAW1B,OACItV,IAAlBsV,EAAK0B,WACE1B,EAAK0B,GAIpB,OAAO1B,CACX,GAMA,SAAS+E,GAAWjZ,EAAU2L,EAAgB9M,GAI1C,KAAImZ,EAAgBnZ,GAApB,CAIA,IAAM2a,EAAe5F,GAAMd,UAAU9S,EAAU2L,EAPhC,GAQT8N,EAAe7F,GAAMd,UAAU9S,EAAU2L,EARhC,EAQ0D,GACzE,MAAO,CACHpN,MAAsB,IAAfib,EAAuBC,EAC9BtK,YAAaqK,EAAe,IAAMC,EANtC,CAQJ,CAEA,SAASP,GAAkBlZ,EAAU2L,EAAgB9M,GAIjD,KAAImZ,GAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMd,UAAU9S,EAAU2L,EAPzB,GAQf,MAAO,CACHpN,MAAAA,EACA4Q,YAAauK,GAA6Bnb,GAL9C,CAOJ,CAEA,SAASmb,GAA6Bnb,GAClC,OAAc,IAAVA,EACO,OAEG,IAAVA,EACO,SAEG,IAAVA,EACO,KAEJ,SACX,CAEA,SAAS4a,GAAenZ,EAAU2L,EAAgB9M,GAI9C,KAAImZ,GAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMZ,WAAWhT,EAAU2L,EAP1B,IAQf,MAAO,CACHpN,MAAAA,EACA4Q,YAAa,GAAK5Q,EALtB,CAOJ,CAEA,SAAS6a,GAAepZ,EAAU2L,EAAgB9M,GAI9C,KAAImZ,GAAgBnZ,GAApB,CAIA,IAAMN,EAAQqV,GAAMZ,WAAWhT,EAAU2L,EAP1B,IAQf,MAAO,CACHpN,MAAAA,EACA4Q,YAAa,GAAK5Q,EALtB,CAOJ,CC7GA,QACI,KAAQ,CACJ,IAAQ,CACJ,KAAQ,gBACR,YAAe,SAACA,GACZ,MAAO,KAAEA,EAAM,IAAM,GAAKA,EAAM,GACpC,GAEJ,IAAQ,CACJ,KAAQ,cACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,cACR,YAAe,SAACA,GACZ,MAAO,KAAEA,EAAM,IAAM,GAAKA,EAAM,GACpC,GAEJ,IAAQ,CACJ,KAAQ,sBACR,YAAe,SAACA,GACZ,MAAO,KAAEA,EAAM,IAAM,GAAKA,EAAM,GACpC,GAEJ,IAAQ,qBACR,IAAQ,kBACR,IAAQ,aACR,IAAQ,oBACR,IAAQ,CACJ,KAAQ,YACR,YAAeob,IAEnB,IAAQ,CACJ,KAAQ,YACR,YAAeC,IAEnB,IAAQ,CACJ,KAAQ,sBACR,YAAeC,GACf,cAAiBA,IAErB,IAAQ,MACR,IAAQ,CACJ,KAAQ,iBACR,YAAe,SAACtb,GACZ,MAAO,KAAEA,EAAM,IAAM,GAAKA,EAAM,GACpC,GAEJ,IAAQ,CACJ,KAAQ,cACR,YAAe,SAACA,GACZ,MAAO,KAAEA,EAAM,IAAM,GAAKA,EAAM,GACpC,GAEJ,IAAQ,CACJ,KAAQ,iBACR,YAAe,SAACA,GACZ,MAAO,KAAEA,EAAM,IAAM,GAAKA,EAAM,GACpC,GAEJ,IAAQ,wBACR,IAAQ,6BACR,IAAQ,cACR,IAAQ,cACR,IAAQ,CACJ,KAAQ,mBACR,YAAe,SAACA,GACZ,MAA8B,OAA1BoG,EAAepG,GACR,sBAEJ,SACX,GAEJ,IAAQ,UACR,IAAQ,CACJ,KAAQ,oBACR,WAAc,EACd,YAAe,SAACA,GACZ,IAAMub,EAAQnV,EAAepG,GAAOwb,MAAM,KAC1C,OAAOD,EAAM,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAAK,KAAOA,EAAM,GAAK,IAAMA,EAAM,GAAK,GACtF,GAEJ,IAAQ,WACR,IAAQ,CACJ,KAAQ,wBACR,WAAc,GAElB,IAAQ,qBACR,IAAQ,CACJ,KAAQ,WACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,wBACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,wBACR,WAAc,GAElB,IAAQ,eACR,IAAQ,eACR,IAAQ,kBACR,IAAQ,kBACR,IAAQ,uBACR,IAAQ,CACJ,KAAQ,iBACR,YAAe,SAACvb,GACZ,IAAM+D,EAASqC,EAAepG,GAC9B,MAAe,OAAX+D,EACO,cACW,OAAXA,EACA,iBACW,OAAXA,EACA,gBACW,OAAXA,EACA,mBAEJ,SACX,GAEJ,IAAQ,CACJ,KAAQ,oBACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,iBACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,mBACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,eACR,YAAeqX,IAEnB,IAAQ,CACJ,KAAQ,eACR,YAAeC,IAEnB,IAAQ,CACJ,KAAQ,wBACR,YAAeD,IAEnB,IAAQ,CACJ,KAAQ,wBACR,YAAeC,IAEnB,IAAQ,sBACR,IAAQ,kBACR,IAAQ,CACJ,KAAQ,eACR,YAAe,SAACrb,GACZ,IAAM+D,EAASqC,EAAepG,GAC9B,MAAe,MAAX+D,EACO,UACW,MAAXA,EACA,UACW,MAAXA,EACA,OAEJ,SACX,GAEJ,IAAQ,CACJ,KAAQ,UACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,gBACR,WAAc,GAElB,IAAQ,OACR,IAAQ,eACR,IAAQ,iBACR,IAAQ,gCACR,IAAQ,gCACR,IAAQ,kCACR,IAAQ,WACR,IAAQ,SACR,IAAQ,SACR,IAAQ,mBACR,IAAQ,CACJ,KAAQ,UACR,WAAc,GAElB,IAAQ,mBACR,IAAQ,CACJ,KAAQ,gBACR,WAAc,GAElB,IAAQ,CACJ,KAAQ,qBACR,YAAe,SAAC/D,GAAK,OAAKA,CAAK,GAEnC,IAAQ,aACR,IAAQ,CACJ,KAAQ,oBACR,YAAe,SAACA,GACZ,IAAM+D,EAASqC,EAAepG,GAC9B,MAAe,MAAX+D,EACO,WACW,MAAXA,EACA,YACW,MAAXA,EACA,SAEJ,SACX,GAEJ,IAAQ,sBACR,IAAQ,CACJ,KAAQ,aACR,YAAe,SAAC/D,GACZ,IAAMyb,EAAcrV,EAAepG,GAC7B0b,EAAaD,EAAYE,OAAO,GAChCC,EAAaH,EAAYE,OAAO,GAClC/K,EAAc,GA0BlB,MAxBmB,MAAf8K,EACA9K,GAAe,OACO,MAAf8K,IACP9K,GAAe,UAGA,MAAfgL,EACAhL,GAAe,cACO,MAAfgL,EACPhL,GAAe,gCACO,MAAfgL,EACPhL,GAAe,iCACO,MAAfgL,EACPhL,GAAe,2BACO,MAAfgL,EACPhL,GAAe,cACO,MAAfgL,EACPhL,GAAe,WACO,MAAfgL,EACPhL,GAAe,WACO,MAAfgL,IACPhL,GAAe,UAGC,KAAhBA,EACOA,EAEJ6K,CACX,GAEJ,IAAQ,CACJ,KAAQ,sBACR,YAAe,SAACzb,GAAK,OAAK6b,SAASzV,EAAepG,GAAQ,IAAM,KAAK,GAEzE,IAAQ,CACJ,KAAQ,4BACR,YAAe,SAACA,GACZ,IAAM8b,EAAOD,SAASzV,EAAepG,GAAQ,IAC7C,OAAO8b,GAAiB,IAATA,EAAa,OAAS,QACzC,GAEJ,IAAQ,CACJ,KAAQ,iBACR,YAAe,SAAC9b,GACZ,IAAM+b,EAAW3V,EAAepG,GAChC,OAAI+b,EAASzb,QAAU,EACZyb,EAASC,OAAO,EAAG,GAAK,IAAMD,EAASC,OAAO,EAAG,GAAK,IAAMD,EAASC,OAAO,EAAG,GAEnFD,CACX,GAEJ,IAAQ,eACR,IAAQ,oBACR,IAAQ,qBACR,IAAQ,WACR,IAAQ,CACJ,KAAQ,SAAC/b,GACL,OAAqB,IAAjBA,EAAMM,OACC,iCAEJ,sBACX,EACA,YAAe,SAACN,GACZ,GAAqB,IAAjBA,EAAMM,OAAc,CACpB,IAAM2b,GAAYjc,EAAM,IAAM,GAAKA,EAAM,GACzC,OAAiB,IAAbic,EACO,gBACa,IAAbA,EACA,8CACa,IAAbA,EACA,sCACa,IAAbA,EACA,oDACa,IAAbA,EACA,oCACa,IAAbA,EACA,mCACa,IAAbA,EACA,uBACa,IAAbA,EACA,eACa,IAAbA,EACA,2DACa,IAAbA,EACA,+CACa,KAAbA,EACA,+CACa,KAAbA,EACA,+BACa,KAAbA,EACA,qCACa,KAAbA,EACA,6CACa,KAAbA,EACA,yDACa,KAAbA,EACA,8CACa,KAAbA,EACA,iDACa,KAAbA,EACA,8CACa,KAAbA,EACA,0DACa,KAAbA,EACA,oCACa,KAAbA,EACA,8BACa,KAAbA,EACA,0DACa,KAAbA,EACA,0CACa,KAAbA,EACA,gCACa,KAAbA,EACA,uCACa,KAAbA,EACA,mCACa,KAAbA,EACA,uBACa,KAAbA,EACA,sDACa,KAAbA,EACA,2CACa,KAAbA,EACA,qBAEJ,kBAAP/W,OAAyB+W,EAC7B,CACA,OAAO7V,EAAepG,EAC1B,GAEJ,IAAQ,CACJ,KAAQ,yCACR,YAAe,SAACA,EAAO2V,GAEnB,IAAMuG,EAAiB,CACnB,KAAM,CAAC,KAAM,KACb,KAAM,CAAC,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAC9C,KAAM,CAAC,KAAM,KACb,KAAM,CAAC,KAAM,MAAO,KAAM,OAC1B,KAAM,CAAC,KAAM,QACb,KAAM,CAAC,KAAM,KACb,KAAM,CAAC,KAAM,KACb,GAAM,CAAC,KAAM,QACb,GAAM,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,OACpD,GAAM,CAAC,KAAM,QAEXT,EAAcrV,EAAepG,GAEnC,GAAI2V,EAAK,kCAAmC,CACxC,IAAMwG,EAA8B/V,EAAeuP,EAAK,kCAAkC3V,OAC1F,GAAIkc,EAAeC,IACZD,EAAeC,GAA6BV,GAC/C,OAAOS,EAAeC,GAA6BV,EAE3D,CAEA,OAAOA,CACX,GAEJ,IAAQ,0BACR,KAAQ,CACJ,KAAQ,YACR,YAAe,SAACzb,GACZ,OAAQA,EAAM,GAAI6D,UACtB,GAEJ,KAAQ,CACJ,KAAQ,mBACR,YAAe,SAAC7D,GAEZ,IADA,IAAIoc,EAAI,EACCza,EAAI,EAAGA,EAAI3B,EAAMM,OAAQqB,IAC9Bya,GAAKA,GAAK,GAAKpc,EAAM2B,GAEzB,OAAOya,EAAEvY,UACb,GAEJ,KAAQ,CACJ,KAAQ,4BACR,YAAe,SAAC7D,GAEZ,IADA,IAAIoc,EAAI,EACCza,EAAI,EAAGA,EAAI3B,EAAMM,OAAQqB,IAC9Bya,GAAKA,GAAK,GAAKpc,EAAM2B,GAEzB,OAAOya,EAAEvY,UACb,GAEJ,KAAQ,CACJ,KAAQ,0BACR,YAAe,SAAC7D,GAEZ,IADA,IAAIoc,EAAI,EACCza,EAAI,EAAGA,EAAI3B,EAAMM,OAAQqB,IAC9Bya,GAAKA,GAAK,GAAKpc,EAAM2B,GAEzB,OAAOya,EAAEvY,UACb,KAKZ,SAASuX,GAAgBpb,GACrB,IAAMqc,EAAOjW,EAAepG,GAE5B,OAAIqc,EAAK/b,QAAU,EACR+b,EAAKL,OAAO,EAAG,GAAK,IAAMK,EAAKL,OAAO,EAAG,GAAK,IAAMK,EAAKL,OAAO,EAAG,GAGvEK,CACX,CAEA,SAAShB,GAAgBrb,GACrB,IAAMsc,EAAOlW,EAAepG,GACxBuc,EAAaD,EASjB,OAPIA,EAAKhc,QAAU,IACfic,EAAaD,EAAKN,OAAO,EAAG,GAAK,IAAMM,EAAKN,OAAO,EAAG,GAAK,IAAMM,EAAKN,OAAO,EAAG,GAC5D,KAAhBM,EAAKhc,SACLic,GAAcD,EAAKN,OAAO,EAAG,GAAKM,EAAKN,OAAO,EAAG,GAAK,IAAMM,EAAKN,OAAO,EAAG,KAI5EO,CACX,CAEA,SAASjB,GAAgBtb,GACrB,IAAM+D,EAASqC,EAAepG,GAC9B,MAAe,QAAX+D,EACO,QACW,QAAXA,EACA,eACW,SAAXA,EACA,gBACW,SAAXA,EACA,gBACW,SAAXA,EACA,gBACW,QAAXA,EACA,aACW,QAAXA,EACA,aACW,QAAXA,EACA,aACW,QAAXA,EACA,aACW,QAAXA,EACA,aACW,QAAXA,EACA,aACW,QAAXA,EACA,aACW,QAAXA,EACA,aAEJ,SACX,CC5dA,ICIA,IACIyY,OAIJ,SAAgBlW,EAAU6P,GACtB,IAAMsG,EDNV,WACI,GAA2B,oBAAhBC,YACP,OAAOA,WAIf,CCAoBA,GAChB,GAAwB,oBAAZD,QAA0Cpc,IAAbiG,EACrC,IACI,OAAO,IAAImW,EAAQnW,GAAUkW,OAAOrG,aAAoBlW,SAAWkW,EAASjW,OAASuD,WAAWG,KAAKuS,GACzG,CAAE,MAAO7U,GACL,CAKR,OAGJ,SAA0ByV,GACtB,IACI,OAAOC,mBAAmBC,OAAOF,GACrC,CAAE,MAAOzV,GACL,OAAOyV,CACX,CACJ,CATWG,CADaf,EAAS9T,KAAI,SAACC,GAAQ,OAAKC,OAAOC,aAAaF,EAAS,IAAEG,KAAK,IAEvF,EAfIka,gBAJoB,GCKlBA,GAAkB,EAExB,IACI9E,KAGJ,SAAcpW,EAAUoI,EAAY4L,GAChC,IACI,GAAIlS,MAAMwP,QAAQtR,GACd,OAAOmb,GAAU,IAAI3c,SAASwD,WAAWG,KAAKnC,GAAUvB,QAAS,CAACiC,KAAMV,EAASnB,QAAS,EAAGmV,GAEjG,IAAAoH,EAOR,SAA6Bpb,EAAUoI,GACnC,KAAOA,EArBwBiT,IAqBmBrb,EAAST,YAAY,CACnE,IAAM+b,EAAgBC,GAAiBvb,EAAUoI,GACjD,GAAIoT,GAAmBF,GACnB,MAAO,CAACG,SAAUH,EAAelT,WAAYA,EAxBtBiT,IA0B3BjT,GA1B2BiT,GA0BgBC,EAAc5a,KAAOgb,GAAgBJ,EACpF,CACA,MAAUhc,MAAM,8BACpB,CAhBsDqc,CAAoB3b,EAAUoI,GAC5E,OAAO+S,GAAUnb,EADFob,EAARK,SAAmCL,EAAzBhT,WACmC4L,EACxD,CAAE,MAAOnU,GACL,MAAO,CAAC,CACZ,CACJ,GAaA,SAAS0b,GAAiBvb,EAAUoI,GAGhC,GApCe,YAoCXpI,EAAS2K,UAAUvC,EAAY,GAC/B,MAAU9I,MAAM,+BAGpB,MAAO,CACHqN,KAAM3M,EAASO,UAAU6H,EAxCT,GAyChB1H,KAAMV,EAASO,UAAU6H,EARM,IAUvC,CAEA,SAASoT,GAAmBF,GACxB,OA5C4B,OA4CrBA,EAAc3O,IACzB,CAEA,SAAS+O,GAAgBJ,GACrB,OAAIA,EAAc5a,KAAO,GAAM,EACpB,EAEJ,CACX,CAEA,SAASya,GAAUnb,EAAUyb,EAAUrT,EAAY4L,GAM/C,IALA,IAAME,EAAO,CAAC,EACVrP,OAAWjG,EAETgd,EAAmBxT,EAAaqT,EAAe,KAE7CrT,EAAawT,GAAsBxT,EAAapI,EAAST,YAAa,CAC1E,IAAAsc,EAAuBtH,GAAQvU,EAAUoI,EAAY8L,EAAMrP,EAAUmP,GAA9DM,EAAGuH,EAAHvH,IAAKwH,EAAOD,EAAPC,QAEZ,GAAY,OAARxH,EACA,MAGAA,IACI,aAAcA,IACdzP,EAAWyP,EAAIzP,eAGKjG,IAAnBsV,EAAKI,EAAIpD,YAA+CtS,IAAtB0V,EAAgB,WACnDJ,EAAKI,EAAIpD,MAAQ,CACbsD,GAAIF,EAAIE,GACRjW,MAAO+V,EAAI/V,MACX4Q,YAAamF,EAAInF,cAGf+E,EAAKI,EAAIpD,gBAAiBpP,QAC5BoS,EAAKI,EAAIpD,MAAQ,CAAC,CACdsD,GAAIN,EAAKI,EAAIpD,MAAMsD,GACnBjW,MAAO2V,EAAKI,EAAIpD,MAAM3S,MACtB4Q,YAAa+E,EAAKI,EAAIpD,MAAM/B,eAGpC+E,EAAKI,EAAIpD,MAAM/Q,KAAK,CAChBqU,GAAIF,EAAIE,GACRjW,MAAO+V,EAAI/V,MACX4Q,YAAamF,EAAInF,gBAK7B/G,GAAc8S,GAAkBY,CACpC,CAEA,OAAO5H,CACX,CAEA,SAASK,GAAQvU,EAAUoI,EAAY8L,EAAMrP,EAAUmP,GAInD,GA6BJ,SAA2BhU,EAAUoI,GAEjC,OADsB,KACfpI,EAASI,SAASgI,EAC7B,CAhCQ2T,CAAkB/b,EAAUoI,GAC5B,MAAO,CAACkM,IAAK,KAAMwH,QAAS,GAGhC,IAAMhH,EAAU9U,EAASO,UAAU6H,EAPX,GAQlB0T,EAAU9b,EAASO,UAAU6H,EAPX,GASxB,IAAK4L,IAAmBgI,GAAmB,KAAElH,GACzC,MAAO,CAACR,SAAK1V,EAAWkd,QAAAA,GAG5B,IAAMpH,EAuBV,SAAqB1U,EAAUR,EAAQkB,GAGnC,IAFA,IAAMnC,EAAQ,GAELyX,EAAa,EAAGA,EAAatV,EAAMsV,IACxCzX,EAAM4B,KAAKH,EAASI,SAASZ,EAASwW,IAG1C,OAAOzX,CACX,CA/BqB4W,CAAYnV,EAAUoI,EAAa8S,GAAiBY,GAE/DxH,EAAM,CACRE,GAAIM,EACJ5D,KAAM+K,GAAWD,GAAmB,KAAElH,GAAUA,EAASJ,GACzDnW,MAAOmW,EACPvF,YAAa+M,GAAkBF,GAAmB,KAAElH,GAAUJ,EAAUR,EAAMrP,IASlF,OA6DJ,SAAyBiQ,GACrB,OAAOkH,GAAmB,KAAElH,IAAYkH,GAAmB,KAAElH,GAAqB,UACtF,CAtEQqH,CAAgBrH,KAChBR,EAAgB,WAAI,GAuE5B,SAA6BQ,GACzB,OAAOkH,GAAmB,KAAElH,SAA+DlW,IAAnDod,GAAmB,KAAElH,GAAwB,aACzF,CAvEQsH,CAAoBtH,KACpBR,EAAc,SAAI0H,GAAmB,KAAElH,GAAwB,cAAEJ,IAG9D,CAACJ,IAAAA,EAAKwH,QAAAA,EACjB,CAiBA,SAASG,GAAW3H,EAAKQ,EAASJ,GAC9B,OAAKJ,EAYT,SAAmBA,GACf,MAAsB,iBAARA,CAClB,CAXQ+H,CAAU/H,GACHA,EAYf,SAAwBA,GACpB,MAAgC,mBAAjBA,EAAU,IAC7B,CAZQgI,CAAehI,GACRA,EAAU,KAAEI,GAEhBJ,EAAU,KARN,aAAP7Q,OAAoBqR,EAS5B,CAUA,SAASoH,GAAkB5H,EAAKI,EAAUR,EAAMrP,GAC5C,GAiBJ,SAAgCyP,GAC5B,OAAOA,QAA8B1V,IAAvB0V,EAAiB,WACnC,CAnBQiI,CAAuBjI,GACvB,IACI,OAAOA,EAAiB,YAAEI,EAAUR,EACxC,CAAE,MAAOrU,GACL,CAGR,OAMJ,SAAwByU,EAAKI,GACzB,OAAOJ,GAAOI,aAAoB5S,KACtC,CARQ0a,CAAelI,EAAKI,GACb+H,GAAW1B,OAAOlW,EAAU6P,GAEhCA,CACX,C,uGCzLA,QACI,mBAAkB,SAACnW,GACf,MAAc,MAAVA,EACO,sBAEG,MAAVA,EACO,oBAEG,MAAVA,EACO,aAEG,MAAVA,EACO,kBAEG,MAAVA,EACO,sCAEG,MAAVA,EACO,eAEG,MAAVA,EACO,qCAEG,MAAVA,EACO,gBAEJA,CACX,EACA,sBAAuB,SAACA,GAAK,OAAK4S,GAAeV,eAAe2J,SAAS7b,EAAO,IAAI,EACpF,mBAAoB,SAACA,GAAK,OAAKme,GAASvL,GAAeH,YAAazS,EAAM,EAC1E,mBAAoB,SAACA,GAAK,OAAKme,GAASvL,GAAeF,YAAa1S,EAAM,EAC1E,qBAAsB,SAACA,GAAK,OAAKme,GAASvL,GAAe/B,cAAe7Q,EAAM,EAC9E,mBAAoBoe,GACpB,oBAAqBA,GACrB,eAAgB,SAACpe,GAAK,OAAKme,GAASvL,GAAef,QAAS7R,EAAM,EAClE,mBAAoB,SAACA,GAAK,OAAKme,GAASvL,GAAed,YAAa9R,EAAM,EAC1E,gCAAiC,SAACA,GAAK,OAAK4S,GAAeb,yBAAyB8J,SAAS7b,EAAO,IAAI,EACxG,kBAAmB,SAACA,GAAK,OAAK4S,GAAe3B,WAiCjD,SAAqBjR,GACjB,MAA8B,OAA1BA,EAAMqe,UAAU,EAAG,GACZxC,SAAS7b,EAAMqe,UAAU,GAAI,IAEjCxC,SAAS7b,EAAO,GAC3B,CAtC4Dse,CAAYte,GAAO,EAC3E,+BAA8B,SAACA,EAAO4Q,GAClC,GAAI,mBAAmBwC,KAAKxC,GAAc,CACtC,IAAM2N,EAAU3N,EAAY4K,MAAM,MAAMnZ,KAAI,SAACmc,GAAM,OAAKA,EAAOC,WAAW,EAAE,IAC5E,OAAO7L,GAAe1B,wBAAwBqN,EAClD,CACA,OAAO3N,CACX,EACA,gBAAiB,SAAC5Q,GAAK,OAAK4S,GAAexB,SAASyK,SAAS7b,EAAO,IAAI,EACxE,sBAAuB,SAACA,GAAK,OAAK4S,GAAevB,eAAewK,SAAS7b,EAAO,IAAI,EACpF,oBAAqB,SAACA,GAAK,OAAK4S,GAAetB,aAAauK,SAAS7b,EAAO,IAAI,EAChF,uBAAwB,SAACA,GAAK,OAAK4S,GAAerB,gBAAgBsK,SAAS7b,EAAO,IAAI,EACtF,oBAAmB,SAACA,GAChB,OAAI0e,GAAW1e,GACJ4S,GAAepB,aAAaxR,EAAMwb,MAAM,KAAKnZ,KAAI,SAACmc,GAAM,OAAK3C,SAAS2C,EAAQ,GAAG,KAErFxe,CACX,EACA,oBAAqB,SAACA,GAAK,OAAK4S,GAAeX,aAAa4J,SAAS7b,EAAO,IAAI,EAChF,kBAAmB,SAACA,GAAK,OAAK4S,GAAeT,WAAW0J,SAAS7b,EAAO,IAAI,EAC5E,wBAAyB,SAACA,GAAK,OAAK4S,GAAeR,iBAAiByJ,SAAS7b,EAAO,IAAI,EACxF,iBAAkB,SAACA,GAAK,OAAK4S,GAAeP,UAAUwJ,SAAS7b,EAAO,IAAI,EAC1E,yBAA0B,SAACA,GAAK,OAAKme,GAASvL,GAAeN,kBAAmBtS,EAAM,EACtF,oBAAqB,SAACA,GAAK,OAAK4S,GAAeJ,aAAaqJ,SAAS7b,EAAO,IAAI,GAGpF,SAASme,GAASQ,EAAM3e,GACpB,OAAI0e,GAAW1e,GACJ2e,EAAK3e,EAAMwb,MAAM,MAErBxb,CACX,CASA,SAAS0e,GAAW1e,GAChB,MAAO,iBAAiBoT,KAAKpT,EACjC,CAEA,SAASoe,GAAkBpe,GACvB,I,EAAuD4e,GAAA,E,4CAAhB5e,EAAMwb,MAAM,O,mzBAA5CqD,EAAaD,EAAA,GAAEE,EAAaF,EAAA,GACnC,QAAuBve,IAAlBwe,QAAmDxe,IAAlBye,EAA8B,CAChE,IAAMC,EAAUC,WAAWH,GACrBI,EAAUD,WAAWF,GACrB7L,EAAM6L,EAAcnD,OAAOmD,EAAcxe,OAAS,GACxD,IAAMoR,OAAOwN,MAAMH,KAAerN,OAAOwN,MAAMD,GAC3C,MAAO,IAAMF,EAAUE,EAAU,IAAMhM,CAE/C,CACA,OAAOjT,CACX,C,gVC1FA,I,GAAA,IACI6X,KAGJ,SAAcpW,EAAU0d,GACpB,IAAMxJ,EAAO,CAAC,EAEd,GAAwB,iBAAblU,EAEP,OADA2d,GAASzJ,EAAMlU,GACRkU,EAGX,I,EAA0E0J,G,EAuB9E,SAA+B5d,EAAU0d,GACrC,GAAsB,IAAlBA,EAAO7e,OACP,MAAO,GAGX,IAAMgf,EAAiB,CAACC,GAAc9d,EAAU0d,EAAO5Y,MAAM,EAAG,KAKhE,OAJI4Y,EAAO7e,OAAS,GAChBgf,EAAe1d,KAAK2d,GAAc9d,EAAU0d,EAAO5Y,MAAM,KAGtD+Y,CACX,CAlCuCE,CAAsB/d,EAAU0d,GAAO,E,i2BAAnEM,EAAWJ,EAAA,GAAEK,EAAWL,EAAA,GAEzBM,EAAkBP,GAASzJ,EAAM8J,GAEvC,GAAIC,EAAa,CACb,IAAME,EAAkBR,GAASzJ,EAAM+J,GAElCC,GAAoBC,WAKdjK,EAAKkK,KACZT,GAASzJ,EAAM4J,GAAc9d,EAAU0d,IAE/C,CAEA,OAAOxJ,CACX,GAkBA,SAAS4J,GAAc9d,EAAU0d,GAK7B,IAJA,IAAMW,EAAcX,EAAO3b,QAAO,SAACrB,EAAM4d,GAAK,OAAK5d,EAAO4d,EAAMzf,MAAM,GAAE,GAClE0f,EAAiB,IAAIvc,WAAWqc,GAClC7e,EAAS,EAEJU,EAAI,EAAGA,EAAIwd,EAAO7e,OAAQqB,IAAK,CACpC,IAAMoe,EAAQZ,EAAOxd,GACf4E,EAAQ9E,EAASvB,OAAOqG,MAAMwZ,EAAMlW,WAAYkW,EAAMlW,WAAakW,EAAMzf,QAC/E0f,EAAeC,IAAI,IAAIxc,WAAW8C,GAAQtF,GAC1CA,GAAU8e,EAAMzf,MACpB,CAEA,OAAO,IAAIL,SAAS+f,EAAe9f,OACvC,CAEA,SAASkf,GAASzJ,EAAMuK,GACpB,IACI,IAAAC,EAWR,SAAqBD,GACjB,IAAME,EC7EV,WACI,GAAyB,oBAAdC,UACP,OAAO,IAAIA,UAEf,IAEI,OAAO,IAAKC,QAAwB,kBAA2B,WAAE,CAC7DC,aAAc,CACVjf,MAAO,WACH,MAAUP,MAAM,aACpB,IAGZ,CAAE,MAAOO,GACL,MACJ,CACJ,CD6DsB+e,GAClB,IAAKD,EAED,MADAI,QAAQC,KAAK,mFACH1f,QAGd,IAAM2f,EAAqC,iBAAlBR,EAA6BA,EAAgB1e,EAAsB0e,EAAe,EAAGA,EAAclf,YACtH2f,EAAMP,EAAUQ,gBAA8BF,EAanCG,QAAQ,wBAAyB,MAAMA,QAAQ,8BAA+B,MAb/B,mBAEhE,GAAqC,gBAAjCF,EAAIG,gBAAgBC,SACpB,MAAUhgB,MAAM4f,EAAIG,gBAAgBE,aAGxC,MAAO,CACHL,IAAAA,EACAM,IAAKP,EAEb,CA7B2BQ,CAAYhB,GAAxBS,EAAGR,EAAHQ,IAAKM,EAAGd,EAAHc,IAKZ,OAJAtL,EAAKkK,MAAQlK,EAAKkK,MAAQ,IAAMoB,EAGhCve,EAAaiT,EAAMwL,GAAeC,GAFtBC,GAAOV,GAEoC,KAChD,CACX,CAAE,MAAOrf,GACL,OAAO,CACX,CACJ,CA0BA,SAAS+f,GAAOC,GACZ,IAAK,IAAI3f,EAAI,EAAGA,EAAI2f,EAAKC,WAAWjhB,OAAQqB,IAAK,CAC7C,GAAmC,cAA/B2f,EAAKC,WAAW5f,GAAG0V,QACnB,OAAOgK,GAAOC,EAAKC,WAAW5f,IAElC,GAAmC,YAA/B2f,EAAKC,WAAW5f,GAAG0V,QACnB,OAAOiK,EAAKC,WAAW5f,EAE/B,CAEA,MAAUZ,OACd,CAEA,SAASqgB,GAAgBE,GAAyB,IAuBtBE,EAvBGC,EAAS9e,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,GAAG,EACjC4e,EAYV,SAAuBD,GAGnB,IAFA,IAAMI,EAAW,GAER/f,EAAI,EAAGA,EAAI2f,EAAKC,WAAWjhB,OAAQqB,IACxC+f,EAAS9f,KAAK0f,EAAKC,WAAW5f,IAGlC,OAAO+f,CACX,CApBuBC,CAAcL,GAEjC,OAqByB,KADDE,EApBDD,GAqBTjhB,QAAwC,UAAtBkhB,EAAM,GAAGT,SApBjCU,EACO,CAAC,EAsBpB,SAAsBH,GAClB,OAAOA,EAAKM,SAChB,CAtBeC,CAAaN,EAAW,IAwBvC,SAA8BC,GAC1B,IAAME,EAAW,CAAC,EAiBlB,OAfAF,EAAMM,SAAQ,SAACR,GACX,GAiBR,SAAmBA,GACf,OAAQA,EAAKP,UAAgC,UAAlBO,EAAKP,QACpC,CAnBYgB,CAAUT,GAAO,CACjB,IAAMU,EAoBlB,SAA4BV,GACxB,MAAO,CACHjJ,WAAY4J,GAAcX,GAC1BthB,MAAOohB,GAAgBE,GAE/B,CAzBgCY,CAAmBZ,QAEPjhB,IAA5BqhB,EAASJ,EAAKP,WACTxd,MAAMwP,QAAQ2O,EAASJ,EAAKP,aAC7BW,EAASJ,EAAKP,UAAY,CAACW,EAASJ,EAAKP,YAE7CW,EAASJ,EAAKP,UAAUnf,KAAKogB,IAE7BN,EAASJ,EAAKP,UAAYiB,CAElC,CACJ,IAEON,CACX,CAxCWS,CAAqBZ,EAChC,CAoDA,SAASU,GAAcG,GAGnB,IAFA,IAAM/J,EAAa,CAAC,EAEX1W,EAAI,EAAGA,EAAIygB,EAAQ/J,WAAW/X,OAAQqB,IAC3C0W,EAAW+J,EAAQ/J,WAAW1W,GAAGof,UAAY/J,mBAAmBC,OAAOmL,EAAQ/J,WAAW1W,GAAG3B,QAGjG,OAAOqY,CACX,CAEA,SAAS8I,GAAekB,GACpB,IAAM1M,EAAO,CAAC,EAEd,GAAyB,iBAAd0M,EACP,OAAOA,EAGX,IAAK,IAAMtB,KAAYsB,EAAW,CAC9B,IAAIb,EAAQa,EAAUtB,GAEjBxd,MAAMwP,QAAQyO,KACfA,EAAQ,CAACA,IAGbA,EAAMM,SAAQ,SAACR,GACX5e,EAAaiT,EAAM2M,GAA0BhB,EAAKjJ,aACxB,WAAtBjY,GAAOkhB,EAAKthB,QACZ0C,EAAaiT,EAAM4M,GAAwBjB,EAAKthB,OAExD,GACJ,CAEA,OAAO2V,CACX,CAEA,SAAS2M,GAA0BjK,GAC/B,IAAM1C,EAAO,CAAC,EAEd,IAAK,IAAMhD,KAAQ0F,EACf,IACQmK,GAAe7P,KACfgD,EAAK8M,GAAa9P,IAAS,CACvB3S,MAAOqY,EAAW1F,GAClB0F,WAAY,CAAC,EACbzH,YAAa8R,GAAerK,EAAW1F,GAAOA,IAG1D,CAAE,MAAOrR,GACL,CAIR,OAAOqU,CACX,CAEA,SAAS6M,GAAe7P,GACpB,MAAiB,kBAATA,IAA+BgQ,GAAsBhQ,EACjE,CAEA,SAASgQ,GAAsBhQ,GAC3B,MAA8B,UAAvBA,EAAK6I,MAAM,KAAK,EAC3B,CAEA,SAASiH,GAAa9P,GAClB,MAAI,mCAAmCS,KAAKT,GACjC,gBAEJA,EAAK6I,MAAM,KAAK,EAC3B,CAEA,SAASkH,GAAe1iB,GAAyB,IAAlB2S,EAAIhQ,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,QAAGtC,EAClC,GAAIkD,MAAMwP,QAAQ/S,GAAQ,CACtB,IAAM4iB,EAoBd,SAA+B5iB,GAC3B,OAAOA,EAAMqC,KAAI,SAACwgB,GACd,YAAmBxiB,IAAfwiB,EAAK7iB,MACE0iB,GAAeG,EAAK7iB,OAExB0iB,GAAeG,EAC1B,IAAGpgB,KAAK,KACZ,CA3BiCqgB,CAAsB9iB,GAC/C,OAAK2S,GAAuC,mBAAtBoQ,GAAYpQ,GACvBoQ,GAAYpQ,GAAM3S,EAAO4iB,GAE7BA,CACX,CACA,GAAqB,WAAjBxiB,GAAOJ,GACP,OAsBR,SAAgCA,GAC5B,IAAMgjB,EAAe,GAErB,IAAK,IAAM7jB,KAAOa,EACdgjB,EAAaphB,KAAK,GAADsD,OAAI+d,GAAgB9jB,GAAI,MAAA+F,OAAKwd,GAAe1iB,EAAMb,GAAKa,SAG5E,OAAOgjB,EAAavgB,KAAK,KAC7B,CA9BeygB,CAAuBljB,GAGlC,IACI,OAAK2S,GAAuC,mBAAtBoQ,GAAYpQ,GACvBoQ,GAAYpQ,GAAM3S,GAEtBgX,mBAAmBC,OAAOjX,GACrC,CAAE,MAAOsB,GACL,OAAOtB,CACX,CACJ,CAqBA,SAASijB,GAAgB9jB,GACrB,MAAY,cAARA,EACO,cAEC,cAARA,EACO,iBAEC,gBAARA,EACO,iBAEC,eAARA,EACO,oBAEC,gBAARA,EACO,gBAEC,gBAARA,EACO,mBAEC,cAARA,EACO,mBAEC,cAARA,EACO,iBAEJA,CACX,CAEA,SAASojB,GAAwBY,GAC7B,IAAMxN,EAAO,CAAC,EAEd,IAAK,IAAMhD,KAAQwQ,EACf,IACSR,GAAsBhQ,KACvBgD,EAAK8M,GAAa9P,IAASyQ,GAAeD,EAASxQ,GAAOA,GAElE,CAAE,MAAOrR,GACL,CAIR,OAAOqU,CACX,CAEA,SAASyN,GAAe9B,EAAM3O,GAC1B,OA2BJ,SAAwB2O,GACpB,OAAO/d,MAAMwP,QAAQuO,EACzB,CA7BQ+B,CAAe/B,GA+BvB,SAAiCA,EAAM3O,GACnC,OAAO2Q,GAAuBhC,EAAKA,EAAKhhB,OAAS,GAAIqS,EACzD,CAhCe4Q,CAAwBjC,EAAM3O,GAoB7C,SAA4B2O,GACxB,MAA6C,aAArCA,EAAKjJ,WAAW,kBACM,iBAAfiJ,EAAKthB,OACU,KAAtBshB,EAAKthB,MAAMwjB,MACvB,CAtBQC,CAAmBnC,GACZ,CAACthB,MAAO,GAAIqY,WAAY,CAAC,EAAGzH,YAAa,IAEhD8S,GAA8BpC,GACvBqC,GAAgCrC,EAAM3O,GAE7CiR,GAAiCtC,GAC1BuC,GAAmCvC,EAAM3O,GAEhDmR,GAAmBxC,GACZyC,GAA4BzC,EAAM3O,GAiHjD,SAAiB2O,GACb,YAAqCjhB,IAA9B2jB,GAAc1C,EAAKthB,MAC9B,CAjHQ+S,CAAQuO,GAuHhB,SAA0BA,EAAM3O,GAC5B,IAAIsR,EAAQD,GAAc1C,EAAKthB,OAAOA,MAAM,UACtCqY,EAAa6L,GAAoB5C,GACjCthB,EAAQ,GAYd,YAVcK,IAAV4jB,EACAA,EAAQ,GACA1gB,MAAMwP,QAAQkR,KACtBA,EAAQ,CAACA,IAGbA,EAAMnC,SAAQ,SAACe,GACX7iB,EAAM4B,KAUd,SAAyBihB,GACrB,OAAIa,GAA8Bb,GACvBc,GAAgCd,GAEvCe,GAAiCf,GAC1BgB,GAAmChB,GAAM7iB,MAEhD8jB,GAAmBjB,GACZkB,GAA4BlB,GAAM7iB,MAGtCsjB,GAAuBT,EAClC,CAtBmBsB,CAAgBtB,GAC/B,IAEO,CACH7iB,MAAAA,EACAqY,WAAAA,EACAzH,YAAa8R,GAAe1iB,EAAO2S,GAE3C,CA1IeyR,CAAiB9C,EAAM3O,GAE3B2Q,GAAuBhC,EAAM3O,EACxC,CAgBA,SAAS+Q,GAA8BpC,GACnC,MAA8C,aAArCA,EAAKjJ,WAAW,uBAAiEhY,IAA5BihB,EAAKthB,MAAM,mBAC9BK,IAAlCihB,EAAKthB,MAAM,yBAA2FK,IAArDihB,EAAKthB,MAAM,mBAAmBA,MAAM,YAClG,CAEA,SAAS2jB,GAAgCrC,EAAM3O,GAC3C,IAAM0F,EAAa6L,GAAoB5C,QAEDjhB,IAAlCihB,EAAKthB,MAAM,qBACXshB,EAAOA,EAAKthB,MAAM,oBAGtB0C,EAAa2V,EAAY6L,GAAoB5C,GAuBjD,SAAuCA,GACnC,IAAMjJ,EAAa,CAAC,EAEpB,IAAK,IAAM1F,KAAQ2O,EAAKthB,MACN,cAAT2S,GAA2BgQ,GAAsBhQ,KAClD0F,EAAWoK,GAAa9P,IAAS2O,EAAKthB,MAAM2S,GAAM3S,OAI1D,OAAOqY,CACX,CAjCwDgM,CAA8B/C,IAElF,IAAMthB,EAiCV,SAAuBshB,GACnB,OAAOgD,GAAYhD,EAAKthB,MAAM,eAAiBshB,EAAKthB,MAAM,aAAaA,KAC3E,CAnCkBukB,CAAcjD,GAE5B,MAAO,CACHthB,MAAAA,EACAqY,WAAAA,EACAzH,YAAa8R,GAAe1iB,EAAO2S,GAE3C,CAEA,SAASuR,GAAoB5C,GACzB,IAAMjJ,EAAa,CAAC,EAEpB,IAAK,IAAM1F,KAAQ2O,EAAKjJ,WACN,kBAAT1F,GAAuC,iBAATA,GAA8BgQ,GAAsBhQ,KACnF0F,EAAWoK,GAAa9P,IAAS2O,EAAKjJ,WAAW1F,IAIzD,OAAO0F,CACX,CAkBA,SAASuL,GAAiCtC,GACtC,MAA6C,aAArCA,EAAKjJ,WAAW,uBACmBhY,IAAlCihB,EAAKthB,MAAM,yBAA2FK,IAArDihB,EAAKthB,MAAM,mBAAmBA,MAAM,YAClG,CAEA,SAAS6jB,GAAmCvC,EAAM3O,GAC9C,IAAMoD,EAAM,CACR/V,MAAO,CAAC,EACRqY,WAAY,CAAC,GAajB,YAVsChY,IAAlCihB,EAAKthB,MAAM,qBACX0C,EAAaqT,EAAI/V,MAAOsiB,GAA0BhB,EAAKthB,MAAM,mBAAmBqY,aAChF3V,EAAaqT,EAAIsC,WAAY6L,GAAoB5C,IACjDA,EAAOA,EAAKthB,MAAM,oBAGtB0C,EAAaqT,EAAI/V,MAAOuiB,GAAwBjB,EAAKthB,QAErD+V,EAAInF,YAAc8R,GAAe3M,EAAI/V,MAAO2S,GAErCoD,CACX,CAEA,SAAS+N,GAAmBxC,GACxB,OAA2C,IAAnCjiB,OAAOmlB,KAAKlD,EAAKthB,OAAOM,aACQD,IAAhCihB,EAAKjJ,WAAW,kBACoBhY,IAApCihB,EAAKjJ,WAAW,eAC5B,CAEA,SAAS0L,GAA4BzC,EAAM3O,GACvC,IAAM3S,EAAQsiB,GAA0BhB,EAAKjJ,YAE7C,MAAO,CACHrY,MAAAA,EACAqY,WAAY,CAAC,EACbzH,YAAa8R,GAAe1iB,EAAO2S,GAE3C,CAMA,SAASqR,GAAchkB,GACnB,OAAOA,EAAM,YAAcA,EAAM,YAAcA,EAAM,UACzD,CAsCA,SAASsjB,GAAuBhC,EAAM3O,GAClC,IAAM3S,EAAQskB,GAAYhD,IAASH,GAAeG,EAAKthB,OAEvD,MAAO,CACHA,MAAAA,EACAqY,WAAY6L,GAAoB5C,GAChC1Q,YAAa8R,GAAe1iB,EAAO2S,GAE3C,CAEA,SAAS2R,GAAYhD,GACjB,OAAOA,EAAKjJ,YAAciJ,EAAKjJ,WAAW,eAC9C,C,ouBEpfO,IAcP,IAqBI,IAAQ,CACJ1F,KAAM,kBACN/B,YAqHR,SAAsBnP,GAKlB,IAJA,IACM4Y,EAAQ,CAAC,EACToK,EAAQ,GAELxjB,EAAS,EAAGA,EAASQ,EAAST,WAAYC,GAAUyjB,GAA8B,CACvF,IAAMtW,EAAOiH,GAAMZ,WAAWhT,EAAUR,GACpC0jB,GAAkBvW,KACbiM,EAAMjM,KACPiM,EAAMjM,GAAQuW,GAAkBvW,GAAMwC,aAE1C6T,EAAM7iB,KAAK,CACPwM,KAAAA,EACAwW,KAAMD,GAAkBvW,GAAMwW,KAAKnjB,EAAUR,EAZvC,KAelB,CACA,OAAO4jB,KAAKC,UAAU,CAACzK,MAAAA,EAAOoK,MAAAA,GAClC,GArII,KAAQ,CACJ9R,KAAM,mBACN/B,YAAW,SAACnP,GAER,O,EADmBS,EAA4BT,EAAU,GAAE,E,i2BAA5C,G,KAEnB,IAkIFkjB,IAAiB5Q,GAAAgR,GAAG,CAAC,EA7KA,EA8KkB,CACrCnU,YAAa,wBACbgU,KAAM,SAACnjB,EAAUR,GAAM,MAAK,CAACoU,GAAMZ,WAAWhT,EAAUR,GAAQ,IACnE8S,GAAAgR,GAhL6B,EAiLkB,CAC5CnU,YAAa,qCACbgU,KAAMI,KACTjR,GAAAgR,GAnL+B,EAoLkB,CAC9CnU,YAAa,uCACbgU,KAAMI,KACTjR,GAAAgR,GAtLoB,EAuLkB,CACnCnU,YAAa,sBACbgU,KAAM,SAACnjB,EAAUR,GAAM,MAAK,CAACoU,GAAMZ,WAAWhT,EAAUR,GAAQ,IACnE8S,GAAAgR,GAzL2B,EA0LkB,CAC1CnU,YAAa,mCACbgU,KAAMI,KACTjR,GAAAgR,GA5L6B,EA6LkB,CAC5CnU,YAAa,qCACbgU,KAAMI,KACTjR,GAAAgR,GA/LU,EAgMkB,CACzBnU,YAAa,iBACbgU,KAAM,iBAAM,EAAE,IACjB7Q,GAAAgR,GAjMkB,EAkMkB,CACjCnU,YAAa,oBACbgU,KAAM,SAACnjB,EAAUR,GAAM,MAAK,CAACoU,GAAMZ,WAAWhT,EAAUR,GAAQ,IACnE8S,GAAAgR,GAtMU,EAuMkB,CACzBnU,YAAa,YACbgU,KAmBR,SAAwBnjB,EAAUR,GAC9B,MAAO,CACH,CACIgkB,GAAoBxjB,EAAUR,EAAQ,GACtCgkB,GAAoBxjB,EAAUR,EAAS,EAAG,GAC1CgkB,GAAoBxjB,EAAUR,EAAS,EAAG,GAC1CgkB,GAAoBxjB,EAAUR,EAAS,GAAI,IAE/CgkB,GAAoBxjB,EAAUR,EAAS,GAAI,GAEnD,IA5BK8jB,IAGL,SAASC,GAAgBvjB,EAAUR,GAG/B,IAFA,IACM2jB,EAAO,GACJjjB,EAAI,EAAGA,EA5MK,GA4MiBA,GAFd,EAGpBijB,EAAKhjB,KAAKsjB,GAAezjB,EAAUR,EAASU,IAEhD,OAAOijB,CACX,CAEA,SAASM,GAAezjB,EAAUR,GAC9B,IAAMkkB,EAAWF,GAAoBxjB,EAAUR,EAAQ,GAEvD,MAAO,CADYgkB,GAAoBxjB,EAAUR,EAAS,EAAG,GACzCkkB,EACxB,CAcA,SAASF,GAAoBxjB,EAAUR,EAAQmkB,GAC3C,I/BhIqBrhB,E+BgIfya,EAASnJ,GAAMV,UAAUlT,EAAUR,GAEnCokB,EAAQ7G,IAAW,IAAQ,EAAI,GAAK,EACpC8G,GAAoB,WAAT9G,KAA0B,GAAK4G,EAC1CjH,EAAWK,EAAS3C,SAAS/X,EAAU,IAAK,GAAKshB,GAAc,GAErE,OAAOC,E/BjIJ,SAAyBthB,EAAQwhB,GACpC,OAAO1J,SAAS9X,EAAO8c,QAAQ,IAAK,I+BgI6E,G/B/H3G1R,KAAK2B,I+B+HsG,G/B/H1F/M,EAAOyX,MAAM,KAAK,IAAM,IAAIlb,OACvD,C+B8HkBklB,CAAgBF,EAAQzhB,SAAS,GAAK,K/BrIpCC,E+BqI2F,IAAlB,GAAKshB,G/BtIzErhB,E+BsI8Coa,EAASta,SAAS,I/BrIhCvD,QACpCyD,G+BqIrB,C,uGCpQA,QACI8T,KASJ,SAAc4N,EAAOhQ,GAKjB,IAJA,IAAMhU,EAAWN,EAAY,IAAIsC,WAAWgiB,GAAOvlB,QAC7CyV,EAAO,CAAC,EACV1U,EAAS,EAENA,EAASwkB,EAAMnlB,QAAQ,CAC1B,IAAMolB,EAAYlkB,EAAsBC,EAAUR,EAAQ0kB,IAC1D1kB,GAAU0kB,GACV,IAAMC,EAAQvQ,GAAMZ,WAAWhT,EAAUR,GAEzC4kB,EAA+BnI,GAAWjc,EAD1CR,GAAU6kB,IACHzO,EAAOwO,EAAPxO,QACPpW,GAD2B4kB,EAAXE,YAEhB,IAAMC,EAAe3Q,GAAMV,UAAUlT,EAAUR,GAE/C,GADAA,GAAUglB,GACNP,IAAcQ,GAAW,CACzB,IAAMC,EAAgBhlB,EAAYM,EAASvB,OAAQe,EAAQ+kB,GACrDjQ,EAAM,CACRE,GAAI2P,EACJ5lB,MAAOwB,EAAsB2kB,EAAe,EAAGH,IAEnD,GAAItP,GAASkP,GAAQ,CACjB,IACI7P,EAAInF,YAAc8F,GAASkP,GAAOhV,YAAYuV,EAClD,CAAE,MAAO7kB,GACLyU,EAAInF,YAAc,4BACtB,CACA+E,EAAK0B,GAAoBX,GAASkP,GAAOjT,MAAQoD,CACrD,MAAWN,IACPE,EAAK,aAADzQ,OAAc0gB,IAAW7P,EAErC,CACA9U,GAAU+kB,EAAgBA,EAAe,CAC7C,CAEA,OAAOrQ,CACX,GAzCMuQ,GAAY,OACZJ,GAAc,EACdG,GAAuB,EAEvBN,GAAiBO,GAAU5lB,OAuCjC,SAASod,GAAWjc,EAAUR,GAI1B,I,EAA0EmlB,GAAA,E,4CAA7ClkB,EAA4BT,EAAUR,K,mzBAA5DolB,EAAUD,EAAA,GACjB,MAAO,CACH/O,QAFqB+O,EAAA,GAGrBL,YAAa,EAAIM,GAAcA,EAAa,GAAM,EAAI,EAAI,GAElE,CC5DO,IAAMC,GAAU,CACnB,KAAQ,CACJ,KAAQ,mBAEZ,KAAQ,CACJ,KAAQ,iBAEZ,KAAQ,CACJ,KAAQ,gCAEZ,KAAQ,CACJ,KAAQ,sCAEZ,KAAQ,CACJ,KAAQ,uCAEZ,KAAQ,CACJ,KAAQ,eAIHC,GAAa,CACtB,EAAG,CACC,KAAQ,qBACR,MAAS,SAAC9kB,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,EACzE,YAAe,SAACjB,GAAK,OAAe,OAAVA,EAAiBwmB,GAAUxmB,GAAS,EAAE,GAEpE,EAAG,CACC,KAAQ,kBACR,MAAS,SAACyB,EAAUR,GAChB,OAAQQ,EAASI,SAASZ,GAAS4C,SAAS,IAAM,KAC/CpC,EAASI,SAASZ,EAAS,IAAM,GAAG4C,SAAS,IAAM,KACnDpC,EAASI,SAASZ,EAAS,GAAK,IAAI4C,SAAS,GACpD,GAEJ,GAAI,CACA,KAAQ,uBACR,MAAS,SAACpC,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,EACzE,YAAe,SAACjB,GACZ,OAAQA,EAAMymB,eACV,IAAK,OAAQ,MAAO,uBACpB,IAAK,OAAQ,MAAO,yBACpB,IAAK,OAAQ,MAAO,wBACpB,IAAK,OAAQ,MAAO,qBACpB,IAAK,OAAQ,MAAO,mBACpB,IAAK,OAAQ,MAAO,qBACpB,IAAK,OAAQ,MAAO,qBACpB,IAAK,OAAQ,MAAO,6BACpB,IAAK,OAAQ,MAAO,kCACpB,IAAK,OAAQ,MAAO,wBACpB,IAAK,OAAQ,MAAO,iCACpB,QAAS,OAAOzmB,EAExB,GAEJ,GAAI,CACA,KAAQ,cACR,MAAS,SAACyB,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,GAE7E,GAAI,CACA,KAAQ,mBACR,MAAS,SAACQ,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,GAE7E,GAAI,CACA,KAAQ,mBACR,MAAS,SAACQ,EAAUR,GAAM,OAwClC,SAAmBQ,EAAUR,GACzB,IAAMylB,EAAOjlB,EAASO,UAAUf,GAC1B0lB,EAAQllB,EAASO,UAAUf,EAAS,GAAK,EACzC2lB,EAAMnlB,EAASO,UAAUf,EAAS,GAClC4lB,EAAQplB,EAASO,UAAUf,EAAS,GACpCge,EAAUxd,EAASO,UAAUf,EAAS,GACtC6lB,EAAUrlB,EAASO,UAAUf,EAAS,IAC5C,OAAO,IAAI8lB,KAAKA,KAAKC,IAAIN,EAAMC,EAAOC,EAAKC,EAAO5H,EAAS6H,GAC/D,CAhDuCG,CAAUxlB,EAAUR,GAAQimB,aAAa,GAE5E,GAAI,CACA,KAAQ,gBACR,MAAS,SAACzlB,EAAUR,GAAM,OA8CXsF,EA9C8B9E,EAASvB,OAAOqG,MAAMtF,EAAQA,EAAS,GA+CjFsB,OAAOC,aAAaU,MAAM,KAAM,IAAIO,WAAW8C,IAD1D,IAAuBA,CA9CwE,GAE3F,GAAI,CACA,KAAQ,mBACR,MAAS,SAAC9E,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,EACzE,YAAe,SAACjB,GAAK,OAAKwmB,GAAUxmB,EAAM,GAE9C,GAAI,CACA,KAAQ,sBACR,MAAS,SAACyB,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,EACzE,YAAe,SAACjB,GAAK,OAAKwmB,GAAUxmB,EAAM,GAE9C,GAAI,CACA,KAAQ,sBACR,MAAS,SAACyB,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,GAE7E,GAAI,CACA,KAAQ,mBACR,MAAS,SAACQ,EAAUR,GAAM,OAAKQ,EAAS2K,UAAUnL,EAAO,EACzD,YAAe,SAACjB,GACZ,OAAQA,GACJ,KAAK,EAAG,MAAO,aACf,KAAK,EAAG,MAAO,wBACf,KAAK,EAAG,MAAO,aACf,KAAK,EAAG,MAAO,wBACf,QAAS,OAAOA,EAExB,GAGJ,GAAI,CACA,KAAQ,kBACR,MAAS,SAACyB,EAAUR,GAAM,OAAKO,EAAsBC,EAAUR,EAAQ,EAAE,IAkBjF,SAASulB,GAAUxmB,GACf,OAAQA,EAAMymB,eACV,IAAK,OAAQ,MAAO,QACpB,IAAK,OAAQ,MAAO,QACpB,IAAK,OAAQ,MAAO,YACpB,IAAK,OAAQ,MAAO,mBACpB,IAAK,MAAO,MAAO,mBACnB,IAAK,OAAQ,MAAO,WACpB,QAAS,OAAOzmB,EAExB,CCjIA,QACI6X,KAiBJ,SAAcpW,EAAU0lB,EAAS/b,GAC7B,OAAIA,GAAS+b,EAAQ,GAAG/iB,oBAAsBH,EAOlD,SAA2BxC,EAAU0lB,GACjC,OAAkCA,EAAQ,GAAG/iB,oBAUhBF,EATlB,CAAC,EAGLC,EADoB,IAAIlE,SAASwB,EAASvB,OAAOqG,MAAM4gB,EAAQ,GAAGlmB,OAAQkmB,EAAQ,GAAGlmB,OAASkmB,EAAQ,GAAG7mB,SAC1E6mB,EAAQ,GAAG/iB,kBAAmB,YAC/DU,KAAK8X,IACLwK,OAAM,iBAAO,CAAC,CAAC,GACxB,CAdeC,CAAkB5lB,EAAU0lB,GAoB3C,SAAiB1lB,EAAU0lB,GACvB,IAOI,IANA,IAAMG,EAAwBH,EAAQ3jB,QAAO,SAAC+jB,EAAKC,GAAG,OAAKD,EAAMC,EAAIlnB,MAAM,GAAE,GAEvEmnB,EAAgB,IAAIhkB,WAAW6jB,GACjCrmB,EAAS,EACPf,EAqBd,SAAmBuB,GACf,OAAI8B,MAAMwP,QAAQtR,GACN,IAAIxB,SAASwD,WAAWG,KAAKnC,GAAUvB,QAASA,OAErDuB,EAASvB,MACpB,CA1BuBwnB,CAAUjmB,GAAUkmB,EAAA,SAAA9Z,GAG/B,IAAM+Z,EAAeT,EAAQU,MAAK,SAACpU,GAAC,OAAKA,EAAE5F,cAAgBA,CAAW,IACtE,IAAK+Z,EACD,MAAU7mB,MAAM,aAADmE,OAAc2I,EAAW,eAG5C,IAAMzM,EAAOlB,EAAOqG,MAAMqhB,EAAa3mB,OAAQ2mB,EAAa3mB,OAAS2mB,EAAatnB,QAC5EwnB,EAAY,IAAIrkB,WAAWrC,GAEjCqmB,EAAcxH,IAAI6H,EAAW7mB,GAC7BA,GAAU6mB,EAAUxnB,MACxB,EAXSuN,EAAc,EAAGA,GAAesZ,EAAQ7mB,OAAQuN,IAAa8Z,EAAA9Z,GAatE,OAAO+O,GAAU,IAAI3c,SAASwnB,EAAcvnB,QAChD,CAAE,MAAOoB,GACL,MAAO,CAAC,CACZ,CACJ,CA1CWymB,CAAQtmB,EAAU0lB,EAC7B,GApBMa,GAAwB,GACxBC,GAAuB,IACvBC,GAAgB,OAChBC,GAAgB,OAChBC,GAAwC,OACxCC,GAAgB,OAChBC,GAAqB,OACrBC,GAA4B,GAmElC,SAASC,GAAYtoB,EAAQuoB,GACzB,OAAOvoB,EAAOI,OAASmoB,EAAkBF,EAC7C,CAEO,SAAS3L,GAAUnb,GACtB,IAAMvB,EAASuB,EAASvB,OAElBI,EAASmB,EAAS2K,YACxB,GAAI3K,EAAST,aAAeV,EACxB,MAAUS,MAAM,mCAGpB,GAAIU,EAASnB,OAAS0nB,GAClB,MAAUjnB,MAAM,yBAMpB,IAHA,IAAM4U,EAAO,CAAC,EAER+S,EAAiBrpB,OAAOmlB,KAAK+B,IAC1B5kB,EAAI,EAAGA,EAAI+mB,EAAepoB,OAAQqB,IAAK,CAC5C,IAAMV,EAASynB,EAAe/mB,GACxBgnB,EAAepC,GAAWtlB,GAC1BjB,EAAQ2oB,EAAa3oB,MAAMyB,EAAUoa,SAAS5a,EAAQ,KACxD2P,EAAc5Q,EACd2oB,EAAa/X,cACbA,EAAc+X,EAAa/X,YAAY5Q,IAG3C2V,EAAKgT,EAAahW,MAAQ,CACtB3S,MAAAA,EACA4Q,YAAAA,EAER,CAGA,GADkBgY,GAAc1oB,EAAOqG,MAAM,GAAI,OAC/B2hB,GACd,MAAUnnB,MAAM,kCAIpB,GA5CJ,SAAgCb,GAC5B,OAAOA,EAAOI,OAAU2nB,GAAuB,CACnD,CA0CQY,CAAuB3oB,GACvB,OAAOyV,EAMX,IAHA,IAAMc,EAAWhV,EAAS2K,UAAU,KAChCqc,EAAkB,IAEb9mB,EAAI,EAAGA,EAAI8U,EAAU9U,IAAK,CAC/B,GAAI6mB,GAAYtoB,EAAQuoB,GAEpB,OAAO9S,EAEX,IAAMmT,EAAetnB,EAAsBC,EAAUgnB,EAAiB,GAChEM,EAAYtnB,EAAS2K,UAAUqc,EAAkB,GACjDlL,EAAU9b,EAAS2K,UAAUqc,EAAkB,GAErD,GAAIM,EAAY7oB,EAAOI,OAEnB,OAAOqV,EAEX,IAAMa,EAAUhV,EAAsBC,EAAUsnB,EAAW,GAE3D,GAAIvS,IAAY2R,GAAe,CAC3B,IAAMa,EAAevnB,EAAS2K,UAAU2c,EAAY,GACpD,GAAIC,EAAezL,EAEf,OAAO5H,EAIXsT,GAAOtT,EAAMmT,EADDF,GAAc1oB,EAAOqG,MAAMwiB,EAAY,GAAIA,EAAYC,EAAe,KAEtF,MAAO,GAAIxS,IAAY4R,GAAuC,CAK1D,IAJA,IAAMc,EAAaznB,EAAS2K,UAAU2c,EAAY,GAC5CI,EAAa1nB,EAAS2K,UAAU2c,EAAY,IAC9C9nB,EAAS8nB,EAAY,GACnBK,EAAM,GACHC,EAAY,EAAGA,EAAYH,EAAYG,IAAa,CACzD,IAAMC,EAAe9nB,EAAsBC,EAAUR,EAAS,EAAG,GAC3DsoB,EAAc/nB,EAAsBC,EAAUR,EAAS,EAAG,GAC1DuoB,EAAa/nB,EAAS2K,UAAUnL,EAAS,GACzCwoB,EAAahoB,EAAS2K,UAAUnL,EAAS,GAEzC8D,EAAOhD,EAA6BN,EAAUsnB,EAAYU,EAAYD,GAC5EJ,EAAIxnB,KAAK,CAAC0nB,aAAAA,EAAcC,YAAAA,EAAaxkB,KAAAA,IACrC9D,GAAUkoB,CACd,CACA,GAAmB,IAAfD,EACAD,GAAOtT,EAAMmT,EAAcM,EAAI,GAAGrkB,UAC/B,CAEH,IADA,IAAM2kB,EAAS,CAAC,EACPC,EAAW,EAAGA,EAAWP,EAAI9oB,OAAQqpB,IAC1CD,EAAO,GAADxkB,OAAIkkB,EAAIO,GAAUL,aAAY,KAAApkB,OAAIkkB,EAAIO,GAAUJ,cAAiBH,EAAIO,GAAU5kB,KAEzFkkB,GAAOtT,EAAMmT,EAAcY,EAC/B,CACJ,MAAWlT,IAAY6R,GAEnBY,GAAOtT,EAAMmT,EADDF,GAAc1oB,EAAOqG,MAAMwiB,EAAY,EAAGA,EAAYxL,EAAU,KAErE/G,IAAY8R,IAEnBW,GAAOtT,EAAMmT,EADDF,GAAc1oB,EAAOqG,MAAMwiB,EAAY,EAAGA,EAAY,MAGtEN,GAAoC,EACxC,CAEA,OAAO9S,CACX,CAEA,SAASiT,GAAcriB,GACnB,OAAOhE,OAAOC,aAAaU,MAAM,KAAM,IAAIO,WAAW8C,GAC1D,CAEA,SAAS0iB,GAAOtT,EAAMmT,EAAc9oB,GAC5BsmB,GAAQwC,GACRnT,EAAK2Q,GAAQwC,GAAcnW,MAAQ,CAAC3S,MAAAA,EAAO4Q,YAAa5Q,GAExD2V,EAAKmT,GAAgB,CAAC9oB,MAAAA,EAAO4Q,YAAa5Q,EAElD,CCpMA,QACI6X,KAGJ,SAAcpW,EAAUsM,GACpB,MAAO,CACH,cAAe8L,GAAcpY,EAAUsM,GACvC,eAAgB6L,GAAenY,EAAUsM,GACzC,YAAa6b,GAAYnoB,EAAUsM,GACnC,aAAc8b,GAAapoB,EAAUsM,GACrC,YAAe+b,GAAeroB,EAAUsM,GACxC,OAAUgc,GAAUtoB,EAAUsM,GAC9B,UAAaic,GAAavoB,EAAUsM,GAE5C,GAEA,SAAS8L,GAAcpY,EAAUsM,GAI7B,KAAIA,EAHW,EACF,EAEwBtM,EAAST,YAA9C,CAIA,IAAMhB,EAAQqV,GAAMV,UAAUlT,EAAUsM,GACxC,MAAO,CACH/N,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CAEA,SAAS4Z,GAAenY,EAAUsM,GAI9B,KAAIA,EAHW,EACF,EAEwBtM,EAAST,YAA9C,CAIA,IAAMhB,EAAQqV,GAAMV,UAAUlT,EAAUsM,EAPzB,GAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CAEA,SAAS4pB,GAAYnoB,EAAUsM,GAI3B,KAAIA,EAHW,EACF,EAEwBtM,EAAST,YAA9C,CAIA,IAAMhB,EAAQqV,GAAMd,UAAU9S,EAAUsM,EAPzB,GAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,GALpB,CAOJ,CAEA,SAAS6pB,GAAapoB,EAAUsM,GAW5B,KAAIA,EAVW,EACF,EASwBtM,EAAST,YAA9C,CAIA,IAAMhB,EAAQqV,GAAMd,UAAU9S,EAAUsM,EAdzB,GAef,MAAO,CACH/N,MAAAA,EACA4Q,YAfgB,CAChB,EAAG,YACH,EAAG,MACH,EAAG,UACH,EAAG,uBACH,EAAG,kBAUsB5Q,IAAU,UALvC,CAOJ,CAEA,SAAS8pB,GAAeroB,EAAUsM,GAI9B,KAAIA,EAHW,GACF,EAEwBtM,EAAST,YAA9C,CAIA,IAAMhB,EAAQqV,GAAMd,UAAU9S,EAAUsM,EAPzB,IAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAuB,IAAV5Q,EAAc,kBAAoB,UALnD,CAOJ,CAEA,SAAS+pB,GAAUtoB,EAAUsM,GAIzB,KAAIA,EAHW,GACF,EAEwBtM,EAAST,YAA9C,CAIA,IAAMhB,EAAQqV,GAAMd,UAAU9S,EAAUsM,EAPzB,IAQf,MAAO,CACH/N,MAAAA,EACA4Q,YAAuB,IAAV5Q,EAAc,WAAa,UAL5C,CAOJ,CAEA,SAASgqB,GAAavoB,EAAUsM,GAQ5B,KAAIA,EAPW,GACF,EAMwBtM,EAAST,YAA9C,CAIA,IAAMhB,EAAQqV,GAAMd,UAAU9S,EAAUsM,EAXzB,IAYf,MAAO,CACH/N,MAAAA,EACA4Q,YAZoB,CACpB,EAAG,gBACH,EAAG,mBAU0B5Q,IAAU,UAL3C,CAOJ,C,6nBC3HA,QACI6X,KAYJ,SAAcpW,EAAU0M,EAAe/C,EAAOqK,GAG1C,IAFA,IAAME,EAAO,CAAC,EACRsU,EAAe,GACZtoB,EAAI,EAAGA,EAAIwM,EAAc7N,OAAQqB,IAAK,CAC3C,IAAAuoB,EAA+B/b,EAAcxM,GACvCwoB,EAAeC,GAAgB3oB,EADxByoB,EAANjpB,OAAcipB,EAAN5pB,OAAY4pB,EAAJ9b,KAC8ChD,GACrE,GAAI+e,aAAwBnlB,QACxBilB,EAAaroB,KAAKuoB,EAAarlB,MAAK,SAAAoO,GAAgC,IAA9BP,EAAIO,EAAJP,KAAM3S,EAAKkT,EAALlT,MAAO4Q,EAAWsC,EAAXtC,YAC/C,IACI,GAAIjE,EAAUrH,UAAY+kB,GAAe1X,EAAM3S,GAC3C,MAAO,CACHsqB,OAAQC,GAAK1S,KAAK2S,GAAcxqB,GAAQyqB,GAAahV,IAEtD,GAAI9I,EAAUpH,UAAYmlB,GAAe/X,EAAM3S,GAClD,MAAO,CACH2qB,OAAQC,GAAS/S,KAAK2S,GAAcxqB,GAAQ,EAAGyV,IAEhD,GAAI9C,EACP,OAAAoB,GAAA,GACKpB,EAAO,CACJ3S,MAAAA,EACA4Q,YAAAA,GAIhB,CAAE,MAAOtP,GACL,CAEJ,MAAO,CAAC,CACZ,SACG,CACH,IAAOqR,EAA4BwX,EAA5BxX,KAAM3S,EAAsBmqB,EAAtBnqB,MAAO4Q,EAAeuZ,EAAfvZ,YAChB+B,IACAgD,EAAKhD,GAAQ,CACT3S,MAAAA,EACA4Q,YAAAA,GAGZ,CACJ,CAEA,MAAO,CACHwO,SAAUzJ,EACVkV,gBAAiBZ,EAAa3pB,OAAS,EAAI0E,QAAQ8lB,IAAIb,QAAgB5pB,EAE/E,GAtDM0qB,GAAgB,gBAChBC,GAAoB,oBACpBC,GAAa,aACbC,GAA2B,2BAC3BC,GAAa,aACbC,GAAsC,EACtCC,GAA8B,EAC9BZ,GAAc,EAiDpB,SAASL,GAAgB3oB,EAAUR,EAAQX,EAAQ8N,EAAMhD,GAQrD,IAPA,IAGIkgB,EAHEC,EAAe,GACfC,EAAY,GACZC,EAAyB,GAE3BC,EAAeX,GACf3mB,EAAoBH,EAEftC,EAAI,EAAGA,EAAIrB,GAAUW,EAASU,EAAIF,EAAST,WAAYW,IAC5D,GAAI+pB,IAAiBV,GAArB,CAOO,GAAIU,IAAiBP,GAAY,CACpCG,EAAa,IAAIrrB,SAASwB,EAASvB,OAAOqG,MAAMtF,EAASU,EAAGV,EAASX,IACrE,KACJ,CACA,IAAMoD,EAAOjC,EAASI,SAASZ,EAASU,GAC3B,IAAT+B,EACAgoB,EAAeC,GAAgBvd,EAAMsd,GAC9BA,IAAiBX,GACxBQ,EAAa3pB,KAAK8B,GACXgoB,IAAiBT,GACxBO,EAAU5pB,KAAK8B,GACRgoB,IAAiBR,IACxBO,EAAuB7pB,KAAK8B,EAThC,MATIU,EAAoBwnB,GAAqB,CAACxd,KAAAA,EAAM3M,SAAAA,EAAUR,OAAQA,EAASU,IACvEyM,IAASzD,KACThJ,GAAKypB,IAETM,EAAeC,GAAgBvd,EAAMsd,GAkB7C,GAAItnB,IAAsBH,IAA4BmH,EAClD,MAAO,CAAC,EAEZ,IAAMygB,EAAyB1nB,EAAWmnB,EAAYlnB,GACtD,OAAIynB,aAAkC7mB,QAC3B6mB,EACF/mB,MAAK,SAACgnB,GAAuB,OAAKC,GAAaD,EAAyB1d,EAAMod,EAAWD,EAAa,IACtGnE,OAAM,kBAAM2E,GAAa,mCAAmCvQ,MAAM,IAAKpN,EAAMod,EAAWD,EAAa,IAEvGQ,GAAaF,EAAwBzd,EAAMod,EAAWD,EACjE,CAEA,SAASK,GAAoBI,GAA2B,IAAzB5d,EAAI4d,EAAJ5d,KAAM3M,EAAQuqB,EAARvqB,SAAUR,EAAM+qB,EAAN/qB,OAC3C,GAAImN,IAASzD,IACT,GAAIlJ,EAASI,SAASZ,KAAYoqB,GAC9B,OAAO5pB,EAASI,SAASZ,EAAS,QAEnC,GAAImN,IAASxD,GAChB,OAAOnJ,EAASI,SAASZ,GAE7B,OAAOgD,CACX,CAEA,SAAS0nB,GAAgBvd,EAAMsd,GAC3B,OAAIA,IAAiBX,IAAiB,CAACpgB,GAAWC,IAAWc,SAAS0C,GAC3D4c,GAEPU,IAAiBV,GACb5c,IAASzD,GACFsgB,GAEJE,GAEPO,IAAiBT,GACVC,GAEJC,EACX,CAEA,SAASY,GAAaT,EAAYld,EAAMod,EAAWD,GAC/C,IAAMvrB,EAiBV,SAAkBsrB,GACd,OAAIA,aAAsBrrB,SACfuB,EAAsB8pB,EAAY,EAAGA,EAAWtqB,YAEpDsqB,CACX,CAtBkBW,CAASX,GACvB,MAAO,CACH3Y,KAAMuZ,GAAQ9d,EAAMod,EAAWD,GAC/BvrB,MAAAA,EACA4Q,YAAaxC,IAASzD,GAAY+X,GAAe4I,GAActrB,EAEvE,CAEA,SAASksB,GAAQ9d,EAAMod,EAAWD,GAC9B,IAAM5Y,EAAO7Q,EAAwBypB,GACrC,GAAInd,IAAS1D,IAAkC,IAArB8gB,EAAUlrB,OAChC,OAAOqS,EAEX,IAAMwZ,EAAOrqB,EAAwB0pB,GACrC,MAAO,GAAPtmB,OAAUyN,EAAI,MAAAzN,OAAKinB,EAAI,IAC3B,CASA,SAASzJ,GAAe4I,GACpB,OAAOpN,GAAW1B,OAAO,QAAS8O,EACtC,CAEA,SAASjB,GAAe1X,EAAM3S,GAC1B,MAA8B,0BAAvB2S,EAAK8T,eAAuE,SAA1BzmB,EAAMqe,UAAU,EAAG,EAChF,CAEA,SAASqM,GAAe/X,EAAM3S,GAC1B,MAA8B,0BAAvB2S,EAAK8T,eAAuE,SAA1BzmB,EAAMqe,UAAU,EAAG,EAChF,CAEA,SAASmM,GAAcxqB,GAEnB,OAGJ,SAAuBosB,GAEnB,IADA,IAAM3qB,EAAW,IAAIxB,SAAS,IAAIosB,YAAYD,EAAI9rB,OAAS,IAClDqB,EAAI,EAAGA,EAAIyqB,EAAI9rB,OAAQqB,GAAK,EACjCF,EAAS6qB,SAAS3qB,EAAI,EAAGka,SAASuQ,EAAI/N,UAAU1c,EAAGA,EAAI,GAAI,KAE/D,OAAOF,CACX,CATW8qB,CADOvsB,EAAMwsB,MAAM,qCACC,GAAG3L,QAAQ,MAAO,IACjD,CChLA,QACIhJ,KAGJ,SAAcpW,EAAUgrB,GAGpB,IAFA,IAAM9W,EAAO,CAAC,EAELhU,EAAI,EAAGA,EAAI8qB,EAAansB,OAAQqB,IAAK,CAC1C,IAAM+qB,EAAcrX,GAAMV,UAAUlT,EAAUgrB,EAAa9qB,GAAK2I,IAC1De,EAAY7J,EAAsBC,EAAUgrB,EAAa9qB,GAAK4I,GAAuBF,IAEvFgB,IAAcR,IACd8K,EAAK,qBAAuBgX,GAAkBlrB,EAAUgrB,EAAa9qB,GAAI+qB,GACzE/W,EAAK,qBAAuBiX,GAAkBnrB,EAAUgrB,EAAa9qB,GAAI+qB,GACzE/W,EAAK,eAAiBkX,GAAcprB,EAAUgrB,EAAa9qB,GAAI+qB,IACxDrhB,IAAcP,KACrB6K,EAAK,eAAiBmX,GAAcrrB,EAAUgrB,EAAa9qB,GAAI+qB,GAEvE,CAEA,OAAO/W,CACX,GAEA,SAASgX,GAAkBlrB,EAAUsrB,EAAaL,GAI9C,GAAKM,GAAgBvrB,EAAUsrB,EAAaL,EAHzB,EACF,GAEjB,CAIA,IAAM1sB,EAAQqV,GAAMV,UAAUlT,EAAUsrB,EAAcviB,GAPnC,GASnB,MAAO,CACHxK,MAAAA,EACA4Q,YAAa,GAAK5Q,EANtB,CAQJ,CAEA,SAAS4sB,GAAkBnrB,EAAUsrB,EAAaL,GAI9C,GAAKM,GAAgBvrB,EAAUsrB,EAAaL,EAHzB,EACF,GAEjB,CAIA,IAAM1sB,EAAQqV,GAAMV,UAAUlT,EAAUsrB,EAAcviB,GAPnC,GASnB,MAAO,CACHxK,MAAAA,EACA4Q,YAAa,GAAK5Q,EANtB,CAQJ,CAEA,SAAS6sB,GAAcprB,EAAUsrB,EAAaL,GAI1C,GAAKM,GAAgBvrB,EAAUsrB,EAAaL,EAHzB,EACF,GAEjB,CAIA,IAAM1sB,EAAQqV,GAAMd,UAAU9S,EAAUsrB,EAAcviB,GAPnC,GASnB,MAAO,CACHxK,MAAAA,EACA4Q,YAAuB,IAAV5Q,EAAc,SAAW,UAN1C,CAQJ,CAEA,SAAS8sB,GAAcrrB,EAAUsrB,EAAaL,GAG1C,GAAKM,GAAgBvrB,EAAUsrB,EAAaL,EAAa,EAFnC,GAEtB,CAIA,IAAMhG,EAAOrR,GAAMZ,WAAWhT,EAAUsrB,EAAcviB,IAChDmc,EAAQtR,GAAMd,UAAU9S,EAAUsrB,EAAcviB,GAAwB,GACxEoc,EAAMvR,GAAMd,UAAU9S,EAAUsrB,EAAcviB,GAAwB,GACtEqc,EAAQxR,GAAMd,UAAU9S,EAAUsrB,EAAcviB,GAAwB,GACxEyU,EAAU5J,GAAMd,UAAU9S,EAAUsrB,EAAcviB,GAAwB,GAC1Esc,EAAUzR,GAAMd,UAAU9S,EAAUsrB,EAAcviB,GAAwB,GAEhF,MAAO,CACHxK,MAAO,CAAC0mB,EAAMC,EAAOC,EAAKC,EAAO5H,EAAS6H,GAC1ClW,YAAa,GAAF1L,OAAK+nB,GAAIvG,EAAM,GAAE,KAAAxhB,OAAI+nB,GAAItG,EAAO,GAAE,KAAAzhB,OAAI+nB,GAAIrG,EAAK,GAAE,KAAA1hB,OAAI+nB,GAAIpG,EAAO,GAAE,KAAA3hB,OAAI+nB,GAAIhO,EAAS,GAAE,KAAA/Z,OAAI+nB,GAAInG,EAAS,IAXrH,CAaJ,CAEA,SAASkG,GAAgBvrB,EAAUsrB,EAAaL,EAAa3D,EAAWxL,GACpE,OAAOwL,EAAYxL,GAAWmP,GAAeK,EAAcviB,GAAwBue,EAAYxL,GAAW9b,EAAST,UACvH,CAEA,SAASisB,GAAIzO,EAAQrc,GACjB,MAAO,GAAP+C,OAAU,IAAIgoB,OAAO/qB,GAAQ,GAAKqc,GAAQle,SAAO4E,OAAGsZ,EACxD,CCnGA,QACI3G,KAOJ,SAAcpW,EAAUsrB,GACpB,IAAMpX,EAAO,CAAC,EAERsD,EAAQ5D,GAAMd,UAAU9S,EAAUsrB,GAOxC,OALApX,EAAY,MAQhB,SAAkBsD,GACd,IAAMjZ,EAAgB,GAARiZ,EACd,MAAO,CACHjZ,MAAOA,EAAQ,EAAI,EACnB4Q,YAAa5Q,EAAQ,MAAQ,KAErC,CAdoBmtB,CAASlU,GACzBtD,EAAgB,UAepB,SAAsBsD,GAClB,IAAMjZ,EAAgB,EAARiZ,EACd,MAAO,CACHjZ,MAAOA,EAAQ,EAAI,EACnB4Q,YAAa5Q,EAAQ,MAAQ,KAErC,CArBwBotB,CAAanU,GACjCtD,EAAiB,WAAI0X,GAAkB5rB,EAAUsrB,EAAcO,IAC/D3X,EAAkB,YAAI0X,GAAkB5rB,EAAUsrB,EAAcQ,IAEzD5X,CACX,GAfM2X,GAAqB,EACrBC,GAAsB,EAgC5B,SAASF,GAAkB5rB,EAAUR,GAEjC,IAAMjB,EAAQqV,GAAMd,UAAU9S,EAAUR,GAClC,IAAMoU,GAAMd,UAAU9S,EAAUR,EAAS,GACzC,MAAYoU,GAAMd,UAAU9S,EAAUR,EAAS,GAC/C,EAEN,MAAO,CACHjB,MAAAA,EACA4Q,YAAa5Q,EAAQ,KAE7B,CC7CA,QACI6X,KAGJ,SAAcpW,GACV,MAAO,CACH,cAAe+rB,GAAc/rB,GAC7B,cAAeoY,GAAcpY,GAC7B,eAAgBmY,GAAenY,GAC/B,mBAAoBgsB,GAAkBhsB,GACtC,iBAAkBmoB,GAAYnoB,GAC9B,yBAA0BisB,GAAmBjsB,GAErD,GAEA,SAAS+rB,GAAc/rB,GAInB,KAAIgY,EAAgBhY,EAAST,YAA7B,CAIA,IAAMhB,EAAQwB,EAAsBC,EAPrB,EACF,GAOb,MAAO,CACHzB,MAAAA,EACA4Q,YAAa5Q,EALjB,CAOJ,CAEA,SAAS6Z,GAAcpY,GAInB,KAAIgY,EAAgBhY,EAAST,YAA7B,CAIA,IAAMhB,EAAQyB,EAASO,UAPR,EAO0B,GACzC,MAAO,CACHhC,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CAEA,SAAS4Z,GAAenY,GAIpB,KAAIgY,GAAgBhY,EAAST,YAA7B,CAIA,IAAMhB,EAAQyB,EAASO,UAPR,EAO0B,GACzC,MAAO,CACHhC,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,MALzB,CAOJ,CAEA,SAASytB,GAAkBhsB,GAIvB,KAAIgY,GAAgBhY,EAAST,YAA7B,CAIA,IACMhB,GAAqB,IADTyB,EAASI,SAPZ,OAQ4B,EAC3C,MAAO,CACH7B,MAAAA,EACA4Q,YAAuB,IAAV5Q,EAAc,MAAQ,KANvC,CAQJ,CAEA,SAAS0tB,GAAmBjsB,GAIxB,KAAIgY,GAAgBhY,EAAST,YAA7B,CAIA,IACMhB,EAA2C,IAArB,IADVyB,EAASI,SAPZ,OAQ6B,GAC5C,MAAO,CACH7B,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,KAAAkF,OAAc,IAAVlF,EAAc,MAAQ,QANnD,CAQJ,CAEA,SAAS4pB,GAAYnoB,GAIjB,KAAIgY,GAAgBhY,EAAST,YAA7B,CAIA,IACMhB,EAAmC,GAAd,EADTyB,EAASI,SAPZ,KASf,MAAO,CACH7B,MAAAA,EACA4Q,YAAa,GAAF1L,OAAKlF,EAAK,KAAAkF,OAAc,IAAVlF,EAAc,MAAQ,QANnD,CAQJ,CC5GA,IAAM2tB,GAAmB,CAAC,EAAG,EAAG,IAEhC,IACInuB,IAGJ,SAAaiC,EAAUmsB,EAAehnB,GAClC,IAiBsB+O,EAjBDiY,UAkBiBvtB,IAArBsV,EAAKkY,aAA+BF,GAAiBjiB,SAASiK,EAAKkY,YAAY7tB,SACzF2V,EAAKmY,uBAAyBnY,EAAKmY,sBAAsB9tB,OACzD2V,EAAKoY,6BAA+BpY,EAAKoY,4BAA4B/tB,MApBvC,CACjC4tB,EAAcxf,KAAO,aACrB,IAAMnN,EAAS2F,EAAmBgnB,EAAcE,sBAAsB9tB,MACtE4tB,EAAcvqB,MAAQ5B,EAASvB,OAAOqG,MAAMtF,EAAQA,EAAS2sB,EAAcG,4BAA4B/tB,OACvG6C,EAAU+qB,EAAe,UAAU,WAC/B,OAAOxqB,EAAepE,KAAKqE,MAC/B,GACJ,CAUJ,IAA0BsS,EAHtB,OAAOiY,CACX,GCpBA,SAASI,GAAqBC,GAC1BjvB,KAAK2T,KAAO,uBACZ3T,KAAKivB,QAAUA,GAAW,eAC1BjvB,KAAKkvB,MAAantB,QAASmtB,KAC/B,CAEAF,GAAqBruB,UAAgBoB,QAErC,QACIitB,qBAAAA,ICcJ,IACIG,KAAAA,GACAC,SAAAA,GACAC,OAAQC,IAGCD,GAASC,GAEf,SAASH,GAAK/sB,GAAoB,IA6HjBmtB,EA7HGC,EAAO7rB,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClC,OAWJ,SAAyBvB,GACrB,MAAuB,iBAATA,CAClB,CAbQqtB,CAAgBrtB,IAChBotB,EAAQpjB,MAAQ,EAcxB,SAAkBsjB,EAAUF,GACxB,MAAI,YAAYpb,KAAKsb,GACI,oBAAVC,MAcnB,SAAyBC,GAAoB,IAAdtuB,GAAcqC,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAXrC,OACrBkuB,EAAU,CAACK,OAAQ,OAMzB,OALInd,OAAOC,UAAUrR,IAAWA,GAAU,IACtCkuB,EAAQM,QAAU,CACdC,MAAO,WAAF7pB,OAAa5E,EAAS,KAG5BquB,MAAMC,EAAKJ,GAAS1pB,MAAK,SAACkqB,GAAQ,OAAKA,EAASnqB,aAAa,GACxE,CArBmBoqB,CAAgBP,EAAUF,GAuB7C,SAA2BI,GAAoB,IAAdtuB,GAAcqC,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAXrC,OAC7B,OAAO,IAAI0E,SAAQ,SAACkqB,EAASjqB,GACzB,IAAMupB,EAAU,CAAC,EACb9c,OAAOC,UAAUrR,IAAWA,GAAU,IACtCkuB,EAAQM,QAAU,CACdC,MAAO,WAAF7pB,OAAa5E,EAAS,KAInC,IAAMd,EAed,SAAwBovB,GACpB,MAAI,cAAcxb,KAAKwb,GACZtO,QAAwB,SAAS9gB,IAErC8gB,QAAwB,QAAQ9gB,GAC3C,CApBoB2vB,CAAeP,GAC3BpvB,EAAIovB,EAAKJ,GAAS,SAACQ,GACf,GAAKA,EAASI,YAAc,KAASJ,EAASI,YAAc,IAAM,CAC9D,IAAMhuB,EAAO,GACb4tB,EAASK,GAAG,QAAQ,SAACtP,GAAK,OAAK3e,EAAKQ,KAAK+B,OAAOC,KAAKmc,GAAO,IAC5DiP,EAASK,GAAG,SAAS,SAAC/tB,GAAK,OAAK2D,EAAO3D,EAAM,IAC7C0tB,EAASK,GAAG,OAAO,kBAAMH,EAAQvrB,OAAOuB,OAAO9D,GAAM,GACzD,MACI6D,EAAO,yBAADC,OAA0B8pB,EAASI,WAAU,KAAAlqB,OAAI8pB,EAASM,gBAChEN,EAASO,QAEjB,IAAGF,GAAG,SAAS,SAAC/tB,GAAK,OAAK2D,EAAO3D,EAAM,GAC3C,GACJ,CA1CekuB,CAAkBd,EAAUF,GAmD3C,SAAmBE,GACf,MAAO,0BAA0Btb,KAAKsb,EAC1C,CAlDQe,CAAUf,GACH1pB,QAAQkqB,Q1C2ChB,SAAyBQ,GAC5B,IAAMtuB,EAAOsuB,EAAQrR,UAAUqR,EAAQ9gB,QAAQ,KAAO,GAEtD,IAAoC,IAAhC8gB,EAAQ9gB,QAAQ,WAAmB,CACnC,GAAoB,oBAAT+gB,KACP,OAAOlsB,WAAWG,KAAK+rB,KAAKvuB,IAAO,SAAC2K,GAAI,OAAKA,EAAK0S,WAAW,EAAE,IAAEve,OAErE,GAAsB,oBAAXyD,OACP,OAEJ,MAA2B,oBAAhBA,OAAOC,KACPD,OAAOC,KAAKxC,EAAM,UAEtB,IAAIuC,OAAOvC,EAAM,SAC5B,CAEA,IAAMwuB,EAAc5Y,mBAAmB5V,GACvC,MAAsB,oBAAXuC,OACoB,oBAAhBA,OAAOC,KACPD,OAAOC,KAAKgsB,GAEhB,IAAIjsB,OAAOisB,GAEfnsB,WAAWG,KAAKgsB,GAAa,SAAC7jB,GAAI,OAAKA,EAAK0S,WAAW,EAAE,IAAEve,MACtE,C0CnE+B2vB,CAAgBnB,IAmD/C,SAAuBA,GAAyB,IAAdpuB,GAAcqC,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAXrC,OAC9B,OAAO,IAAI0E,SAAQ,SAACkqB,EAASjqB,GACzB,IAAM6qB,EAkCd,WACI,IACI,OAAOxP,QAAwB,KACnC,CAAE,MAAOhf,GACL,MACJ,CACJ,CAxCmByuB,GACXD,EAAGE,KAAKtB,GAAU,SAACptB,EAAO2uB,GAClB3uB,EACA2D,EAAO3D,GAEPwuB,EAAGI,KAAKxB,GAAU,SAACptB,EAAO4uB,GACtB,GAAI5uB,EACA2D,EAAO3D,OACJ,CACH,IAAMa,EAAOgN,KAAKC,IAAI8gB,EAAK/tB,UAAiB9B,IAAXC,EAAuBA,EAAS4vB,EAAK/tB,MAChEjC,EAASyD,OAAOwsB,MAAMhuB,GACtBqsB,EAAU,CACZtuB,OAAAA,EACAI,OAAQ6B,GAEZ2tB,EAAGjY,KAAKoY,EAAIzB,GAAS,SAACltB,GACdA,EACA2D,EAAO3D,GAEPwuB,EAAGM,MAAMH,GAAI,SAAC3uB,GACNA,GACAkf,QAAQC,KAAK,wBAADvb,OAAyBwpB,EAAQ,KAAKptB,GAEtD4tB,EAAQhvB,EACZ,GAER,GACJ,CACJ,GAER,GACJ,GACJ,CAlFWmwB,CAAc3B,EAAUF,EACnC,CA3Be8B,CAASlvB,EAAMotB,GAAS1pB,MAAK,SAACyrB,GAAY,OAAKC,GAAaD,EAAc/B,EAAQ,KAsHjG,SAA6BptB,GACzB,MAA0B,oBAAXqvB,QAA4C,oBAATC,MAA0BtvB,aAAgBsvB,IAChG,CAtHQC,CAAoBvvB,IACpBotB,EAAQpjB,MAAQ,GAuHAmjB,EAtHMntB,EAuHnB,IAAI4D,SAAQ,SAACkqB,EAASjqB,GACzB,IAAM2rB,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GAAW,OAAK7B,EAAQ6B,EAAYC,OAAOC,OAAO,EACnEL,EAAOM,QAAU,kBAAMjsB,EAAO2rB,EAAOtvB,MAAM,EAC3CsvB,EAAOO,kBAAkB5C,EAC7B,KA5HgCzpB,MAAK,SAACyrB,GAAY,OAAKC,GAAaD,EAAc/B,EAAQ,KAEnFgC,GAAapvB,EAAMotB,EAC9B,CA4HA,SAASgC,GAAapvB,EAAMotB,GAMxB,OAGJ,SAAsBptB,GAClB,IACI,OAAOuC,OAAOytB,SAAShwB,EAC3B,CAAE,MAAOE,GACL,OAAO,CACX,CACJ,CAdQ+vB,CAAajwB,KAGbA,EAAQ,IAAIqC,WAAWrC,GAAOlB,QAE3BkuB,GAWX,SAAqBhtB,GACjB,IACI,OAAO,IAAInB,SAASmB,EACxB,CAAE,MAAOE,GACL,OAAO,IAAIC,EAAgBH,EAC/B,CACJ,CAjBoBD,CAAYC,GAAOotB,EACvC,CAkBO,SAASJ,GACZ3sB,GAEF,IAAA6vB,EAAA3uB,UAAArC,OAAA,QAAAD,IAAAsC,UAAA,GAAAA,UAAA,GAD8D,CAAC4uB,SAAU,EAAOnmB,MAAO,EAAOqK,eAAgB,GAAM+b,EAAAF,EAAjHC,SAAAA,OAAQ,IAAAC,EAAG,EAAKA,EAAAC,EAAAH,EAAElmB,MAAAA,OAAK,IAAAqmB,EAAG,EAAKA,EAAAC,EAAAJ,EAAE7b,eAAAA,OAAc,IAAAic,EAAG,EAAKA,EAEpDC,EAAgB,EAChBhc,EAAO,CAAC,EACNsU,EAAe,GAErB2H,EAcIC,GAAYnlB,gBAAgBjL,EAAU2J,GAbtCsF,EAAQkhB,EAARlhB,SACA3C,EAAc6jB,EAAd7jB,eACAX,EAAcwkB,EAAdxkB,eACAxG,EAAgBgrB,EAAhBhrB,iBACAyG,EAAcukB,EAAdvkB,eACAC,EAASskB,EAATtkB,UACAC,EAASqkB,EAATrkB,UACAC,EAAaokB,EAAbpkB,cACAU,EAAe0jB,EAAf1jB,gBACAC,EAAayjB,EAAbzjB,cACAK,EAAeojB,EAAfpjB,gBACA4B,EAAewhB,EAAfxhB,gBACAK,EAAemhB,EAAfnhB,gBAGJ,GAAI9D,EAAU7G,UAAY6G,EAAUxH,UA0OxC,SAAqB4I,GACjB,YAA0B1N,IAAnB0N,CACX,CA5OoD+jB,CAAY/jB,GAAiB,CACzE4jB,EAAgB,EAChB,IAAMvS,EAAW2S,GAASla,KAAKpW,EAAUsM,GACrCwjB,EACA5b,EAAK4Y,KAAOnP,EAEZzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,GAAIzS,EAAU7G,UAAY6G,EAAUvH,UAoOxC,SAAqBgI,GACjB,YAA0B/M,IAAnB+M,CACX,CAtOoD4kB,CAAY5kB,GAAiB,CACzEukB,EAAgB,EAChB,IAAMvS,EAAW6S,GAASpa,KAAKpW,EAAU2L,GACrCmkB,EACA5b,EAAKuc,KAAO9S,EAEZzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,GAAIzS,EAAUrH,UA8NlB,SAAqBsB,GACjB,YAA4BvG,IAArBuG,CACX,CAhO8BurB,CAAYvrB,GAAmB,CACrD+qB,EAAgB,EAChB,IAAMvS,EAAWmL,GAAK1S,KAAKpW,EAAUmF,EAAkB6O,GAavD,GAZI2J,EAASgT,YACTzc,EAAKyc,UAAYhT,EAASgT,iBACnBhT,EAASgT,WAGhBb,GACA5b,EAAK0c,KAAOjT,EAyNxB,SAAqBzJ,GACjB,GAAIA,EAAK0c,KAAM,CACX,GAAI1c,EAAK0c,KAAKC,aAAe3c,EAAK0c,KAAKE,eACnC,IACI5c,EAAK6c,IAAM7c,EAAK6c,KAAO,CAAC,EACxB7c,EAAK6c,IAAIC,SAAWjsB,EAAsBmP,EAAK0c,KAAKC,YAAYtyB,OAChB,MAA5C2V,EAAK0c,KAAKE,eAAevyB,MAAMyC,KAAK,MACpCkT,EAAK6c,IAAIC,UAAY9c,EAAK6c,IAAIC,SAEtC,CAAE,MAAOnxB,GACL,CAIR,GAAIqU,EAAK0c,KAAKK,cAAgB/c,EAAK0c,KAAKM,gBACpC,IACIhd,EAAK6c,IAAM7c,EAAK6c,KAAO,CAAC,EACxB7c,EAAK6c,IAAII,UAAYpsB,EAAsBmP,EAAK0c,KAAKK,aAAa1yB,OACjB,MAA7C2V,EAAK0c,KAAKM,gBAAgB3yB,MAAMyC,KAAK,MACrCkT,EAAK6c,IAAII,WAAajd,EAAK6c,IAAII,UAEvC,CAAE,MAAOtxB,GACL,CAIR,GAAIqU,EAAK0c,KAAKQ,aAAeld,EAAK0c,KAAKS,eACnC,IACInd,EAAK6c,IAAM7c,EAAK6c,KAAO,CAAC,EACxB7c,EAAK6c,IAAIO,SAAWpd,EAAK0c,KAAKQ,YAAY7yB,MAAM,GAAK2V,EAAK0c,KAAKQ,YAAY7yB,MAAM,GAC1C,IAAnC2V,EAAK0c,KAAKS,eAAe9yB,QACzB2V,EAAK6c,IAAIO,UAAYpd,EAAK6c,IAAIO,SAEtC,CAAE,MAAOzxB,GACL,CAGZ,CACJ,CA9PY0xB,CAAYrd,IAEZA,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,GAG9BzS,EAAU9G,UAAY8G,EAAUpH,UAAY6Z,EAAS,cAAgB6T,GAAY5lB,GAAiB,CAClG,IAAM6lB,EAAetI,GAAS/S,KAAKuH,EAAS,YAAYpf,MAAO,EAAGyV,GAC9D8b,EACA5b,EAAKwd,KAAOD,EAEZvd,EAAOjT,EAAa,CAAC,EAAGiT,EAAMud,EAEtC,CAEA,GAAIvmB,EAAU9G,UAAY8G,EAAUnH,SAAW4Z,EAA2B,mBAAMgU,GAAW9lB,GAAY,CACnG,IAAM+lB,EAAcC,GAAQzb,KAAK/V,EAAwBsd,EAA2B,iBAAEpf,QAClFuxB,EACA5b,EAAK4d,IAAMF,UAEJA,EAAYxT,KACnBlK,EAAOjT,EAAa,CAAC,EAAGiT,EAAM0d,GAEtC,CAEA,GAAI1mB,EAAUhH,eAAiByZ,EAA0B,gBAAG,CACxD,IAAMoU,EAAoBC,GAAc5b,KAAKuH,EAA4B,kBAAEpf,MAAOyV,GAC9E8b,EACA5b,EAAK+d,UAAYF,EAEjB7d,EAAOjT,EAAa,CAAC,EAAGiT,EAAM6d,EAEtC,CAEA,GAAI7mB,EAAU9G,UAAY8G,EAAUlH,SAAW2Z,EAAsB,cAAMuU,GAAWpmB,GAAY,CAC9F,IAAMqmB,EAAcC,GAAQhc,KACxBuH,EAAsB,YAAEpf,MACxB,CAAC,CACGiB,OAAQ,EACRX,OAAQ8e,EAAsB,YAAEpf,MAAMM,OACtCuN,YAAa,EACbC,YAAa,KAGjByjB,EACA5b,EAAK6R,IAAMoM,EAEXje,EAAOjT,EAAa,CAAC,EAAGiT,EAAMie,EAEtC,CACJ,CAEA,GAAIjnB,EAAU7G,UAAY6G,EAAUpH,UAAY0tB,GAAY5lB,GAAiB,CACzEskB,EAAgB,EAChB,IAAMvS,EAAWwL,GAAS/S,KAAKpW,EAAU4L,EAAgBoI,GACrD8b,EACA5b,EAAKwd,KAAO/T,EAEZzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,GAAIzS,EAAUnH,SAAW4tB,GAAW9lB,GAAY,CAC5CqkB,EAAgB,EAChB,IAAMvS,EAAWkU,GAAQzb,KAAKpW,EAAU6L,GACpCikB,EACA5b,EAAK4d,IAAMnU,UAEJA,EAASS,KAChBlK,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,GAEtC,CAEA,IAAKzS,EAAU7G,UAAY6G,EAAUzG,WAAayG,EAAUlH,SAAWkuB,GAAWpmB,GAAY,CAC1FokB,EAAgB,EAChB,IAAMvS,EAAWyU,GAAQhc,KAAKpW,EAAU8L,EAAWnC,GAC/CgU,aAAoBpa,QACpBilB,EAAaroB,KAAKwd,EAASta,KAAKgvB,IAEhCA,EAAW1U,EAEnB,CAEA,GAAIzS,EAAUjH,SA0LlB,SAAoB8H,GAChB,YAAyBnN,IAAlBmN,CACX,CA5L6BumB,CAAWvmB,GAAgB,CAChDmkB,EAAgB,EAChB,IAAMqC,EAAcC,GAAQpc,KAAKpW,EAAU+L,EAAeiI,GACtD8b,EACA5b,EAAKue,IAAMF,EAEXre,EAAOjT,EAAa,CAAC,EAAGiT,EAAMqe,EAEtC,CAEA,GAAIrnB,EAAU5G,SAAW4G,EAAUtH,mBAqLNhF,IArLqC6N,EAAkB,CAChFyjB,EAAgB,EAChB,IAAMvS,EAAW+U,GAAYtc,KAAKpW,EAAUyM,GACxCqjB,GACA5b,EAAKye,IAAOze,EAAKye,IAAiB1xB,EAAa,CAAC,EAAGiT,EAAKye,IAAKhV,GAAtCA,EACvBzJ,EAAK0e,QAAUjV,GAEfzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,GAAIzS,EAAU5G,SA6KlB,SAAwBoI,GACpB,YAAyB9N,IAAlB8N,CACX,CA/K6BmmB,CAAenmB,GAAgB,CACpDwjB,EAAgB,EAChB,IAAA4C,EAAoCC,GAAY3c,KAAKpW,EAAU0M,EAAe/C,EAAOqK,GAA9E2J,EAAQmV,EAARnV,SAAUyL,EAAe0J,EAAf1J,gBACjB4J,EAAerV,GACXyL,GACAZ,EAAaroB,KAAKipB,EAAgB/lB,MAAK,SAAC4vB,GAAO,OAAKA,EAAQ5S,QAAQ2S,EAAe,IAE3F,CAEA,GAAI9nB,EAAU5G,SAwKlB,SAAoByI,GAChB,YAA2BnO,IAApBmO,CACX,CA1K6BmmB,CAAWnmB,GAAkB,CAClDmjB,EAAgB,EAChB,IAAMvS,EAAWwV,GAAQ/c,KAAKpW,EAAU+M,GACpC+iB,EACA5b,EAAKye,IAAOze,EAAKye,IAAiB1xB,EAAa,CAAC,EAAGiT,EAAKye,IAAKhV,GAAtCA,EAEvBzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,GAAIzS,EAAUzG,UAkKlB,SAAqBkK,GACjB,YAA2B/P,IAApB+P,CACX,CApK8BykB,CAAYzkB,GAAkB,CACpDuhB,EAAgB,EAChB,IAAMvS,EAAW0V,GAASjd,KAAKpW,EAAU2O,GACrCmhB,EACA5b,EAAKof,KAAQpf,EAAKof,KAAkBryB,EAAa,CAAC,EAAGiT,EAAKof,KAAM3V,GAAvCA,EAEzBzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,GAAIzS,EAAUxG,SA4JlB,SAAwBsK,GACpB,YAA2BpQ,IAApBoQ,CACX,CA9J6BukB,CAAevkB,GAAkB,CACtDkhB,EAAgB,EAChB,IAAMvS,EAAW6V,GAAYpd,KAAKpW,EAAUgP,GACxC8gB,EACA5b,EAAKuf,IAAOvf,EAAKuf,IAAiBxyB,EAAa,CAAC,EAAGiT,EAAKuf,IAAK9V,GAAtCA,EAEvBzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,IAAMtE,GAAanO,EAAU7G,UAAY6G,EAAUzG,WAC5CyG,EAAUrH,UACVqH,EAAU/G,eACVwsB,GAAU5yB,IAAIiC,EAAUkU,EAAKyc,UAAWxrB,GAmB/C,GAlBIkU,GACA6W,EAAgB,EAChBhc,EAAKyc,UAAYtX,UAEVnF,EAAKyc,UAGZ1hB,IACI6gB,GACK5b,EAAK4Y,OACN5Y,EAAK4Y,KAAO,CAAC,GAEjB5Y,EAAK4Y,KAAK4G,SAAWzkB,GAErBiF,EAAKwf,SAAWzkB,IAInBihB,EACD,MAAM,IAAIrD,GAAWN,qBAGzB,OAAI5iB,EACOpG,QAAQ8lB,IAAIb,GAAcnlB,MAAK,kBAAM6Q,CAAI,IAE7CA,EAEP,SAASme,EAAW1U,GACZmS,EACA5b,EAAK6R,IAAMpI,EAEXzJ,EAAOjT,EAAa,CAAC,EAAGiT,EAAMyJ,EAEtC,CAEA,SAASqV,EAAerV,GACpB,GAAImS,EAAU,CACV,IAAK,IAAL6D,EAAA,EAAAC,EAAoB,CAAC,OAAQ,QAAOD,EAAAC,EAAA/0B,OAAA80B,IAAE,CAAjC,IAAME,EAAKD,EAAAD,GACNG,EAAW,KAAHrwB,OAAQowB,GAClBlW,EAASmW,KACT5f,EAAK2f,GAAU3f,EAAK2f,GAA8B5yB,EAAa,CAAC,EAAGiT,EAAK0c,KAAMjT,EAASmW,IAA1DnW,EAASmW,UAC/BnW,EAASmW,GAExB,CACA5f,EAAKye,IAAOze,EAAKye,IAAiB1xB,EAAa,CAAC,EAAGiT,EAAKye,IAAKhV,GAAtCA,EACvBzJ,EAAK6f,QAAW7f,EAAK6f,QAAqB9yB,EAAa,CAAC,EAAGiT,EAAKye,IAAKhV,GAAtCA,CACnC,MACIzJ,EAAOjT,EACH,CAAC,EACDiT,EACAyJ,EAASkL,OAASlL,EAASkL,OAAS,CAAC,EACrClL,EAASuL,OAASvL,EAASuL,OAAS,CAAC,EACrCvL,EAGZ,CACJ,CAsDA,SAAS6T,GAAY5lB,GACjB,YAA0BhN,IAAnBgN,CACX,CAEA,SAAS+lB,GAAW9lB,GAChB,OAAO/J,MAAMwP,QAAQzF,IAAcA,EAAUhN,OAAS,CAC1D,CAEA,SAASqzB,GAAW8B,GAChB,OAAOlyB,MAAMwP,QAAQ0iB,IAAmBA,EAAen1B,OAAS,CACpE,C","sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/webpack/runtime/define property getters","webpack://ExifReader/webpack/runtime/hasOwnProperty shorthand","webpack://ExifReader/webpack/runtime/make namespace object","webpack://ExifReader/./src/dataview.js","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/constants.js","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/image-header-jpeg.js","webpack://ExifReader/./src/image-header-png.js","webpack://ExifReader/./src/image-header-heic.js","webpack://ExifReader/./src/image-header-webp.js","webpack://ExifReader/./src/image-header-gif.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/image-header-tiff.js","webpack://ExifReader/./src/tag-names-common.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/tag-names-mpf-ifd.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tags-helpers.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/mpf-tags.js","webpack://ExifReader/./src/file-tags.js","webpack://ExifReader/./src/jfif-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/text-decoder.js","webpack://ExifReader/./src/tag-decoder.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/dom-parser.js","webpack://ExifReader/./src/photoshop-tag-names.js","webpack://ExifReader/./src/photoshop-tags.js","webpack://ExifReader/./src/icc-tag-names.js","webpack://ExifReader/./src/icc-tags.js","webpack://ExifReader/./src/png-file-tags.js","webpack://ExifReader/./src/png-text-tags.js","webpack://ExifReader/./src/png-tags.js","webpack://ExifReader/./src/vp8x-tags.js","webpack://ExifReader/./src/gif-file-tags.js","webpack://ExifReader/./src/thumbnail.js","webpack://ExifReader/./src/errors.js","webpack://ExifReader/./src/exif-reader.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport DataViewWrapper from './dataview.js';\n\nexport function getDataView(data, byteOffset, byteLength) {\n    try {\n        return new DataView(data, byteOffset, byteLength);\n    } catch (error) {\n        return new DataViewWrapper(data, byteOffset, byteLength);\n    }\n}\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getNullTerminatedStringFromDataView(dataView, offset) {\n    const chars = [];\n    let i = 0;\n    while (offset + i < dataView.byteLength) {\n        const char = dataView.getUint8(offset + i);\n        if (char === 0) {\n            break;\n        }\n        chars.push(char);\n        i++;\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    if (chars[chars.length - 1] === 0) {\n        chars.pop();\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getPascalStringFromDataView(dataView, offset) {\n    const size = dataView.getUint8(offset);\n    const string = getStringFromDataView(dataView, offset + 1, size);\n    return [size, string];\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        if (typeof image === 'string') {\n            // This only happens during the build tests using Node 16+ (npm run test:build).\n            return btoa(image);\n        }\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n\nexport function dataUriToBuffer(dataUri) {\n    const data = dataUri.substring(dataUri.indexOf(',') + 1);\n\n    if (dataUri.indexOf(';base64') !== -1) {\n        if (typeof atob !== 'undefined') {\n            return Uint8Array.from(atob(data), (char) => char.charCodeAt(0)).buffer;\n        }\n        if (typeof Buffer === 'undefined') {\n            return undefined;\n        }\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n        }\n        return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n    }\n\n    const decodedData = decodeURIComponent(data);\n    if (typeof Buffer !== 'undefined') {\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(decodedData); // eslint-disable-line no-undef\n        }\n        return new Buffer(decodedData); // eslint-disable-line no-undef\n    }\n    return Uint8Array.from(decodedData, (char) => char.charCodeAt(0)).buffer;\n}\n\nexport function padStart(string, length, character) {\n    const padding = strRepeat(character, length - string.length);\n    return padding + string;\n}\n\nexport function parseFloatRadix(string, radix) {\n    return parseInt(string.replace('.', ''), radix)\n        / Math.pow(radix, (string.split('.')[1] || '').length);\n}\n\nexport function strRepeat(string, num) {\n    return new Array(num + 1).join(string);\n}\n\nexport const COMPRESSION_METHOD_NONE = undefined;\nexport const COMPRESSION_METHOD_DEFLATE = 0;\n\nexport function decompress(dataView, compressionMethod, returnType = 'string') {\n    if (compressionMethod === COMPRESSION_METHOD_DEFLATE) {\n        if (typeof DecompressionStream === 'function') {\n            const decompressionStream = new DecompressionStream('deflate');\n            const decompressedStream = new Blob([dataView]).stream().pipeThrough(decompressionStream);\n            if (returnType === 'dataview') {\n                return new Response(decompressedStream).arrayBuffer().then((arrayBuffer) => new DataView(arrayBuffer));\n            }\n            return new Response(decompressedStream).text();\n        }\n    }\n    if (compressionMethod !== undefined) {\n        return Promise.reject(`Unknown compression method ${compressionMethod}.`);\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_PHOTOSHOP: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_AVIF: true,\n    USE_WEBP: true,\n    USE_GIF: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else if (isFillByte(dataView, appMarkerPosition)) {\n            appMarkerPosition++;\n            continue;\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP0_JFIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isFillByte(dataView, appMarkerPosition) {\n    return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringFromDataView, getNullTerminatedStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_ZTXT = 'zTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\nexport const TYPE_ICCP = 'iCCP';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView, async) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        } else if (isPngTextChunk(dataView, offset, async)) {\n            offsets.hasAppMarkers = true;\n            const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n            if (!offsets.pngTextChunks) {\n                offsets.pngTextChunks = [];\n            }\n            offsets.pngTextChunks.push({\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n                type: chunkType,\n                offset: offset + PNG_CHUNK_DATA_OFFSET\n            });\n        } else if (isPngExifChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_ICC && async && isPngIccpChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            const chunkDataLength = dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET);\n            const iccHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n            const {profileName, compressionMethod, compressedProfileOffset} = parseIccHeader(dataView, iccHeaderOffset);\n            if (!offsets.iccChunks) {\n                offsets.iccChunks = [];\n            }\n            offsets.iccChunks.push({\n                offset: compressedProfileOffset,\n                length: chunkDataLength - (compressedProfileOffset - iccHeaderOffset),\n                chunkNumber: 1,\n                chunksTotal: 1,\n                profileName,\n                compressionMethod\n            });\n        } else if (isPngChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            if (!offsets.pngChunkOffsets) {\n                offsets.pngChunkOffsets = [];\n            }\n            offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ITXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isPngTextChunk(dataView, offset, async) {\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return chunkType === TYPE_TEXT || chunkType === TYPE_ITXT || (chunkType === TYPE_ZTXT && async);\n}\n\nfunction isPngExifChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\n\nfunction isPngIccpChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ICCP;\n}\n\nfunction isPngChunk(dataView, offset) {\n    const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n\nfunction parseIccHeader(dataView, offset) {\n    const NULL_SEPARATOR_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    const profileName = getNullTerminatedStringFromDataView(dataView, offset);\n    offset += profileName.length + NULL_SEPARATOR_SIZE;\n\n    const compressionMethod = dataView.getUint8(offset);\n    offset += COMPRESSION_METHOD_SIZE;\n\n    return {\n        profileName,\n        compressionMethod,\n        compressedProfileOffset: offset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_ID = 'ftyp';\n    const HEIC_ID_OFFSET = 4;\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n    const HEIC_MAJOR_BRAND_LENGTH = 4;\n\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_ICC) {\n        const {offset: metaOffset, length: metaLength} = findMetaBox(dataView);\n        if (metaOffset === undefined) {\n            return {hasAppMarkers: false};\n        }\n\n        const metaEndOffset = Math.min(metaOffset + metaLength, dataView.byteLength);\n        const {exifItemOffset, ilocOffset, colrOffset} = findMetaItems(dataView, metaOffset, metaEndOffset);\n\n        const exifOffset = findExifOffset(dataView, exifItemOffset, ilocOffset, metaEndOffset);\n        const iccChunks = findIccChunks(dataView, colrOffset, metaEndOffset);\n        return {\n            hasAppMarkers: (exifOffset !== undefined) || (iccChunks !== undefined),\n            tiffHeaderOffset: exifOffset,\n            iccChunks\n        };\n    }\n\n    return {hasAppMarkers: false};\n}\n\nfunction findMetaBox(dataView) {\n    const BOX_LENGTH_SIZE = 4;\n    const BOX_TYPE_SIZE = 4;\n    const BOX_MIN_LENGTH = 8;\n    const BOX_TYPE_OFFSET = 4;\n\n    let offset = 0;\n\n    while (offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE <= dataView.byteLength) {\n        const boxLength = getBoxLength(dataView, offset);\n        if (boxLength >= BOX_MIN_LENGTH) {\n            const boxType = getStringFromDataView(dataView, offset + BOX_TYPE_OFFSET, BOX_TYPE_SIZE);\n            if (boxType === 'meta') {\n                return {\n                    offset,\n                    length: boxLength\n                };\n            }\n        }\n\n        offset += boxLength;\n    }\n\n    return {\n        offset: undefined,\n        length: 0\n    };\n}\n\nfunction getBoxLength(dataView, offset) {\n    const BOX_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const boxLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(boxLength)) {\n        return dataView.byteLength - offset;\n    }\n    if (hasExtendedSize(boxLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return dataView.getUint32(offset + BOX_EXTENDED_SIZE_LOW_OFFSET);\n        }\n    }\n\n    return boxLength;\n}\n\nfunction extendsToEndOfFile(boxLength) {\n    return boxLength === 0;\n}\n\nfunction hasExtendedSize(boxLength) {\n    return boxLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const BOX_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + BOX_EXTENDED_SIZE_OFFSET) === 0;\n}\n\nfunction findMetaItems(dataView, offset, metaEndOffset) {\n    const STRING_SIZE = 4;\n    const ITEM_INDEX_REL_OFFSET = -4;\n    const offsets = {\n        ilocOffset: undefined,\n        exifItemOffset: undefined,\n        colrOffset: undefined\n    };\n\n    while ((offset + STRING_SIZE <= metaEndOffset)\n        && (!offsets.ilocOffset || !offsets.exifItemOffset || !offsets.colrOffset)) {\n        const itemName = getStringFromDataView(dataView, offset, STRING_SIZE);\n        if (Constants.USE_EXIF && (itemName === 'iloc')) {\n            offsets.ilocOffset = offset;\n        } else if (Constants.USE_EXIF && (itemName === 'Exif')) {\n            offsets.exifItemOffset = offset + ITEM_INDEX_REL_OFFSET;\n        } else if (Constants.USE_ICC && (itemName === 'colr')) {\n            offsets.colrOffset = offset + ITEM_INDEX_REL_OFFSET;\n        }\n\n        offset++;\n    }\n\n    return offsets;\n}\n\nfunction findExifOffset(dataView, exifItemOffset, offset, metaEndOffset) {\n    const EXIF_ITEM_OFFSET_SIZE = 2;\n    const ILOC_DATA_OFFSET = 12;\n    const EXIF_POINTER_OFFSET = 8;\n    const EXIF_POINTER_SIZE = 4;\n    const EXIF_PREFIX_LENGTH_OFFSET = 4;\n    const ILOC_ITEM_SIZE = 16;\n\n    if (!offset || !exifItemOffset || (exifItemOffset + EXIF_ITEM_OFFSET_SIZE > metaEndOffset)) {\n        return undefined;\n    }\n\n    const exifItemIndex = dataView.getUint16(exifItemOffset);\n    offset += ILOC_DATA_OFFSET;\n\n    while (offset + ILOC_ITEM_SIZE <= metaEndOffset) {\n        const itemIndex = dataView.getUint16(offset);\n        if (itemIndex === exifItemIndex) {\n            const exifPointer = dataView.getUint32(offset + EXIF_POINTER_OFFSET);\n            if (exifPointer + EXIF_POINTER_SIZE <= dataView.byteLength) {\n                const exifOffset = dataView.getUint32(exifPointer);\n                const prefixLength = exifOffset + EXIF_PREFIX_LENGTH_OFFSET;\n                return exifPointer + prefixLength;\n            }\n        }\n        offset += ILOC_ITEM_SIZE;\n    }\n\n    return undefined;\n}\n\nfunction findIccChunks(dataView, offset, metaEndOffset) {\n    const ITEM_TYPE_OFFSET = 8;\n    const ITEM_TYPE_SIZE = 4;\n    const ITEM_CONTENT_OFFSET = 12;\n\n    if (!offset || (offset + ITEM_CONTENT_OFFSET > metaEndOffset)) {\n        return undefined;\n    }\n\n    const colorType = getStringFromDataView(dataView, offset + ITEM_TYPE_OFFSET, ITEM_TYPE_SIZE);\n    if ((colorType !== 'prof') && (colorType !== 'rICC')) {\n        return undefined;\n    }\n\n    return [{\n        offset: offset + ITEM_CONTENT_OFFSET,\n        length: getBoxLength(dataView, offset) - ITEM_CONTENT_OFFSET,\n        chunkNumber: 1,\n        chunksTotal: 1\n    }];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n    let vp8xChunkOffset;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        } else if (chunkId === 'VP8X') {\n            hasAppMarkers = true;\n            vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks,\n        vp8xChunkOffset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isGifFile,\n    findOffsets\n};\n\nconst GIF_SIGNATURE_SIZE = 6;\nconst GIF_SIGNATURES = ['GIF87a', 'GIF89a'];\n\nfunction isGifFile(dataView) {\n    return !!dataView && GIF_SIGNATURES.includes(getStringFromDataView(dataView, 0, GIF_SIGNATURE_SIZE));\n}\n\nfunction findOffsets() {\n    return {\n        gifHeaderOffset: 0\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Webp from './image-header-webp.js';\nimport Gif from './image-header-gif.js';\nimport {objectAssign} from './utils.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView, async) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return addFileType(Png.findPngOffsets(dataView, async), 'png', 'PNG');\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n    }\n\n    if (Constants.USE_GIF && Gif.isGifFile(dataView)) {\n        return addFileType(Gif.findOffsets(dataView), 'gif', 'GIF');\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n    return objectAssign({}, offsets, {fileType: {value: fileType, description: fileTypeDescription}});\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] / value[1] > 0.25) {\n            const decimal = value[0] / value[1];\n            if (Number.isInteger(decimal)) {\n                return '' + decimal;\n            }\n            return decimal.toFixed(1);\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${value[0] / value[1]}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport const IFD_TYPE_0TH = '0th';\nexport const IFD_TYPE_1ST = '1st';\nexport const IFD_TYPE_EXIF = 'exif';\nexport const IFD_TYPE_GPS = 'gps';\nexport const IFD_TYPE_INTEROPERABILITY = 'interoperability';\nexport const IFD_TYPE_MPF = 'mpf';\n\nexport default {\n    [IFD_TYPE_0TH]: tagNames0thExifIfds,\n    [IFD_TYPE_1ST]: TagNames0thIfd,\n    [IFD_TYPE_EXIF]: tagNames0thExifIfds,\n    [IFD_TYPE_GPS]: TagNamesGpsIfd,\n    [IFD_TYPE_INTEROPERABILITY]: TagNamesInteroperabilityIfd,\n    [IFD_TYPE_MPF]: Constants.USE_MPF ? TagNamesMpfIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x935c: 'ImageSourceData',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengths = `${value[0][0] / value[0][1]}-${value[1][0] / value[1][1]} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            return `${focalLengths} f/${1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Types from './types.js';\nimport TagNames, {IFD_TYPE_0TH, IFD_TYPE_1ST} from './tag-names.js';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport function get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nexport function readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0 && ifdType === IFD_TYPE_0TH) {\n            tags['Thumbnail'] = readIfd(dataView, IFD_TYPE_1ST, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport {IFD_TYPE_0TH, IFD_TYPE_EXIF, IFD_TYPE_GPS, IFD_TYPE_INTEROPERABILITY} from './tag-names.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nexport default {\n    read,\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, IFD_TYPE_0TH, tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_EXIF, tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_GPS, tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_INTEROPERABILITY, tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport {IFD_TYPE_MPF} from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nexport default {\n    read\n};\n\nconst ENTRY_SIZE = 16;\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, IFD_TYPE_MPF, dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = getImageOffset(i, tags['MPEntry'], byteOrder, dataOffset);\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction getImageOffset(imageIndex, mpEntry, byteOrder, dataOffset) {\n    if (isFirstIndividualImage(imageIndex)) {\n        return 0;\n    }\n    return getImageNumberValue(mpEntry.value, imageIndex * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n}\n\nfunction isFirstIndividualImage(imageIndex) {\n    return imageIndex === 0;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(tagValue instanceof DataView ? tagValue.buffer : Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    const tags = {};\n\n    if (typeof dataView === 'string') {\n        readTags(tags, dataView);\n        return tags;\n    }\n\n    const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n\n    const hasStandardTags = readTags(tags, standardXmp);\n\n    if (extendedXmp) {\n        const hasExtendedTags = readTags(tags, extendedXmp);\n\n        if (!hasStandardTags && !hasExtendedTags) {\n            // Some writers are not spec-compliant in that they split an XMP\n            // metadata tree over both the standard XMP block and the extended\n            // XMP block. If we failed parsing both of the XMPs in the regular\n            // way, we try to combine them to see if that works better.\n            delete tags._raw;\n            readTags(tags, combineChunks(dataView, chunks));\n        }\n    }\n\n    return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const domParser = DOMParser.get();\n    if (!domParser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        try {\n            if (isTagAttribute(name)) {\n                tags[getLocalName(name)] = {\n                    value: attributes[name],\n                    attributes: {},\n                    description: getDescription(attributes[name], name)\n                };\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        try {\n            if (!isNamespaceDefinition(name)) {\n                tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (isDuplicateTag(node)) {\n        return parseNodeAsDuplicateTag(node, name);\n    }\n    if (isEmptyResourceTag(node)) {\n        return {value: '', attributes: {}, description: ''};\n    }\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction isEmptyResourceTag(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        && (typeof node.value === 'string')\n        && (node.value.trim() === '');\n}\n\nfunction isDuplicateTag(node) {\n    return Array.isArray(node);\n}\n\nfunction parseNodeAsDuplicateTag(node, name) {\n    return parseNodeAsSimpleValue(node[node.length - 1], name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return new DOMParser();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        return new (__non_webpack_require__('@xmldom/xmldom').DOMParser)({\n            errorHandler: {\n                error: () => {\n                    throw new Error('Faulty XML');\n                }\n            }\n        });\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {\n    getPascalStringFromDataView,\n    padStart,\n    parseFloatRadix,\n    strRepeat\n} from './utils.js';\n\n// export const OsTypeKeys = {\n//     OBJC: 'Objc',\n//     DOUB: 'doub',\n//     UNTF: 'UntF',\n//     TEXT: 'TEXT',\n//     BOOL: 'bool',\n//     ENUM: 'enum',\n//     LONG: 'long'\n// };\n\nexport const PathRecordTypes = {\n    CLOSED_SUBPATH_LENGTH: 0,\n    CLOSED_SUBPATH_BEZIER_LINKED: 1,\n    CLOSED_SUBPATH_BEZIER_UNLINKED: 2,\n    OPEN_SUBPATH_LENGTH: 3,\n    OPEN_SUBPATH_BEZIER_LINKED: 4,\n    OPEN_SUBPATH_BEZIER_UNLINKED: 5,\n    FILL_RULE: 6,\n    CLIPBOARD: 7,\n    INITIAL_FILL_RULE: 8\n};\n\nconst PATH_RECORD_SIZE = 24;\n\nexport default {\n    // 0x0425: {\n    //     name: 'CaptionDigest',\n    //     description(dataView) {\n    //         let description = '';\n    //         for (let i = 0; i < dataView.byteLength; i++) {\n    //             const byte = dataView.getUint8(i);\n    //             description += padStart(byte.toString(16), 2, '0');\n    //         }\n    //         return description;\n    //     }\n    // },\n    // Commented out for now to lower bundle size until someone asks for it.\n    // 0x043a: {\n    //     name: 'PrintInformation',\n    //     description: parseDescriptor\n    // },\n    // 0x043b: {\n    //     name: 'PrintStyle',\n    //     description: parseDescriptor\n    // },\n    0x07d0: {\n        name: 'PathInformation',\n        description: pathResource\n    },\n    0x0bb7: {\n        name: 'ClippingPathName',\n        description(dataView) {\n            const [, string] = getPascalStringFromDataView(dataView, 0);\n            return string;\n        }\n    },\n};\n\n// function parseDescriptor(dataView) {\n//     const DESCRIPTOR_VERSION_SIZE = 4;\n//     // This is a unicode string terminated with null. Unsure about the format though since in my example image it starts with 0x0000.\n//     const UNCLEAR_CLASS_ID_NAME_PART_SIZE = 6;\n//     let offset = 0;\n//     offset += DESCRIPTOR_VERSION_SIZE + UNCLEAR_CLASS_ID_NAME_PART_SIZE;\n//     const [classId, classIdSize] = getBlockValue(dataView, offset);\n//     offset += classIdSize;\n//     const numItems = Types.getLongAt(dataView, offset);\n//     offset += 4;\n//     const descriptor = {[classId]: {}};\n//     for (let i = 0; i < numItems; i++) {\n//         const [itemKey, itemKeySize] = getBlockValue(dataView, offset);\n//         offset += itemKeySize;\n//         const osTypeKey = getStringFromDataView(dataView, offset, 4);\n//         offset += 4;\n//         try {\n//             const {itemValue, itemSize} = getItemValue(dataView, offset, osTypeKey);\n//             offset += itemSize;\n//             descriptor[classId][ITEM_KEY_TERMS[itemKey] || itemKey] = itemValue;\n//         } catch (error) {\n//             // We can't recover from unknown OS type key since we don't know\n//             // where the next one starts.\n//             break;\n//         }\n//     }\n//     return JSON.stringify(descriptor);\n// }\n\n// function getBlockValue(dataView, offset, unicode = false) {\n//     const length = (unicode ? 2 : 1) * Types.getLongAt(dataView, offset) || 4;\n//     offset += 4;\n//     const value = (unicode ? getUnicodeStringFromDataView : getStringFromDataView)(dataView, offset, length);\n//     offset += length;\n//     return [value, 4 + length];\n// }\n\n// function getItemValue(dataView, offset, osTypeKey) {\n//     // Not all OSType keys are implemented yet because they are missing in the example image.\n//     if (osTypeKey === OsTypeKeys.OBJC) {\n//         const [classIdName, classIdNameSize] = getBlockValue(dataView, offset, true);\n//         offset += classIdNameSize;\n//         const [classId, classIdSize] = getBlockValue(dataView, offset);\n//         offset += classIdSize;\n//         const _offset = Types.getLongAt(dataView, offset);\n//         return {\n//             itemValue: {[classIdName]: {[classId]: _offset}},\n//             itemSize: classIdNameSize + classIdSize + 4\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.DOUB) {\n//         return {\n//             itemValue: parseDouble(dataView, offset),\n//             itemSize: 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.UNTF) {\n//         const unit = getStringFromDataView(dataView, offset, 4);\n//         return {\n//             itemValue: {unit, value: parseDouble(dataView, offset + 4)},\n//             itemSize: unit.length + 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.TEXT) {\n//         const length = 2 * Types.getLongAt(dataView, offset);\n//         offset += 4;\n//         const text = getUnicodeStringFromDataView(dataView, offset, length);\n//         return {\n//             itemValue: text,\n//             itemSize: 4 + length\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.BOOL) {\n//         return {\n//             itemValue: Types.getByteAt(dataView, offset) === 1,\n//             itemSize: 1\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.ENUM) {\n//         const [type, typeSize] = getBlockValue(dataView, offset);\n//         offset += typeSize;\n//         const [enumName, enumSize] = getBlockValue(dataView, offset);\n//         return {\n//             itemValue: {[type]: enumName},\n//             itemSize: typeSize + enumSize\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.LONG) {\n//         return {\n//             itemValue: Types.getLongAt(dataView, offset),\n//             itemSize: 4\n//         };\n//     }\n//     throw new Error(`Unknown OS type key: ${osTypeKey}`);\n// }\n\n// function parseDouble(dataView, offset) {\n//     const BIAS = 1023;\n//     const sign = (Types.getByteAt(dataView, offset) & parseInt('10000000', 2)) === 0 ? 1 : -1;\n//     const exponent = ((Types.getShortAt(dataView, offset) & parseInt('0111111111110000', 2)) >> 4) - BIAS;\n//     const fractionHigh = padStart((Types.getLongAt(dataView, offset) & parseInt('00000000000011111111111111111111', 2)).toString(2), 20, '0');\n//     const fractionLow = padStart(Types.getLongAt(dataView, offset + 4).toString(2), 32, '0');\n//     const fraction = parseFloatRadix('1.' + fractionHigh + fractionLow, 2);\n//     return sign * fraction * Math.pow(2, exponent);\n// }\n\nfunction pathResource(dataView) {\n    const TYPE_SIZE = 2;\n    const types = {};\n    const paths = [];\n\n    for (let offset = 0; offset < dataView.byteLength; offset += TYPE_SIZE + PATH_RECORD_SIZE) {\n        const type = Types.getShortAt(dataView, offset);\n        if (PATH_RECORD_TYPES[type]) {\n            if (!types[type]) {\n                types[type] = PATH_RECORD_TYPES[type].description;\n            }\n            paths.push({\n                type,\n                path: PATH_RECORD_TYPES[type].path(dataView, offset + TYPE_SIZE)\n            });\n        }\n    }\n    return JSON.stringify({types, paths});\n}\n\nconst PATH_RECORD_TYPES = {\n    [PathRecordTypes.CLOSED_SUBPATH_LENGTH]: {\n        description: 'Closed subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_LINKED]: {\n        description: 'Closed subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Closed subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_LENGTH]: {\n        description: 'Open subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_LINKED]: {\n        description: 'Open subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Open subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.FILL_RULE]: {\n        description: 'Path fill rule',\n        path: () => []\n    },\n    [PathRecordTypes.INITIAL_FILL_RULE]: {\n        description: 'Initial fill rule',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLIPBOARD]: {\n        description: 'Clipboard',\n        path: parseClipboard\n    }\n};\n\nfunction parseBezierKnot(dataView, offset) {\n    const PATH_POINT_SIZE = 8;\n    const path = [];\n    for (let i = 0; i < PATH_RECORD_SIZE; i += PATH_POINT_SIZE) {\n        path.push(parsePathPoint(dataView, offset + i));\n    }\n    return path;\n}\n\nfunction parsePathPoint(dataView, offset) {\n    const vertical = getFixedPointNumber(dataView, offset, 8);\n    const horizontal = getFixedPointNumber(dataView, offset + 4, 8);\n    return [horizontal, vertical];\n}\n\nfunction parseClipboard(dataView, offset) {\n    return [\n        [\n            getFixedPointNumber(dataView, offset, 8), // Top\n            getFixedPointNumber(dataView, offset + 4, 8), // Left\n            getFixedPointNumber(dataView, offset + 8, 8), // Botton\n            getFixedPointNumber(dataView, offset + 12, 8), // Right\n        ],\n        getFixedPointNumber(dataView, offset + 16, 8) // Resolution\n    ];\n}\n\nfunction getFixedPointNumber(dataView, offset, binaryPoint) {\n    const number = Types.getLongAt(dataView, offset);\n\n    const sign = (number >>> 31) === 0 ? 1 : -1;\n    const integer = (number & 0x7f000000) >>> (32 - binaryPoint);\n    const fraction = number & parseInt(strRepeat('1', 32 - binaryPoint), 2);\n\n    return sign * parseFloatRadix(integer.toString(2) + '.' + padStart(fraction.toString(2), 32 - binaryPoint, '0'), 2);\n}\n\n// Item key terminology: https://psd-tools.readthedocs.io/en/latest/reference/psd_tools.terminology.html\n// Are these correct? There are collisions that are commented out. A lot of code for little gain?\n// const ITEM_KEY_TERMS = {\n//     'A   ': 'A',\n//     'Adjs': 'Adjustment',\n//     'Algd': 'Aligned',\n//     'Algn': 'Alignment',\n//     'AllE': 'AllExcept',\n//     'All ': 'AllPS',\n//     'AlTl': 'AllToolOptions',\n//     'AChn': 'AlphaChannelOptions',\n//     'AlpC': 'AlphaChannels',\n//     'AmbB': 'AmbientBrightness',\n//     'AmbC': 'AmbientColor',\n//     'Amnt': 'Amount',\n//     'AmMx': 'AmplitudeMax',\n//     'AmMn': 'AmplitudeMin',\n//     'Anch': 'Anchor',\n//     'Angl': 'Angle',\n//     'Ang1': 'Angle1',\n//     'Ang2': 'Angle2',\n//     'Ang3': 'Angle3',\n//     'Ang4': 'Angle4',\n//     'AntA': 'AntiAlias',\n//     'Appe': 'Append',\n//     'Aply': 'Apply',\n//     'Ar  ': 'Area',\n//     'Arrw': 'Arrowhead',\n//     'As  ': 'As',\n//     'Asst': 'AssetBin',\n//     'AssC': 'AssumedCMYK',\n//     'AssG': 'AssumedGray',\n//     'AssR': 'AssumedRGB',\n//     'At  ': 'At',\n//     'Auto': 'Auto',\n//     'AuCo': 'AutoContrast',\n//     'Atrs': 'AutoErase',\n//     'AtKr': 'AutoKern',\n//     'AtUp': 'AutoUpdate',\n//     'Axis': 'Axis',\n//     'B   ': 'B',\n//     'Bckg': 'Background',\n//     'BckC': 'BackgroundColor',\n//     'BckL': 'BackgroundLevel',\n//     'Bwd ': 'Backward',\n//     'Blnc': 'Balance',\n//     'Bsln': 'BaselineShift',\n//     'BpWh': 'BeepWhenDone',\n//     'BgnR': 'BeginRamp',\n//     'BgnS': 'BeginSustain',\n//     'bvlD': 'BevelDirection',\n//     'ebbl': 'BevelEmboss',\n//     'bvlS': 'BevelStyle',\n//     'bvlT': 'BevelTechnique',\n//     'BgNH': 'BigNudgeH',\n//     'BgNV': 'BigNudgeV',\n//     'BtDp': 'BitDepth',\n//     'Blck': 'Black',\n//     'BlcC': 'BlackClip',\n//     'Blcn': 'BlackGeneration',\n//     'BlcG': 'BlackGenerationCurve',\n//     'BlcI': 'BlackIntensity',\n//     'BlcL': 'BlackLevel',\n//     // 'BlcL': 'BlackLimit',\n//     'Bld ': 'Bleed',\n//     'Blnd': 'BlendRange',\n//     'Bl  ': 'Blue',\n//     'BlBl': 'BlueBlackPoint',\n//     'blueFloat': 'BlueFloat',\n//     'BlGm': 'BlueGamma',\n//     'BlWh': 'BlueWhitePoint',\n//     'BlX ': 'BlueX',\n//     'BlY ': 'BlueY',\n//     'blur': 'Blur',\n//     'BlrM': 'BlurMethod',\n//     'BlrQ': 'BlurQuality',\n//     'Bk  ': 'Book',\n//     'BrdT': 'BorderThickness',\n//     'Btom': 'Bottom',\n//     'Brgh': 'Brightness',\n//     'BrsD': 'BrushDetail',\n//     'BrsS': 'BrushSize',\n//     'BrsT': 'BrushType',\n//     'Brsh': 'Brushes',\n//     'BmpA': 'BumpAmplitude',\n//     'BmpC': 'BumpChannel',\n//     'By  ': 'By',\n//     'Byln': 'Byline',\n//     'BylT': 'BylineTitle',\n//     'BytO': 'ByteOrder',\n//     'CMYS': 'CMYKSetup',\n//     'CchP': 'CachePrefs',\n//     'Clcl': 'Calculation',\n//     'Clbr': 'CalibrationBars',\n//     'Cptn': 'Caption',\n//     'CptW': 'CaptionWriter',\n//     'Ctgr': 'Category',\n//     'ClSz': 'CellSize',\n//     'Cntr': 'Center',\n//     'CntC': 'CenterCropMarks',\n//     'ChlA': 'ChalkArea',\n//     'Chnl': 'Channel',\n//     'ChMx': 'ChannelMatrix',\n//     'ChnN': 'ChannelName',\n//     'Chns': 'Channels',\n//     'ChnI': 'ChannelsInterleaved',\n//     'ChAm': 'CharcoalAmount',\n//     'ChrA': 'CharcoalArea',\n//     'Ckmt': 'ChokeMatte',\n//     'ChFX': 'ChromeFX',\n//     'City': 'City',\n//     'ClrA': 'ClearAmount',\n//     'ClPt': 'ClippingPath',\n//     'ClpP': 'ClippingPathEPS',\n//     'ClpF': 'ClippingPathFlatness',\n//     'ClpI': 'ClippingPathIndex',\n//     'Clpg': 'ClippingPathInfo',\n//     'ClnS': 'CloneSource',\n//     'Clsp': 'ClosedSubpath',\n//     'Clr ': 'Color',\n//     'Clrh': 'ColorChannels',\n//     'ClrC': 'ColorCorrection',\n//     'ClrI': 'ColorIndicates',\n//     'ClMg': 'ColorManagement',\n//     'Clrr': 'ColorPickerPrefs',\n//     'ClrS': 'ColorSpace',\n//     'ClrT': 'ColorTable',\n//     'Clrz': 'Colorize',\n//     'Clrs': 'Colors',\n//     'ClrL': 'ColorsList',\n//     'ClmW': 'ColumnWidth',\n//     'CmdK': 'CommandKey',\n//     'Cmpn': 'Compensation',\n//     'Cmpr': 'Compression',\n//     'Cncv': 'Concavity',\n//     'Cndt': 'Condition',\n//     'Cnst': 'Constant',\n//     // 'Cnst': 'Constrain',\n//     'CnsP': 'ConstrainProportions',\n//     'Cfov': 'ConstructionFOV',\n//     'Cntg': 'Contiguous',\n//     'Cntn': 'Continue',\n//     'Cnty': 'Continuity',\n//     'ShpC': 'ContourType',\n//     // 'Cntr': 'Contrast',\n//     'Cnvr': 'Convert',\n//     'Cpy ': 'Copy',\n//     'Cpyr': 'Copyright',\n//     'CprN': 'CopyrightNotice',\n//     'CrnC': 'CornerCropMarks',\n//     'Cnt ': 'Count',\n//     'CntN': 'CountryName',\n//     'CrcB': 'CrackBrightness',\n//     'CrcD': 'CrackDepth',\n//     'CrcS': 'CrackSpacing',\n//     'blfl': 'CreateLayersFromLayerFX',\n//     'Crdt': 'Credit',\n//     'Crss': 'Crossover',\n//     'Crnt': 'Current',\n//     'CrnH': 'CurrentHistoryState',\n//     'CrnL': 'CurrentLight',\n//     'CrnT': 'CurrentToolOptions',\n//     'Crv ': 'Curve',\n//     'CrvF': 'CurveFile',\n//     'Cstm': 'Custom',\n//     'CstF': 'CustomForced',\n//     'CstM': 'CustomMatte',\n//     'CstP': 'CustomPalette',\n//     'Cyn ': 'Cyan',\n//     'DCS ': 'DCS',\n//     'DPXf': 'DPXFormat',\n//     'DrkI': 'DarkIntensity',\n//     'Drkn': 'Darkness',\n//     'DtCr': 'DateCreated',\n//     'Dt ': 'Datum',\n//     'Dfnt': 'Definition',\n//     'Dnst': 'Density',\n//     'Dpth': 'Depth',\n//     'Dstl': 'DestBlackMax',\n//     'DstB': 'DestBlackMin',\n//     'Dstt': 'DestWhiteMax',\n//     'DstW': 'DestWhiteMin',\n//     'DstM': 'DestinationMode',\n//     'Dtl ': 'Detail',\n//     'Dmtr': 'Diameter',\n//     'DffD': 'DiffusionDither',\n//     'Drct': 'Direction',\n//     'DrcB': 'DirectionBalance',\n//     'DspF': 'DisplaceFile',\n//     'DspM': 'DisplacementMap',\n//     'DspP': 'DisplayPrefs',\n//     'Dstn': 'Distance',\n//     // 'Dstr': 'Distortion',\n//     // 'Dstr': 'Distribution',\n//     'Dthr': 'Dither',\n//     'DthA': 'DitherAmount',\n//     'Dthp': 'DitherPreserve',\n//     'Dthq': 'DitherQuality',\n//     'DocI': 'DocumentID',\n//     'DtGn': 'DotGain',\n//     'DtGC': 'DotGainCurves',\n//     'DrSh': 'DropShadow',\n//     'Dplc': 'Duplicate',\n//     'DnmC': 'DynamicColorSliders',\n//     'Edg ': 'Edge',\n//     'EdgB': 'EdgeBrightness',\n//     'EdgF': 'EdgeFidelity',\n//     'EdgI': 'EdgeIntensity',\n//     'EdgS': 'EdgeSimplicity',\n//     'EdgT': 'EdgeThickness',\n//     'EdgW': 'EdgeWidth',\n//     'Effc': 'Effect',\n//     'EmbC': 'EmbedCMYK',\n//     'EmbG': 'EmbedGray',\n//     'EmbL': 'EmbedLab',\n//     'EmbP': 'EmbedProfiles',\n//     'EmbR': 'EmbedRGB',\n//     'EmlD': 'EmulsionDown',\n//     'EGst': 'EnableGestures',\n//     'enab': 'Enabled',\n//     'Encd': 'Encoding',\n//     'End ': 'End',\n//     'EndA': 'EndArrowhead',\n//     'EndR': 'EndRamp',\n//     'EndS': 'EndSustain',\n//     'Engn': 'Engine',\n//     'ErsT': 'EraseToHistory',\n//     'ErsK': 'EraserKind',\n//     'ExcP': 'ExactPoints',\n//     'Expr': 'Export',\n//     'ExpC': 'ExportClipboard',\n//     'Exps': 'Exposure',\n//     'Extd': 'Extend',\n//     'EQlt': 'ExtendedQuality',\n//     'Extn': 'Extension',\n//     'ExtQ': 'ExtensionsQuery',\n//     'ExtD': 'ExtrudeDepth',\n//     'ExtM': 'ExtrudeMaskIncomplete',\n//     'ExtR': 'ExtrudeRandom',\n//     'ExtS': 'ExtrudeSize',\n//     'ExtF': 'ExtrudeSolidFace',\n//     'ExtT': 'ExtrudeType',\n//     'EyDr': 'EyeDropperSample',\n//     'FxCm': 'FPXCompress',\n//     'FxQl': 'FPXQuality',\n//     'FxSz': 'FPXSize',\n//     'FxVw': 'FPXView',\n//     'FdT ': 'FadeTo',\n//     'FdtS': 'FadeoutSteps',\n//     'FlOf': 'Falloff',\n//     'Fthr': 'Feather',\n//     'FbrL': 'FiberLength',\n//     'File': 'File',\n//     'FlCr': 'FileCreator',\n//     'FlIn': 'FileInfo',\n//     'FilR': 'FileReference',\n//     'FlSP': 'FileSavePrefs',\n//     'FlTy': 'FileType',\n//     'flst': 'FilesList',\n//     'Fl  ': 'Fill',\n//     'FlCl': 'FillColor',\n//     'FlNt': 'FillNeutral',\n//     'FlPd': 'FilterLayerPersistentData',\n//     'FlRs': 'FilterLayerRandomSeed',\n//     'Fngr': 'Fingerpainting',\n//     'FlrC': 'FlareCenter',\n//     'Fltn': 'Flatness',\n//     'Fltt': 'Flatten',\n//     'FlpV': 'FlipVertical',\n//     'Fcs ': 'Focus',\n//     'Fldr': 'Folders',\n//     'FntD': 'FontDesignAxes',\n//     'FntV': 'FontDesignAxesVectors',\n//     'FntN': 'FontName',\n//     'Scrp': 'FontScript',\n//     'FntS': 'FontStyleName',\n//     'FntT': 'FontTechnology',\n//     'FrcC': 'ForcedColors',\n//     'FrgC': 'ForegroundColor',\n//     'FrgL': 'ForegroundLevel',\n//     'Fmt ': 'Format',\n//     'Fwd ': 'Forward',\n//     'FrFX': 'FrameFX',\n//     'FrmW': 'FrameWidth',\n//     'FTcs': 'FreeTransformCenterState',\n//     'Frqn': 'Frequency',\n//     'From': 'From',\n//     'FrmB': 'FromBuiltin',\n//     'FrmM': 'FromMode',\n//     'FncK': 'FunctionKey',\n//     'Fzns': 'Fuzziness',\n//     'GCR ': 'GCR',\n//     'GFPT': 'GIFColorFileType',\n//     'GFCL': 'GIFColorLimit',\n//     'GFEC': 'GIFExportCaption',\n//     'GFMI': 'GIFMaskChannelIndex',\n//     'GFMV': 'GIFMaskChannelInverted',\n//     'GFPF': 'GIFPaletteFile',\n//     'GFPL': 'GIFPaletteType',\n//     'GFCS': 'GIFRequiredColorSpaceType',\n//     'GFIT': 'GIFRowOrderType',\n//     'GFTC': 'GIFTransparentColor',\n//     'GFTB': 'GIFTransparentIndexBlue',\n//     'GFTG': 'GIFTransparentIndexGreen',\n//     'GFTR': 'GIFTransparentIndexRed',\n//     'GFBM': 'GIFUseBestMatch',\n//     'Gmm ': 'Gamma',\n//     'GmtW': 'GamutWarning',\n//     'GnrP': 'GeneralPrefs',\n//     'gblA': 'GlobalAngle',\n//     'gagl': 'GlobalLightingAngle',\n//     'Glos': 'Gloss',\n//     'GlwA': 'GlowAmount',\n//     'GlwT': 'GlowTechnique',\n//     'Grad': 'Gradient',\n//     'Grdf': 'GradientFill',\n//     // 'Grn ': 'Grain',\n//     'Grnt': 'GrainType',\n//     'Grns': 'Graininess',\n//     'Gry ': 'Gray',\n//     'GrBh': 'GrayBehavior',\n//     'GrSt': 'GraySetup',\n//     'Grn ': 'Green',\n//     'GrnB': 'GreenBlackPoint',\n//     'greenFloat': 'GreenFloat',\n//     'GrnG': 'GreenGamma',\n//     'GrnW': 'GreenWhitePoint',\n//     'GrnX': 'GreenX',\n//     'GrnY': 'GreenY',\n//     'GrdC': 'GridColor',\n//     'Grds': 'GridCustomColor',\n//     'GrdM': 'GridMajor',\n//     'Grdn': 'GridMinor',\n//     'GrdS': 'GridStyle',\n//     'Grdt': 'GridUnits',\n//     'Grup': 'Group',\n//     'GrtW': 'GroutWidth',\n//     'GrwS': 'GrowSelection',\n//     'Gdes': 'Guides',\n//     'GdsC': 'GuidesColor',\n//     'Gdss': 'GuidesCustomColor',\n//     'GdPr': 'GuidesPrefs',\n//     'GdsS': 'GuidesStyle',\n//     'GttW': 'GutterWidth',\n//     'HlfF': 'HalftoneFile',\n//     'HlfS': 'HalftoneScreen',\n//     'HlSz': 'HalftoneSize',\n//     'Hlfp': 'HalftoneSpec',\n//     'Hrdn': 'Hardness',\n//     'HCdH': 'HasCmdHPreference',\n//     'Hdr ': 'Header',\n//     'Hdln': 'Headline',\n//     'Hght': 'Height',\n//     'HghA': 'HighlightArea',\n//     'hglC': 'HighlightColor',\n//     'HghL': 'HighlightLevels',\n//     'hglM': 'HighlightMode',\n//     'hglO': 'HighlightOpacity',\n//     'HghS': 'HighlightStrength',\n//     'HstB': 'HistoryBrushSource',\n//     'HstP': 'HistoryPrefs',\n//     'HsSS': 'HistoryStateSource',\n//     'HsSt': 'HistoryStates',\n//     'Hrzn': 'Horizontal',\n//     'HrzS': 'HorizontalScale',\n//     'HstN': 'HostName',\n//     'HstV': 'HostVersion',\n//     'H   ': 'Hue',\n//     'ICCE': 'ICCEngine',\n//     'ICCt': 'ICCSetupName',\n//     'Idnt': 'ID',\n//     'Idle': 'Idle',\n//     'ImgB': 'ImageBalance',\n//     'Impr': 'Import',\n//     'Imps': 'Impressionist',\n//     'In  ': 'In',\n//     'c@#^': 'Inherits',\n//     'InkC': 'InkColors',\n//     'Inks': 'Inks',\n//     'IrGl': 'InnerGlow',\n//     'glwS': 'InnerGlowSource',\n//     'IrSh': 'InnerShadow',\n//     'Inpt': 'Input',\n//     'kIBP': 'InputBlackPoint',\n//     'Inmr': 'InputMapRange',\n//     'Inpr': 'InputRange',\n//     'kIWP': 'InputWhitePoint',\n//     'Intn': 'Intensity',\n//     'Inte': 'Intent',\n//     'IntH': 'InterfaceBevelHighlight',\n//     'Intv': 'InterfaceBevelShadow',\n//     'IntB': 'InterfaceBlack',\n//     'Intd': 'InterfaceBorder',\n//     'Intk': 'InterfaceButtonDarkShadow',\n//     'Intt': 'InterfaceButtonDownFill',\n//     'InBF': 'InterfaceButtonUpFill',\n//     'ICBL': 'InterfaceColorBlue2',\n//     'ICBH': 'InterfaceColorBlue32',\n//     'ICGL': 'InterfaceColorGreen2',\n//     'ICGH': 'InterfaceColorGreen32',\n//     'ICRL': 'InterfaceColorRed2',\n//     'ICRH': 'InterfaceColorRed32',\n//     'IntI': 'InterfaceIconFillActive',\n//     'IntF': 'InterfaceIconFillDimmed',\n//     'Intc': 'InterfaceIconFillSelected',\n//     'Intm': 'InterfaceIconFrameActive',\n//     // 'Intr': 'InterfaceIconFrameDimmed',\n//     'IntS': 'InterfaceIconFrameSelected',\n//     'IntP': 'InterfacePaletteFill',\n//     'IntR': 'InterfaceRed',\n//     'IntT': 'InterfaceToolTipBackground',\n//     'ITTT': 'InterfaceToolTipText',\n//     'ITBg': 'InterfaceTransparencyBackground',\n//     'ITFg': 'InterfaceTransparencyForeground',\n//     'IntW': 'InterfaceWhite',\n//     // 'Intr': 'Interlace',\n//     'IntC': 'InterlaceCreateType',\n//     'IntE': 'InterlaceEliminateType',\n//     // 'Intr': 'Interpolation',\n//     'IntM': 'InterpolationMethod',\n//     'Invr': 'Invert',\n//     'InvM': 'InvertMask',\n//     'InvS': 'InvertSource2',\n//     'InvT': 'InvertTexture',\n//     'IsDr': 'IsDirty',\n//     'ItmI': 'ItemIndex',\n//     'JPEQ': 'JPEGQuality',\n//     'Krng': 'Kerning',\n//     'Kywd': 'Keywords',\n//     'Knd ': 'Kind',\n//     'LTnm': 'LUTAnimation',\n//     'LZWC': 'LZWCompression',\n//     'Lbls': 'Labels',\n//     'Lnds': 'Landscape',\n//     'LstT': 'LastTransform',\n//     'Lyr ': 'Layer',\n//     'Lefx': 'LayerEffects',\n//     'lfxv': 'LayerFXVisible',\n//     'LyrI': 'LayerID',\n//     'LyrN': 'LayerName',\n//     'Lyrs': 'Layers',\n//     'Ldng': 'Leading',\n//     'Left': 'Left',\n//     'lSNs': 'LegacySerialString',\n//     // 'Lngt': 'Length',\n//     'Lns ': 'Lens',\n//     'Lvl ': 'Level',\n//     'Lvls': 'Levels',\n//     'LgDr': 'LightDark',\n//     'LghD': 'LightDirection',\n//     'LghI': 'LightIntensity',\n//     'LghP': 'LightPosition',\n//     'LghS': 'LightSource',\n//     'LghT': 'LightType',\n//     'LghG': 'LightenGrout',\n//     'Lght': 'Lightness',\n//     'Line': 'Line',\n//     'lnkE': 'LinkEnable',\n//     'LnkL': 'LinkedLayerIDs',\n//     'Lald': 'LocalLightingAltitude',\n//     'lagl': 'LocalLightingAngle',\n//     'LclR': 'LocalRange',\n//     'Lctn': 'Location',\n//     'Log ': 'Log',\n//     'kLog': 'Logarithmic',\n//     'LwCs': 'LowerCase',\n//     'Lmnc': 'Luminance',\n//     'Mgnt': 'Magenta',\n//     'MkVs': 'MakeVisible',\n//     'Mfov': 'ManipulationFOV',\n//     'MpBl': 'MapBlack',\n//     'Mpng': 'Mapping',\n//     'MpgS': 'MappingShape',\n//     'Mtrl': 'Material',\n//     'Mtrx': 'Matrix',\n//     'MttC': 'MatteColor',\n//     'Mxm ': 'Maximum',\n//     'MxmS': 'MaximumStates',\n//     'MmrU': 'MemoryUsagePercent',\n//     'Mrge': 'Merge',\n//     'Mrgd': 'Merged',\n//     'Msge': 'Message',\n//     'Mthd': 'Method',\n//     'MztT': 'MezzotintType',\n//     'Mdpn': 'Midpoint',\n//     'MdtL': 'MidtoneLevels',\n//     'Mnm ': 'Minimum',\n//     'MsmC': 'MismatchCMYK',\n//     'MsmG': 'MismatchGray',\n//     'MsmR': 'MismatchRGB',\n//     'Md  ': 'Mode',\n//     'Mnch': 'Monochromatic',\n//     'MvT ': 'MoveTo',\n//     'Nm  ': 'Name',\n//     'Ngtv': 'Negative',\n//     'Nw  ': 'New',\n//     'Nose': 'Noise',\n//     'NnIm': 'NonImageData',\n//     'NnLn': 'NonLinear',\n//     'null': 'Null',\n//     'Nm L': 'NumLights',\n//     'Nmbr': 'Number',\n//     'NCch': 'NumberOfCacheLevels',\n//     'NC64': 'NumberOfCacheLevels64',\n//     'NmbO': 'NumberOfChannels',\n//     'NmbC': 'NumberOfChildren',\n//     'NmbD': 'NumberOfDocuments',\n//     'NmbG': 'NumberOfGenerators',\n//     // 'NmbL': 'NumberOfLayers',\n//     // 'NmbL': 'NumberOfLevels',\n//     'NmbP': 'NumberOfPaths',\n//     'NmbR': 'NumberOfRipples',\n//     'NmbS': 'NumberOfSiblings',\n//     'ObjN': 'ObjectName',\n//     'Ofst': 'Offset',\n//     'Sftt': 'OldSmallFontType',\n//     'On  ': 'On',\n//     'Opct': 'Opacity',\n//     'Optm': 'Optimized',\n//     'Ornt': 'Orientation',\n//     'OrgH': 'OriginalHeader',\n//     'OrgT': 'OriginalTransmissionReference',\n//     'OthC': 'OtherCursors',\n//     'OrGl': 'OuterGlow',\n//     'Otpt': 'Output',\n//     'kOBP': 'OutputBlackPoint',\n//     'kOWP': 'OutputWhitePoint',\n//     'OvrC': 'OverprintColors',\n//     'OvrO': 'OverrideOpen',\n//     'ObrP': 'OverridePrinter',\n//     'Ovrd': 'OverrideSave',\n//     'PNGf': 'PNGFilter',\n//     'PGIT': 'PNGInterlaceType',\n//     'PMpf': 'PageFormat',\n//     'PgNm': 'PageNumber',\n//     'PgPs': 'PagePosition',\n//     'PgSt': 'PageSetup',\n//     'PnCK': 'PaintCursorKind',\n//     'PntT': 'PaintType',\n//     'PntC': 'PaintingCursors',\n//     'Plt ': 'Palette',\n//     'PltF': 'PaletteFile',\n//     'PprB': 'PaperBrightness',\n//     'PrIn': 'ParentIndex',\n//     'PrNm': 'ParentName',\n//     'Path': 'Path',\n//     'PthC': 'PathContents',\n//     'PthN': 'PathName',\n//     'Pttn': 'Pattern',\n//     'Pncl': 'PencilWidth',\n//     'Prsp': 'PerspectiveIndex',\n//     'Phsp': 'Phosphors',\n//     'PckI': 'PickerID',\n//     'Pckr': 'PickerKind',\n//     'PPSz': 'PixelPaintSize',\n//     'Pltf': 'Platform',\n//     'PlgF': 'PluginFolder',\n//     'PlgP': 'PluginPrefs',\n//     'Pts ': 'Points',\n//     'Pstn': 'Position',\n//     'PstS': 'PostScriptColor',\n//     'Pstr': 'Posterization',\n//     'PrdC': 'PredefinedColors',\n//     'PrfB': 'PreferBuiltin',\n//     'Prfr': 'Preferences',\n//     'PrsA': 'PreserveAdditional',\n//     'PrsL': 'PreserveLuminosity',\n//     'PrsT': 'PreserveTransparency',\n//     'Prs ': 'Pressure',\n//     'Prvw': 'Preview',\n//     'PrvK': 'PreviewCMYK',\n//     'PrvF': 'PreviewFullSize',\n//     'PrvI': 'PreviewIcon',\n//     'PrvM': 'PreviewMacThumbnail',\n//     'PrvW': 'PreviewWinThumbnail',\n//     'PrvQ': 'PreviewsQuery',\n//     'PMps': 'PrintSettings',\n//     'PrfS': 'ProfileSetup',\n//     'PrvS': 'ProvinceState',\n//     'Qlty': 'Quality',\n//     'QucM': 'QuickMask',\n//     'RGBS': 'RGBSetup',\n//     'Rds ': 'Radius',\n//     'RndS': 'RandomSeed',\n//     'Rt  ': 'Ratio',\n//     'Rcnf': 'RecentFiles',\n//     'Rd  ': 'Red',\n//     'RdBl': 'RedBlackPoint',\n//     'redFloat': 'RedFloat',\n//     'RdGm': 'RedGamma',\n//     'RdWh': 'RedWhitePoint',\n//     'RdX ': 'RedX',\n//     'RdY ': 'RedY',\n//     'RgsM': 'RegistrationMarks',\n//     'Rltv': 'Relative',\n//     'Rlf ': 'Relief',\n//     'Rfid': 'RenderFidelity',\n//     'Rsmp': 'Resample',\n//     'RWOZ': 'ResizeWindowsOnZoom',\n//     'Rslt': 'Resolution',\n//     'RsrI': 'ResourceID',\n//     'Rspn': 'Response',\n//     'RtnH': 'RetainHeader',\n//     'Rvrs': 'Reverse',\n//     'Rght': 'Right',\n//     'RplM': 'RippleMagnitude',\n//     'RplS': 'RippleSize',\n//     'Rtt ': 'Rotate',\n//     'Rndn': 'Roundness',\n//     'RlrH': 'RulerOriginH',\n//     'RlrV': 'RulerOriginV',\n//     'RlrU': 'RulerUnits',\n//     // 'Strt': 'Saturation',\n//     'SvAn': 'SaveAndClose',\n//     'SvCm': 'SaveComposite',\n//     'PltL': 'SavePaletteLocations',\n//     'SvPt': 'SavePaths',\n//     'SvPy': 'SavePyramids',\n//     'Svng': 'Saving',\n//     'Scl ': 'Scale',\n//     'SclH': 'ScaleHorizontal',\n//     'SclV': 'ScaleVertical',\n//     'Scln': 'Scaling',\n//     'Scns': 'Scans',\n//     'ScrD': 'ScratchDisks',\n//     'ScrF': 'ScreenFile',\n//     'ScrT': 'ScreenType',\n//     'Sprt': 'Separations',\n//     'SrlS': 'SerialString',\n//     // 'ShdI': 'ShadingIntensity',\n//     'ShdN': 'ShadingNoise',\n//     'ShdS': 'ShadingShape',\n//     'sdwC': 'ShadowColor',\n//     // 'ShdI': 'ShadowIntensity',\n//     'ShdL': 'ShadowLevels',\n//     'sdwM': 'ShadowMode',\n//     'sdwO': 'ShadowOpacity',\n//     'Shp ': 'Shape',\n//     'Shrp': 'Sharpness',\n//     'ShrE': 'ShearEd',\n//     'ShrP': 'ShearPoints',\n//     'ShrS': 'ShearSt',\n//     'ShfK': 'ShiftKey',\n//     'ShKT': 'ShiftKeyToolSwitch',\n//     'ShrN': 'ShortNames',\n//     'ShwE': 'ShowEnglishFontNames',\n//     'SwMC': 'ShowMenuColors',\n//     'ShwT': 'ShowToolTips',\n//     'ShTr': 'ShowTransparency',\n//     'Sz  ': 'SizeKey',\n//     'Skew': 'Skew',\n//     'Sfts': 'SmallFontType',\n//     'SmBM': 'SmartBlurMode',\n//     'SmBQ': 'SmartBlurQuality',\n//     'Smoo': 'Smooth',\n//     'Smth': 'Smoothness',\n//     'SnpI': 'SnapshotInitial',\n//     'SfCl': 'SoftClip',\n//     'Sftn': 'Softness',\n//     'SoFi': 'SolidFill',\n//     'Srce': 'Source',\n//     'Src2': 'Source2',\n//     'SrcM': 'SourceMode',\n//     'Spcn': 'Spacing',\n//     'SpcI': 'SpecialInstructions',\n//     'SphM': 'SpherizeMode',\n//     'Spot': 'Spot',\n//     'SprR': 'SprayRadius',\n//     'SqrS': 'SquareSize',\n//     'Srcl': 'SrcBlackMax',\n//     'SrcB': 'SrcBlackMin',\n//     'Srcm': 'SrcWhiteMax',\n//     'SrcW': 'SrcWhiteMin',\n//     // 'Strt': 'Start',\n//     'StrA': 'StartArrowhead',\n//     'Stte': 'State',\n//     'srgh': 'Strength',\n//     'srgR': 'StrengthRatio',\n//     'Strg': 'Strength_PLUGIN',\n//     'StDt': 'StrokeDetail',\n//     'SDir': 'StrokeDirection',\n//     'StrL': 'StrokeLength',\n//     'StrP': 'StrokePressure',\n//     'StrS': 'StrokeSize',\n//     'StrW': 'StrokeWidth',\n//     'Styl': 'Style',\n//     'Stys': 'Styles',\n//     'StlC': 'StylusIsColor',\n//     'StlO': 'StylusIsOpacity',\n//     'StlP': 'StylusIsPressure',\n//     'StlS': 'StylusIsSize',\n//     'SbpL': 'SubPathList',\n//     'SplC': 'SupplementalCategories',\n//     'SstI': 'SystemInfo',\n//     'SstP': 'SystemPalette',\n//     // 'null': 'Target',\n//     'Trgp': 'TargetPath',\n//     'TrgP': 'TargetPathIndex',\n//     // 'Lngt': 'TermLength',\n//     'Txt ': 'Text',\n//     // 'TxtC': 'TextClickPoint',\n//     'TxtD': 'TextData',\n//     'TxtS': 'TextStyle',\n//     'Txtt': 'TextStyleRange',\n//     'Txtr': 'Texture',\n//     // 'TxtC': 'TextureCoverage',\n//     'TxtF': 'TextureFile',\n//     'TxtT': 'TextureType',\n//     'Thsh': 'Threshold',\n//     'TlNm': 'TileNumber',\n//     'TlOf': 'TileOffset',\n//     'TlSz': 'TileSize',\n//     'Ttl ': 'Title',\n//     'T   ': 'To',\n//     'TBl ': 'ToBuiltin',\n//     'ToLk': 'ToLinked',\n//     'TMd ': 'ToMode',\n//     'TglO': 'ToggleOthers',\n//     'Tlrn': 'Tolerance',\n//     'Top ': 'Top',\n//     'TtlL': 'TotalLimit',\n//     'Trck': 'Tracking',\n//     'TrnF': 'TransferFunction',\n//     // 'TrnS': 'TransferSpec',\n//     'Trns': 'Transparency',\n//     // 'TrnG': 'TransparencyGrid',\n//     'TrnC': 'TransparencyGridColors',\n//     // 'TrnG': 'TransparencyGridSize',\n//     'TrnP': 'TransparencyPrefs',\n//     // 'TrnS': 'TransparencyShape',\n//     'TrnI': 'TransparentIndex',\n//     'TrnW': 'TransparentWhites',\n//     'Twst': 'Twist',\n//     'Type': 'Type',\n//     'UC  ': 'UCA',\n//     'URL ': 'URL',\n//     'UndA': 'UndefinedArea',\n//     'Undl': 'Underline',\n//     'UntP': 'UnitsPrefs',\n//     'Untl': 'Untitled',\n//     'UppY': 'UpperY',\n//     'Urgn': 'Urgency',\n//     'AcrS': 'UseAccurateScreens',\n//     'AdPl': 'UseAdditionalPlugins',\n//     'UsCc': 'UseCacheForHistograms',\n//     'UsCr': 'UseCurves',\n//     'UsDf': 'UseDefault',\n//     'uglg': 'UseGlobalAngle',\n//     'UsIC': 'UseICCProfile',\n//     'UsMs': 'UseMask',\n//     'UsrM': 'UserMaskEnabled',\n//     'Usrs': 'UserMaskLinked',\n//     'Usng': 'Using',\n//     'Vl  ': 'Value',\n//     'Vrnc': 'Variance',\n//     'Vct0': 'Vector0',\n//     'Vct1': 'Vector1',\n//     'VctC': 'VectorColor',\n//     'VrsF': 'VersionFix',\n//     'VrsM': 'VersionMajor',\n//     'VrsN': 'VersionMinor',\n//     'Vrtc': 'Vertical',\n//     'VrtS': 'VerticalScale',\n//     'Vdlp': 'VideoAlpha',\n//     'Vsbl': 'Visible',\n//     'WtcS': 'WatchSuspension',\n//     'watr': 'Watermark',\n//     'Wvtp': 'WaveType',\n//     'WLMx': 'WavelengthMax',\n//     'WLMn': 'WavelengthMin',\n//     'WbdP': 'WebdavPrefs',\n//     'Wtdg': 'WetEdges',\n//     'What': 'What',\n//     'WhtC': 'WhiteClip',\n//     'WhtI': 'WhiteIntensity',\n//     'WhHi': 'WhiteIsHigh',\n//     'WhtL': 'WhiteLevel',\n//     'WhtP': 'WhitePoint',\n//     'WhPt': 'WholePath',\n//     'Wdth': 'Width',\n//     'WndM': 'WindMethod',\n//     'With': 'With',\n//     'WrPt': 'WorkPath',\n//     'WrkP': 'WorkPathIndex',\n//     'X   ': 'X',\n//     'Y   ': 'Y',\n//     'Ylw ': 'Yellow',\n//     'ZZTy': 'ZigZagType',\n//     'Alis': '_3DAntiAlias',\n// };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: https://www.adobe.com/devnet-apps/photoshop/fileformatashtml/\n\nimport {getDataView, getStringFromDataView, getPascalStringFromDataView} from './utils.js';\nimport Types from './types.js';\nimport TagNames from './photoshop-tag-names.js';\n\nexport default {\n    read\n};\n\nconst SIGNATURE = '8BIM';\nconst TAG_ID_SIZE = 2;\nconst RESOURCE_LENGTH_SIZE = 4;\n\nconst SIGNATURE_SIZE = SIGNATURE.length;\n\nfunction read(bytes, includeUnknown) {\n    const dataView = getDataView(new Uint8Array(bytes).buffer);\n    const tags = {};\n    let offset = 0;\n\n    while (offset < bytes.length) {\n        const signature = getStringFromDataView(dataView, offset, SIGNATURE_SIZE);\n        offset += SIGNATURE_SIZE;\n        const tagId = Types.getShortAt(dataView, offset);\n        offset += TAG_ID_SIZE;\n        const {tagName, tagNameSize} = getTagName(dataView, offset);\n        offset += tagNameSize;\n        const resourceSize = Types.getLongAt(dataView, offset);\n        offset += RESOURCE_LENGTH_SIZE;\n        if (signature === SIGNATURE) {\n            const valueDataView = getDataView(dataView.buffer, offset, resourceSize);\n            const tag = {\n                id: tagId,\n                value: getStringFromDataView(valueDataView, 0, resourceSize),\n            };\n            if (TagNames[tagId]) {\n                try {\n                    tag.description = TagNames[tagId].description(valueDataView);\n                } catch (error) {\n                    tag.description = '<no description formatter>';\n                }\n                tags[tagName ? tagName : TagNames[tagId].name] = tag;\n            } else if (includeUnknown) {\n                tags[`undefined-${tagId}`] = tag;\n            }\n        }\n        offset += resourceSize + (resourceSize % 2);\n    }\n\n    return tags;\n}\n\nfunction getTagName(dataView, offset) {\n    // The name is encoded as a Pascal string (the string is prefixed with one\n    // byte containing the length of the string) and everything is padded with a\n    // null byte to make the size even.\n    const [stringSize, string] = getPascalStringFromDataView(dataView, offset);\n    return {\n        tagName: string,\n        tagNameSize: 1 + stringSize + (stringSize % 2 === 0 ? 1 : 0)\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView, decompress, COMPRESSION_METHOD_NONE, COMPRESSION_METHOD_DEFLATE} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continuous array of bytes.\n// Compressed ICC profile data only has support for a single chunk.\nfunction read(dataView, iccData, async) {\n    if (async && iccData[0].compressionMethod !== COMPRESSION_METHOD_NONE) {\n        return readCompressedIcc(dataView, iccData);\n    }\n\n    return readIcc(dataView, iccData);\n}\n\nfunction readCompressedIcc(dataView, iccData) {\n    if (!compressionMethodIsSupported(iccData[0].compressionMethod)) {\n        return {};\n    }\n    const compressedDataView = new DataView(dataView.buffer.slice(iccData[0].offset, iccData[0].offset + iccData[0].length));\n    return decompress(compressedDataView, iccData[0].compressionMethod, 'dataview')\n        .then(parseTags)\n        .catch(() => ({}));\n}\n\nfunction compressionMethodIsSupported(compressionMethod) {\n    return compressionMethod === COMPRESSION_METHOD_DEFLATE;\n}\n\nfunction readIcc(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringValueFromArray, getStringFromDataView, decompress, COMPRESSION_METHOD_NONE} from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport {TYPE_TEXT, TYPE_ITXT, TYPE_ZTXT} from './image-header-png.js';\nimport Tags from './tags.js';\nimport IptcTags from './iptc-tags.js';\nimport Constants from './constants.js';\n\nexport default {\n    read\n};\n\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_ITXT_EXTRA_BYTE = 1;\nconst COMPRESSION_FLAG_COMPRESSED = 1;\nconst EXIF_OFFSET = 6;\n\nfunction read(dataView, pngTextChunks, async, includeUnknown) {\n    const tags = {};\n    const tagsPromises = [];\n    for (let i = 0; i < pngTextChunks.length; i++) {\n        const {offset, length, type} = pngTextChunks[i];\n        const nameAndValue = getNameAndValue(dataView, offset, length, type, async);\n        if (nameAndValue instanceof Promise) {\n            tagsPromises.push(nameAndValue.then(({name, value, description}) => {\n                try {\n                    if (Constants.USE_EXIF && isExifGroupTag(name, value)) {\n                        return {\n                            __exif: Tags.read(decodeRawData(value), EXIF_OFFSET, includeUnknown)\n                        };\n                    } else if (Constants.USE_IPTC && isIptcGroupTag(name, value)) {\n                        return {\n                            __iptc: IptcTags.read(decodeRawData(value), 0, includeUnknown)\n                        };\n                    } else if (name) {\n                        return {\n                            [name]: {\n                                value,\n                                description\n                            }\n                        };\n                    }\n                } catch (error) {\n                    // Ignore the broken tag.\n                }\n                return {};\n            }));\n        } else {\n            const {name, value, description} = nameAndValue;\n            if (name) {\n                tags[name] = {\n                    value,\n                    description\n                };\n            }\n        }\n    }\n\n    return {\n        readTags: tags,\n        readTagsPromise: tagsPromises.length > 0 ? Promise.all(tagsPromises) : undefined\n    };\n}\n\nfunction getNameAndValue(dataView, offset, length, type, async) {\n    const keywordChars = [];\n    const langChars = [];\n    const translatedKeywordChars = [];\n    let valueChars;\n    let parsingState = STATE_KEYWORD;\n    let compressionMethod = COMPRESSION_METHOD_NONE;\n\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        if (parsingState === STATE_COMPRESSION) {\n            compressionMethod = getCompressionMethod({type, dataView, offset: offset + i});\n            if (type === TYPE_ITXT) {\n                i += COMPRESSION_SECTION_ITXT_EXTRA_BYTE;\n            }\n            parsingState = moveToNextState(type, parsingState);\n            continue;\n        } else if (parsingState === STATE_TEXT) {\n            valueChars = new DataView(dataView.buffer.slice(offset + i, offset + length));\n            break;\n        }\n        const byte = dataView.getUint8(offset + i);\n        if (byte === 0) {\n            parsingState = moveToNextState(type, parsingState);\n        } else if (parsingState === STATE_KEYWORD) {\n            keywordChars.push(byte);\n        } else if (parsingState === STATE_LANG) {\n            langChars.push(byte);\n        } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n            translatedKeywordChars.push(byte);\n        }\n    }\n\n    if (compressionMethod !== COMPRESSION_METHOD_NONE && !async) {\n        return {};\n    }\n    const decompressedValueChars = decompress(valueChars, compressionMethod);\n    if (decompressedValueChars instanceof Promise) {\n        return decompressedValueChars\n            .then((_decompressedValueChars) => constructTag(_decompressedValueChars, type, langChars, keywordChars))\n            .catch(() => constructTag('<text using unknown compression>'.split(''), type, langChars, keywordChars));\n    }\n    return constructTag(decompressedValueChars, type, langChars, keywordChars);\n}\n\nfunction getCompressionMethod({type, dataView, offset}) {\n    if (type === TYPE_ITXT) {\n        if (dataView.getUint8(offset) === COMPRESSION_FLAG_COMPRESSED) {\n            return dataView.getUint8(offset + 1);\n        }\n    } else if (type === TYPE_ZTXT) {\n        return dataView.getUint8(offset);\n    }\n    return COMPRESSION_METHOD_NONE;\n}\n\nfunction moveToNextState(type, parsingState) {\n    if (parsingState === STATE_KEYWORD && [TYPE_ITXT, TYPE_ZTXT].includes(type)) {\n        return STATE_COMPRESSION;\n    }\n    if (parsingState === STATE_COMPRESSION) {\n        if (type === TYPE_ITXT) {\n            return STATE_LANG;\n        }\n        return STATE_TEXT;\n    }\n    if (parsingState === STATE_LANG) {\n        return STATE_TRANSLATED_KEYWORD;\n    }\n    return STATE_TEXT;\n}\n\nfunction constructTag(valueChars, type, langChars, keywordChars) {\n    const value = getValue(valueChars);\n    return {\n        name: getName(type, langChars, keywordChars),\n        value,\n        description: type === TYPE_ITXT ? getDescription(valueChars) : value\n    };\n}\n\nfunction getName(type, langChars, keywordChars) {\n    const name = getStringValueFromArray(keywordChars);\n    if (type === TYPE_TEXT || langChars.length === 0) {\n        return name;\n    }\n    const lang = getStringValueFromArray(langChars);\n    return `${name} (${lang})`;\n}\n\nfunction getValue(valueChars) {\n    if (valueChars instanceof DataView) {\n        return getStringFromDataView(valueChars, 0, valueChars.byteLength);\n    }\n    return valueChars;\n}\n\nfunction getDescription(valueChars) {\n    return TagDecoder.decode('UTF-8', valueChars);\n}\n\nfunction isExifGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type exif' && value.substring(1, 5) === 'exif';\n}\n\nfunction isIptcGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type iptc' && value.substring(1, 5) === 'iptc';\n}\n\nfunction decodeRawData(value) {\n    const parts = value.match(/\\n(exif|iptc)\\n\\s*\\d+\\n([\\s\\S]*)$/);\n    return hexToDataView(parts[2].replace(/\\n/g, ''));\n}\n\nfunction hexToDataView(hex) {\n    const dataView = new DataView(new ArrayBuffer(hex.length / 2));\n    for (let i = 0; i < hex.length; i += 2) {\n        dataView.setUint8(i / 2, parseInt(hex.substring(i, i + 2), 16));\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME} from './image-header-png.js';\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunkOffsets) {\n    const tags = {};\n\n    for (let i = 0; i < chunkOffsets.length; i++) {\n        const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n        const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n\n        if (chunkType === TYPE_PHYS) {\n            tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n        } else if (chunkType === TYPE_TIME) {\n            tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n        }\n    }\n\n    return tags;\n}\n\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 0;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 4;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 8;\n    const TAG_SIZE = 1;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: value === 1 ? 'meters' : 'Unknown'\n    };\n}\n\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n    const TIME_TAG_SIZE = 7;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n        return undefined;\n    }\n\n    const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n    const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n    const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n    const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n    const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n    const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n\n    return {\n        value: [year, month, day, hours, minutes, seconds],\n        description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n    };\n}\n\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n    return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\n\nfunction pad(number, size) {\n    return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nconst IMAGE_WIDTH_OFFSET = 4;\nconst IMAGE_HEIGHT_OFFSET = 7;\n\n// https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\nfunction read(dataView, chunkOffset) {\n    const tags = {};\n\n    const flags = Types.getByteAt(dataView, chunkOffset);\n\n    tags['Alpha'] = getAlpha(flags);\n    tags['Animation'] = getAnimation(flags);\n    tags['ImageWidth'] = getThreeByteValue(dataView, chunkOffset + IMAGE_WIDTH_OFFSET);\n    tags['ImageHeight'] = getThreeByteValue(dataView, chunkOffset + IMAGE_HEIGHT_OFFSET);\n\n    return tags;\n}\n\nfunction getAlpha(flags) {\n    const value = flags & 0x10;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getAnimation(flags) {\n    const value = flags & 0x02;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getThreeByteValue(dataView, offset) {\n    // Values are stored little-endian.\n    const value = Types.getByteAt(dataView, offset)\n        + 256 * Types.getByteAt(dataView, offset + 1)\n        + 256 * 256 * Types.getByteAt(dataView, offset + 2)\n        + 1; // Value is 1-based, i.e. a value of 7 means 8px.\n\n    return {\n        value,\n        description: value + 'px'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// https://www.w3.org/Graphics/GIF/spec-gif87.txt\n// https://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView) {\n    return {\n        'GIF Version': getGifVersion(dataView),\n        'Image Width': getImageWidth(dataView),\n        'Image Height': getImageHeight(dataView),\n        'Global Color Map': getGlobalColorMap(dataView),\n        'Bits Per Pixel': getBitDepth(dataView),\n        'Color Resolution Depth': getColorResolution(dataView)\n    };\n}\n\nfunction getGifVersion(dataView) {\n    const OFFSET = 3;\n    const SIZE = 3;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = getStringFromDataView(dataView, OFFSET, SIZE);\n    return {\n        value,\n        description: value\n    };\n}\n\nfunction getImageWidth(dataView) {\n    const OFFSET = 6;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView) {\n    const OFFSET = 8;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getGlobalColorMap(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b10000000) >>> 7;\n    return {\n        value,\n        description: value === 1 ? 'Yes' : 'No'\n    };\n}\n\nfunction getColorResolution(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = ((byteValue & 0b01110000) >>> 4) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n\nfunction getBitDepth(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b00000111) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign, dataUriToBuffer} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport MpfTags from './mpf-tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport PhotoshopTags from './photoshop-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Vp8xTags from './vp8x-tags.js';\nimport GifFileTags from './gif-file-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {}) {\n    if (isFilePathOrURL(data)) {\n        options.async = true;\n        return loadFile(data, options).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        options.async = true;\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename, options) {\n    if (/^\\w+:\\/\\//.test(filename)) {\n        if (typeof fetch !== 'undefined') {\n            return fetchRemoteFile(filename, options);\n        }\n\n        return nodeGetRemoteFile(filename, options);\n    }\n\n    if (isDataUri(filename)) {\n        return Promise.resolve(dataUriToBuffer(filename));\n    }\n\n    return loadLocalFile(filename, options);\n}\n\nfunction fetchRemoteFile(url, {length} = {}) {\n    const options = {method: 'GET'};\n    if (Number.isInteger(length) && length >= 0) {\n        options.headers = {\n            range: `bytes=0-${length - 1}`,\n        };\n    }\n    return fetch(url, options).then((response) => response.arrayBuffer());\n}\n\nfunction nodeGetRemoteFile(url, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const options = {};\n        if (Number.isInteger(length) && length >= 0) {\n            options.headers = {\n                range: `bytes=0-${length - 1}`,\n            };\n        }\n\n        const get = requireNodeGet(url);\n        get(url, options, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction isDataUri(filename) {\n    return /^data:[^;,]*(;base64)?,/.test(filename);\n}\n\nfunction loadLocalFile(filename, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n                        const buffer = Buffer.alloc(size);\n                        const options = {\n                            buffer,\n                            length: size\n                        };\n                        fs.read(fd, options, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof window !== 'undefined') && (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(\n    dataView,\n    {expanded = false, async = false, includeUnknown = false} = {expanded: false, async: false, includeUnknown: false}\n) {\n    let foundMetaData = false;\n    let tags = {};\n    const tagsPromises = [];\n\n    const {\n        fileType,\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset,\n        pngTextChunks,\n        pngChunkOffsets,\n        vp8xChunkOffset,\n        gifHeaderOffset\n    } = ImageHeader.parseAppMarkers(dataView, async);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_PHOTOSHOP && readTags['ImageSourceData']) {\n            const readPhotoshopTags = PhotoshopTags.read(readTags['PhotoshopSettings'].value, includeUnknown);\n            if (expanded) {\n                tags.photoshop = readPhotoshopTags;\n            } else {\n                tags = objectAssign({}, tags, readPhotoshopTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks, async);\n        if (readTags instanceof Promise) {\n            tagsPromises.push(readTags.then(addIccTags));\n        } else {\n            addIccTags(readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = MpfTags.read(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n        foundMetaData = true;\n        const {readTags, readTagsPromise} = PngTextTags.read(dataView, pngTextChunks, async, includeUnknown);\n        addPngTextTags(readTags);\n        if (readTagsPromise) {\n            tagsPromises.push(readTagsPromise.then((tagList) => tagList.forEach(addPngTextTags)));\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n        foundMetaData = true;\n        const readTags = PngTags.read(dataView, pngChunkOffsets);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_WEBP && hasVp8xData(vp8xChunkOffset)) {\n        foundMetaData = true;\n        const readTags = Vp8xTags.read(dataView, vp8xChunkOffset);\n        if (expanded) {\n            tags.riff = !tags.riff ? readTags : objectAssign({}, tags.riff, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_GIF && hasGifFileData(gifHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = GifFileTags.read(dataView, gifHeaderOffset);\n        if (expanded) {\n            tags.gif = !tags.gif ? readTags : objectAssign({}, tags.gif, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (fileType) {\n        if (expanded) {\n            if (!tags.file) {\n                tags.file = {};\n            }\n            tags.file.FileType = fileType;\n        } else {\n            tags.FileType = fileType;\n        }\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    if (async) {\n        return Promise.all(tagsPromises).then(() => tags);\n    }\n    return tags;\n\n    function addIccTags(readTags) {\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    function addPngTextTags(readTags) {\n        if (expanded) {\n            for (const group of ['exif', 'iptc']) {\n                const groupKey = `__${group}`;\n                if (readTags[groupKey]) {\n                    tags[group] = !tags[group] ? readTags[groupKey] : objectAssign({}, tags.exif, readTags[groupKey]);\n                    delete readTags[groupKey];\n                }\n            }\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngText = !tags.pngText ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign(\n                {},\n                tags,\n                readTags.__exif ? readTags.__exif : {},\n                readTags.__iptc ? readTags.__iptc : {},\n                readTags\n            );\n        }\n    }\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n\nfunction hasPngTextData(pngTextChunks) {\n    return pngTextChunks !== undefined;\n}\n\nfunction hasPngData(pngChunkOffsets) {\n    return pngChunkOffsets !== undefined;\n}\n\nfunction hasVp8xData(vp8xChunkOffset) {\n    return vp8xChunkOffset !== undefined;\n}\n\nfunction hasGifFileData(gifHeaderOffset) {\n    return gifHeaderOffset !== undefined;\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","DataView","buffer","_classCallCheck","_typeof","undefined","length","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","byteLength","offset","littleEndian","getDataView","data","byteOffset","error","DataViewWrapper","getStringFromDataView","dataView","chars","i","push","getUint8","getStringValueFromArray","getUnicodeStringFromDataView","getUint16","pop","getPascalStringFromDataView","size","charArray","map","charCode","String","fromCharCode","join","objectAssign","arguments","property","deferInit","object","initializer","initialized","configurable","apply","writable","getBase64Image","image","btoa","Array","reduce","Uint8Array","byte","Buffer","from","toString","strRepeat","string","num","COMPRESSION_METHOD_NONE","COMPRESSION_METHOD_DEFLATE","decompress","compressionMethod","returnType","DecompressionStream","decompressionStream","decompressedStream","Blob","stream","pipeThrough","Response","arrayBuffer","then","text","Promise","reject","concat","USE_FILE","USE_JFIF","USE_PNG_FILE","USE_EXIF","USE_IPTC","USE_XMP","USE_ICC","USE_MPF","USE_PHOTOSHOP","USE_THUMBNAIL","USE_TIFF","USE_JPEG","USE_PNG","USE_HEIC","USE_AVIF","USE_WEBP","USE_GIF","getStringValue","getEncodedString","encoding","slice","getCalculatedGpsValue","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","MIN_JPEG_DATA_BUFFER_LENGTH","JPEG_ID","JPEG_ID_SIZE","APP_ID_OFFSET","APP_MARKER_SIZE","JFIF_DATA_OFFSET","TIFF_HEADER_OFFSET","IPTC_DATA_OFFSET","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_DATA_OFFSET","MPF_DATA_OFFSET","APP2_ICC_IDENTIFIER","ICC_CHUNK_NUMBER_OFFSET","ICC_TOTAL_CHUNKS_OFFSET","APP2_MPF_IDENTIFIER","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","FILL_BYTE","APP0_JFIF_IDENTIFIER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","isSOF0Marker","appMarkerPosition","isSOF2Marker","isApp2ICCMarker","markerIdLength","isApp2MPFMarker","isApp0JfifMarker","isApp1ExifMarker","isApp1XmpMarker","isXmpIdentifier","isApp1ExtendedXmpMarker","isExtendedXmpIdentifier","getXmpChunkDetails","fieldLength","dataOffset","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","isAppMarker","appMarker","isFillByte","PNG_ID","PNG_CHUNK_LENGTH_SIZE","PNG_CHUNK_TYPE_SIZE","PNG_CHUNK_LENGTH_OFFSET","PNG_CHUNK_TYPE_OFFSET","PNG_CHUNK_DATA_OFFSET","PNG_XMP_PREFIX","TYPE_TEXT","TYPE_ITXT","TYPE_ZTXT","TYPE_PHYS","TYPE_TIME","TYPE_EXIF","TYPE_ICCP","isPngImageHeaderChunk","isPngXmpChunk","isPngTextChunk","async","chunkType","isPngExifChunk","isPngIccpChunk","isPngChunk","SUPPORTED_PNG_CHUNK_TYPES","includes","getPngXmpDataOffset","numberOfNullSeparators","parseIccHeader","profileName","char","getNullTerminatedStringFromDataView","compressedProfileOffset","getBoxLength","boxLength","getUint32","extendsToEndOfFile","hasExtendedSize","hasEmptyHighBits","GIF_SIGNATURE_SIZE","GIF_SIGNATURES","parseAppMarkers","Constants","ByteOrder","hasTiffMarker","Tiff","addFileType","hasAppMarkers","Jpeg","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","xmpChunks","iccChunks","mpfDataOffset","iccDataOffset","iccDataLength","iccChunkNumber","iccChunksTotal","chunkNumber","chunksTotal","fileDataOffset","Png","offsets","pngHeaderOffset","pngTextChunks","type","chunkDataLength","iccHeaderOffset","_parseIccHeader","pngChunkOffsets","heicMajorBrand","HEIC_ID_OFFSET","HEIC_ID","indexOf","Heic","_findMetaBox","findMetaBox","metaOffset","metaLength","metaEndOffset","Math","min","_findMetaItems","ilocOffset","exifItemOffset","colrOffset","itemName","findMetaItems","exifOffset","exifItemIndex","exifPointer","findExifOffset","colorType","findIccChunks","RIFF_ID","WEBP_MARKER","Webp","vp8xChunkOffset","chunkId","chunkSize","EXIF_IDENTIFIER","Gif","gifHeaderOffset","fileType","fileTypeDescription","description","ApertureValue","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","decimal","Number","isInteger","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","name","TagNamesCommon","values","formats","isArray","sample","ref","_ref","_ref2","test","status","mode","tagNames0thExifIfds","TagNames0thIfd","x","y","focalLengths","IFD_TYPE_0TH","IFD_TYPE_EXIF","IFD_TYPE_INTEROPERABILITY","_defineProperty","_IFD_TYPE_0TH$IFD_TYP","TagNamesGpsIfd","TagNamesInteroperabilityIfd","TagNamesMpfIfd","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getInt32","getTagValueAt","Types","get0thIfdOffset","readIfd","ifdType","includeUnknown","FIELD_COUNT_SIZE","tags","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","id","nextIfdOffset","tagValue","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","TagNames","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","decodeAsciiValue","j","splitNullSeparatedAsciiString","tagName","tagDescription","getDescriptionFromTagValue","count","valueIndex","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","read","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","images","ceil","ENTRY_SIZE","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","getImageOffset","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","entries","flags","flagsDescription","imageFormat","imageIndex","mpEntry","isFirstIndividualImage","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","decode","Decoder","TextDecoder","TAG_HEADER_SIZE","parseTags","_getNaaResourceBlock","BYTES_8BIM_SIZE","resourceBlock","getResourceBlock","isNaaResourceBlock","naaBlock","getBlockPadding","getNaaResourceBlock","endOfBlockOffset","_readTag","tagSize","leadByteIsMissing","IptcTagNames","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","fraction","calculateGPSValue","substring","parseNumber","numbers","number","charCodeAt","isFraction","func","_value$split2","degreesString","minutesString","degrees","parseFloat","minutes","isNaN","chunks","readTags","_extractCompleteChunk2","completeChunks","combineChunks","extractCompleteChunks","standardXmp","extendedXmp","hasStandardTags","hasExtendedTags","_raw","totalLength","chunk","combinedChunks","set","chunkDataView","_getDocument","domParser","DOMParser","__non_webpack_require__","errorHandler","console","warn","xmlString","doc","parseFromString","replace","documentElement","nodeName","textContent","raw","getDocument","parseXMPObject","convertToObject","getRDF","node","childNodes","nodes","isTopNode","elements","getChildNodes","nodeValue","getTextValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","item","getDescriptionOfArray","XmpTagNames","descriptions","getClearTextKey","getDescriptionOfObject","children","parseNodeAsTag","isDuplicateTag","parseNodeAsSimpleValue","parseNodeAsDuplicateTag","trim","isEmptyResourceTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","parseNodeAttributes","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","paths","TYPE_SIZE","PATH_RECORD_TYPES","path","JSON","stringify","_PATH_RECORD_TYPES","parseBezierKnot","getFixedPointNumber","parsePathPoint","vertical","binaryPoint","sign","integer","radix","parseFloatRadix","bytes","signature","SIGNATURE_SIZE","tagId","_getTagName","TAG_ID_SIZE","tagNameSize","resourceSize","RESOURCE_LENGTH_SIZE","SIGNATURE","valueDataView","_getPascalStringFromD2","stringSize","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","iccData","catch","readCompressedIcc","totalIccProfileLength","sum","icc","iccBinaryData","getBuffer","_loop","iccDataChunk","find","chunkData","readIcc","PROFILE_HEADER_LENGTH","ICC_TAG_COUNT_OFFSET","ICC_SIGNATURE","TAG_TYPE_DESC","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","hasTagsData","tagHeaderOffset","iccProfileKeys","profileEntry","sliceToString","iccDoesNotHaveTagCount","tagSignature","tagOffset","tagValueSize","addTag","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","valObj","valIndex","getBitDepth","getColorType","getCompression","getFilter","getInterlace","tagsPromises","_pngTextChunks$i","nameAndValue","getNameAndValue","isExifGroupTag","__exif","Tags","decodeRawData","EXIF_OFFSET","isIptcGroupTag","__iptc","IptcTags","readTagsPromise","all","STATE_KEYWORD","STATE_COMPRESSION","STATE_LANG","STATE_TRANSLATED_KEYWORD","STATE_TEXT","COMPRESSION_SECTION_ITXT_EXTRA_BYTE","COMPRESSION_FLAG_COMPRESSED","valueChars","keywordChars","langChars","translatedKeywordChars","parsingState","moveToNextState","getCompressionMethod","decompressedValueChars","_decompressedValueChars","constructTag","_ref3","getValue","getName","lang","hex","ArrayBuffer","setUint8","hexToDataView","match","chunkOffsets","chunkLength","getPixelsPerUnitX","getPixelsPerUnitY","getPixelUnits","getModifyDate","chunkOffset","tagFitsInBuffer","pad","repeat","getAlpha","getAnimation","getThreeByteValue","IMAGE_WIDTH_OFFSET","IMAGE_HEIGHT_OFFSET","getGifVersion","getGlobalColorMap","getColorResolution","COMPRESSION_JPEG","thumbnailTags","Compression","JPEGInterchangeFormat","JPEGInterchangeFormatLength","MetadataMissingError","message","stack","load","loadView","errors","exifErrors","file","options","isFilePathOrURL","filename","fetch","url","method","headers","range","response","fetchRemoteFile","resolve","requireNodeGet","statusCode","on","statusMessage","resume","nodeGetRemoteFile","isDataUri","dataUri","atob","decodedData","dataUriToBuffer","fs","requireNodeFs","open","fd","stat","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","window","File","isBrowserFileObject","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","isBuffer","isNodeBuffer","_ref4","expanded","_ref4$expanded","_ref4$async","_ref4$includeUnknown","foundMetaData","_ImageHeader$parseApp","ImageHeader","hasFileData","FileTags","hasJfifData","JfifTags","jfif","hasExifData","Thumbnail","exif","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","addGpsGroup","hasIptcData","readIptcTags","iptc","hasXmpData","readXmpTags","XmpTags","xmp","readPhotoshopTags","PhotoshopTags","photoshop","hasIccData","readIccTags","IccTags","addIccTags","hasMpfData","readMpfTags","MpfTags","mpf","PngFileTags","png","pngFile","hasPngTextData","_PngTextTags$read","PngTextTags","addPngTextTags","tagList","hasPngData","PngTags","hasVp8xData","Vp8xTags","riff","hasGifFileData","GifFileTags","gif","FileType","_i","_arr","group","groupKey","pngText","iccDataOffsets"],"sourceRoot":""}