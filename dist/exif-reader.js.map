{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///exif-reader.js","webpack:///webpack/bootstrap 1ff4c4efa58b3ae8d54b","webpack:///./src/exif-reader.js","webpack:///./src/image-header.js","webpack:///./src/utils.js","webpack:///./src/tags.js","webpack:///./src/byte-order.js","webpack:///./src/types.js","webpack:///./src/tag-names.js","webpack:///./src/tag-names-0th-ifd.js","webpack:///./src/tag-names-exif-ifd.js","webpack:///./src/tag-names-utils.js","webpack:///./src/tag-names-gps-ifd.js","webpack:///./src/tag-names-interoperability-ifd.js","webpack:///./src/iptc-tags.js","webpack:///./src/iptc-tag-names.js","webpack:///./src/xmp-tags.js","webpack:///./src/xmp-tag-names.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","apply","undefined","_imageHeader","_tags","_iptcTags","_xmpTags","_interopRequireDefault","obj","__esModule","default","load","data","options","arguments","length","expanded","dataView","DataView","error","console","warn","loadView","foundMetaData","tags","_imageHeader2","check","_ImageHeader$parseApp","parseAppMarkers","tiffHeaderOffset","iptcDataOffset","xmpDataOffset","xmpFieldLength","hasExifData","readTags","_tags2","read","exif","_extends","hasIptcData","_iptcTags2","iptc","hasXmpData","_xmpTags2","xmp","Error","Object","defineProperty","value","assign","target","i","source","key","prototype","hasOwnProperty","_utils","byteLength","MIN_DATA_BUFFER_LENGTH","getUint16","JPEG_ID","appMarkerPosition","JPEG_ID_SIZE","fieldLength","APP_ID_OFFSET","isApp1ExifMarker","APP_MARKER_SIZE","TIFF_HEADER_OFFSET","isApp1XMPMarker","XMP_DATA_OFFSET","isApp13PhotoshopMarker","IPTC_DATA_OFFSET","isAppMarker","hasAppMarkers","markerIdLength","APP1_EXIF_IDENTIFIER","APP1_MARKER","getStringFromDataView","getUint8","APP1_XMP_IDENTIFIER","APP13_IPTC_IDENTIFIER","APP13_MARKER","appMarker","APP0_MARKER","APP15_MARKER","COMMENT_MARKER","offset","chars","push","getAsciiValue","join","charArray","map","charCode","String","fromCharCode","_byteOrder","_types","_tagNames","byteOrder","_byteOrder2","getByteOrder","read0thIfd","readExifIfd","readGpsIfd","readInteroperabilityIfd","readIfd","get0thIfdOffset","_types2","getLongAt","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","ifdType","FIELD_COUNT_SIZE","getTypeSize","FIELD_SIZE","numberOfFields","getShortAt","fieldIndex","tag","readTag","name","description","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValue","typeSizes","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagTypes","splitNullSeparatedAsciiString","decodeAsciiValue","_tagNames2","tagName","tagDescription","Array","type","count","valueIndex","getTagValueAt","string","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","character","err","return","asciiValue","decodeURIComponent","escape","1","getByteAt","2","getAsciiAt","3","4","5","getRationalAt","7","getUndefinedAt","9","getSlongAt","10","getSrationalAt","LITTLE_ENDIAN","BIG_ENDIAN","getUint32","getInt32","typeName","BYTE","ASCII","SHORT","LONG","RATIONAL","UNDEFINED","SLONG","SRATIONAL","_tagNames0thIfd","_tagNamesExifIfd","_tagNamesGpsIfd","_tagNamesInteroperabilityIfd","_tagNames0thIfd2","_tagNamesExifIfd2","_tagNamesGpsIfd2","_tagNamesInteroperabilityIfd2","0th","gps","interoperability","256","257","258","259","262","270","271","272","273","274","277","278","279","282","283","284","296","301","305","306","315","318","319","513","514","529","530","531","532","33432","34665","34853","_tagNamesUtils","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","isArray","TypeError","33434","33437","34850","34852","34855","34856","36864","getStringValue","36867","36868","37121","37122","37377","37378","37379","37380","37381","37382","37383","37384","37385","37386","37396","37500","37510","getEncodedString","37520","37521","37522","40960","40961","40962","40963","40964","40965","41483","41484","41486","41487","41488","41492","_ref","_ref2","x","y","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","42016","encoding","slice","getCharacterArray","split","charCodeAt","0","ref","6","num","8","status","mode","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","_iptcTagNames","dataOffset","_getNaaResourceBlock","getNaaResourceBlock","naaBlock","newDataOffset","parseTags","RESOURCE_BLOCK_HEADER_SIZE","resourceBlock","getResourceBlock","isNaaResourceBlock","size","getBlockPadding","RESOURCE_BLOCK_SIZE_OFFSET","BYTES_8BIM","BYTES_8BIM_SIZE","NAA_RESOURCE_BLOCK_TYPE","blockSize","endOfBlockOffset","_readTag","tagSize","TAG_HEADER_SIZE","TAG_CODE_OFFSET","TAG_SIZE_OFFSET","_iptcTagNames2","getCreationDate","date","substr","getCreationTime","time","parsedTime","346","512","toString","515","516","517","519","520","522","524","repeatable","parts","527","534","537","538","539","542","547","549","550","552","554","557","559","562","567","572","574","575","577","582","587","592","597","602","604","607","612","613","615","617","622","627","628","630","632","634","637","642","643","647","662","stringValue","character0","charAt","character1","663","parseInt","664","bits","665","duration","666","712","713","formatVersions","00","01","02","03","04","05","06","objectDataPreviewFileFormat","714","_xmpTagNames","metadataSize","doc","getDocument","rdf","getRDF","parseXMPObject","convertToObject","DOMParser","domParser","xmlSource","parseFromString","documentElement","nodeName","node","childNodes","isTopNode","getChildNodes","hasTextOnlyContent","getTextValue","getElementsFromNodes","elements","nodes","nodeValue","forEach","isElement","nodeElement","getElementFromNode","attributes","getAttributes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","getDescriptionOfArray","_typeof","getDescriptionOfObject","_xmpTagNames2","item","descriptions","getClearTextKey","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","parseNodeAsArray","parseNodeAsSimpleValue","parseNodeAttributes","parseNodeChildrenAsAttributes","parseRdfValue","getURIValue","keys","getArrayChild","items","parseArrayValue","hasNestedArrayValue","constructor","tiff:Orientation"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,WAAAD,IAEAD,EAAA,WAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,IAAKA,EAAoB,KAAMS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAuVb,KAAM,SAAUJ,EAASqB,EAAcC,EAAOC,EAAWC,GAAW,YA0BvwB,SAASC,GAAuBC,GAAM,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GErEhT,QAASG,GAAKC,GAAmC,GAA7BC,GAA6BC,UAAAC,OAAA,GAAAb,SAAAY,UAAA,GAAAA,UAAA,IAAlBE,UAAU,GACxCC,QAEJ,KACIA,EAAW,GAAIC,UAASN,GAC1B,MAAOO,GAEL,MADAC,SAAQC,KAAK,yVAIjB,MAAOC,GAASL,EAAUJ,GAGvB,QAASS,GAASL,GAAuC,GAA7BJ,GAA6BC,UAAAC,OAAA,GAAAb,SAAAY,UAAA,GAAAA,UAAA,IAAlBE,UAAU,GAChDO,GAAgB,EAChBC,IAEJC,GAAAf,QAAYgB,MAAMT,EAJ0C,IAAAU,GAKcF,EAAAf,QAAYkB,gBAAgBX,GAA/FY,EALqDF,EAKrDE,iBAAkBC,EALmCH,EAKnCG,eAAgBC,EALmBJ,EAKnBI,cAAeC,EALIL,EAKJK,cAExD,IAAIC,EAAYJ,GAAmB,CAC/BN,GAAgB,CAChB,IAAMW,GAAWC,EAAAzB,QAAK0B,KAAKnB,EAAUY,EACjChB,GAAQG,SACRQ,EAAKa,KAAOH,EAEZV,EAAOc,KAAkBd,EAAMU,GAGvC,GAAIK,EAAYT,GAAiB,CAC7BP,GAAgB,CAChB,IAAMW,GAAWM,EAAA9B,QAAS0B,KAAKnB,EAAUa,EACrCjB,GAAQG,SACRQ,EAAKiB,KAAOP,EAEZV,EAAOc,KAAkBd,EAAMU,GAGvC,GAAIQ,EAAWX,GAAgB,CAC3BR,GAAgB,CAChB,IAAMW,GAAWS,EAAAjC,QAAQ0B,KAAKnB,EAAUc,EAAeC,EACnDnB,GAAQG,SACRQ,EAAKoB,IAAMV,EAEXV,EAAOc,KAAkBd,EAAMU,GAGvC,IAAKX,EACD,KAAM,IAAIsB,OAAM,eAGpB,OAAOrB,GAGX,QAASS,GAAYJ,GACjB,MAA4B3B,UAArB2B,EAGX,QAASU,GAAYT,GACjB,MAA0B5B,UAAnB4B,EAGX,QAASY,GAAWX,GAChB,MAAyB7B,UAAlB6B,EFpB0+Be,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EE3CniC6B,OFwDC7B,EE3CDwC,UFwDS,IAAIG,GAAgBlB,EAAuBJ,GAAkBgC,EAAS5B,EAAuBH,GAAWoC,EAAajC,EAAuBF,GAAesC,EAAYpC,EAAuBD,GAA2GgC,EAAWQ,OAAOG,QAAU,SAAUC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAIrC,UAAUC,OAAQoC,IAAK,CAAC,GAAIC,GAAStC,UAAUqC,EAAG,KAAK,GAAIE,KAAOD,GAAaN,OAAOQ,UAAUC,eAAe9D,KAAK2D,EAAQC,KAAOH,EAAOG,GAAOD,EAAOC,IAAQ,MAAOH,OAuDtiB,SAASnE,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,IAAKS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAA2Nb,KAAM,SAAUJ,EAAS0E,GAAS,YGnHhwB,SAAS9B,GAAMT,GACX,GAAKA,EAASwC,WAAaC,GAA4BzC,EAAS0C,UAAU,GAAG,KAAWC,EACpF,KAAM,IAAIf,OAAM,wBAIxB,QAASjB,GAAgBX,GAQrB,IAPA,GAAI4C,GAAoBC,EACpBC,SACAlC,SACAC,SACAC,SACAC,SAEG6B,EAAoBG,EAAgB,GAAK/C,EAASwC,YAAY,CACjE,GAAIQ,EAAiBhD,EAAU4C,GAC3BE,EAAc9C,EAAS0C,UAAUE,EAAoBK,GAAiB,GACtErC,EAAmBgC,EAAoBM,MACpC,IAAIC,EAAgBnD,EAAU4C,GACjCE,EAAc9C,EAAS0C,UAAUE,EAAoBK,GAAiB,GACtEnC,EAAgB8B,EAAoBQ,EACpCrC,EAAiB+B,GAAeM,EAAkBH,OAC/C,IAAII,EAAuBrD,EAAU4C,GACxCE,EAAc9C,EAAS0C,UAAUE,EAAoBK,GAAiB,GACtEpC,EAAiB+B,EAAoBU,MAClC,KAAIC,EAAYvD,EAAU4C,GAG7B,KAFAE,GAAc9C,EAAS0C,UAAUE,EAAoBK,GAAiB,GAI1EL,GAAqBK,EAAkBH,EAG3C,OACIU,cAAeZ,EAAoBC,EACnCjC,mBACAC,iBACAC,gBACAC,kBAIR,QAASiC,GAAiBhD,EAAU4C,GAChC,GAAMa,GAAiBC,EAAqB5D,MAE5C,OAAQE,GAAS0C,UAAUE,GAAmB,KAAWe,IACjD,EAAApB,EAAAqB,uBAAsB5D,EAAU4C,EAAoBG,EAAeU,KAAoBC,GACN,IAAjF1D,EAAS6D,SAASjB,EAAoBG,EAAgBU,GAAgB,GAGlF,QAASN,GAAgBnD,EAAU4C,GAC/B,GAAMa,GAAiBK,EAAoBhE,MAE3C,OAAQE,GAAS0C,UAAUE,GAAmB,KAAWe,IACjD,EAAApB,EAAAqB,uBAAsB5D,EAAU4C,EAAoBG,EAAeU,KAAoBK,GACN,IAAjF9D,EAAS6D,SAASjB,EAAoBG,EAAgBU,GAAgB,GAGlF,QAASJ,GAAuBrD,EAAU4C,GACtC,GAAMa,GAAiBM,EAAsBjE,MAE7C,OAAQE,GAAS0C,UAAUE,GAAmB,KAAWoB,IACjD,EAAAzB,EAAAqB,uBAAsB5D,EAAU4C,EAAoBG,EAAeU,KAAoBM,GACN,IAAjF/D,EAAS6D,SAASjB,EAAoBG,EAAgBU,GAAgB,GAGlF,QAASF,GAAYvD,EAAU4C,GAC3B,GAAMqB,GAAYjE,EAAS0C,UAAUE,GAAmB,EACxD,OAASqB,IAAaC,GAAiBD,GAAaE,GAC5CF,IAAcG,EH8CmvBvC,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GGzIn0B,IAAMU,GAAyB,EACzBE,EAAU,MACVE,EAAe,EACfE,EAAgB,EAChBE,EAAkB,EAClBC,EAAqB,GACrBI,EAAmB,GACnBF,EAAkB,GAClBc,EAAc,MACdP,EAAc,MACdK,EAAe,MACfG,EAAe,MACfC,EAAiB,MACjBV,EAAuB,OACvBI,EAAsB,+BACtBC,EAAwB,eH2ImBlG,GAAQ4B,SGxIrDgB,QACAE,sBHwNE,SAAS7C,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,GAAUe,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAmLb,KAAM,SAAUJ,GAAU,YI/OjrB,SAAS+F,GAAsB5D,EAAUqE,EAAQvE,GAEpD,IAAK,GADCwE,MACGpC,EAAI,EAAGA,EAAIpC,GAAUuE,EAASnC,EAAIlC,EAASwC,WAAYN,IAC5DoC,EAAMC,KAAKvE,EAAS6D,SAASQ,EAASnC,GAAG,GAE7C,OAAOsC,GAAcF,GAAOG,KAAK,IAGrC,QAASD,GAAcE,GACnB,MAAOA,GAAUC,IAAI,SAACC,GAAD,MAAcC,QAAOC,aAAaF,KJsO0oB/C,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EI/OnvB+F,2BJ6PV,SAAS9F,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,IAAKS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAwSb,KAAM,SAAUJ,EAASkH,EAAYC,EAAQC,GAAY,YAAgO,SAAS3F,GAAuBC,GAAM,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GKxO1sC,QAAS4B,GAAKnB,EAAUY,GACpB,GAAMsE,GAAYC,EAAA1F,QAAU2F,aAAapF,EAAUY,GAC/CL,EAAO8E,EAAWrF,EAAUY,EAAkBsE,EAKlD,OAJA3E,GAAO+E,EAAY/E,EAAMP,EAAUY,EAAkBsE,GACrD3E,EAAOgF,EAAWhF,EAAMP,EAAUY,EAAkBsE,GACpD3E,EAAOiF,EAAwBjF,EAAMP,EAAUY,EAAkBsE,GAKrE,QAASG,GAAWrF,EAAUY,EAAkBsE,GAC5C,MAAOO,GAAQzF,EAAU,MAAOY,EAAkB8E,EAAgB1F,EAAUY,EAAkBsE,GAAYA,GAG9G,QAASQ,GAAgB1F,EAAUY,EAAkBsE,GACjD,MAAOtE,GAAmB+E,EAAAlG,QAAMmG,UAAU5F,EAAUY,EAAmB,EAAGsE,GAG9E,QAASI,GAAY/E,EAAMP,EAAUY,EAAkBsE,GACnD,MAAmCjG,UAA/BsB,EAAKsF,GACExE,EAAcd,EAAMkF,EAAQzF,EAAU,OAAQY,EAAkBA,EAAmBL,EAAKsF,GAAsB9D,MAAOmD,IAGzH3E,EAGX,QAASgF,GAAWhF,EAAMP,EAAUY,EAAkBsE,GAClD,MAAuCjG,UAAnCsB,EAAKuF,GACEzE,EAAcd,EAAMkF,EAAQzF,EAAU,MAAOY,EAAkBA,EAAmBL,EAAKuF,GAA0B/D,MAAOmD,IAG5H3E,EAGX,QAASiF,GAAwBjF,EAAMP,EAAUY,EAAkBsE,GAC/D,MAA+CjG,UAA3CsB,EAAKwF,GACE1E,EAAcd,EAAMkF,EAAQzF,EAAU,mBAAoBY,EAAkBA,EAAmBL,EAAKwF,GAAkChE,MAAOmD,IAGjJ3E,EAGX,QAASkF,GAAQzF,EAAUgG,EAASpF,EAAkByD,EAAQa,GAC1D,GAAMe,GAAmBN,EAAAlG,QAAMyG,YAAY,SACrCC,EAAa,GAEb5F,KACA6F,EAAiBT,EAAAlG,QAAM4G,WAAWrG,EAAUqE,EAAQa,EAE1Db,IAAU4B,CACV,KAAK,GAAIK,GAAa,EAAGA,EAAaF,EAAgBE,IAAc,CAChE,GAAMC,GAAMC,EAAQxG,EAAUgG,EAASpF,EAAkByD,EAAQa,EACrDjG,UAARsH,IACAhG,EAAKgG,EAAIE,OAAS1E,MAASwE,EAAIxE,MAAO2E,YAAeH,EAAIG,cAE7DrC,GAAU8B,EAGd,MAAO5F,GAGX,QAASiG,GAAQxG,EAAUgG,EAASpF,EAAkByD,EAAQa,GAC1D,GAAMyB,GAAkBhB,EAAAlG,QAAMyG,YAAY,SACpCU,EAAmBD,EAAkBhB,EAAAlG,QAAMyG,YAAY,SACvDW,EAAmBD,EAAmBjB,EAAAlG,QAAMyG,YAAY,QAExDY,EAAUnB,EAAAlG,QAAM4G,WAAWrG,EAAUqE,EAAQa,GAC7C6B,EAAUpB,EAAAlG,QAAM4G,WAAWrG,EAAUqE,EAASsC,EAAiBzB,GAC/D8B,EAAWrB,EAAAlG,QAAMmG,UAAU5F,EAAUqE,EAASuC,EAAkB1B,GAClE+B,QAEJ,IAAiChI,SAA7B0G,EAAAlG,QAAMyH,UAAUH,GAApB,CAIA,GAAII,EAAyBJ,EAASC,GAClCC,EAAWG,EAAYpH,EAAUqE,EAASwC,EAAkBE,EAASC,EAAU9B,OAC5E,CACH,GAAMmC,GAAiB1B,EAAAlG,QAAMmG,UAAU5F,EAAUqE,EAASwC,EAAkB3B,EAC5E+B,GAAWG,EAAYpH,EAAUY,EAAmByG,EAAgBN,EAASC,EAAU9B,GAQ3F,GALI6B,IAAYpB,EAAAlG,QAAM6H,SAAN,QACZL,EAAWM,EAA8BN,GACzCA,EAAWO,EAAiBP,IAGGhI,SAA/BwI,EAAAhI,QAASuG,GAASc,GAAwB,CAC1C,GAAIY,UAASC,QAab,OAX4C1I,UAAvCwI,EAAAhI,QAASuG,GAASc,GAAlB,MAAoG7H,SAA9CwI,EAAAhI,QAASuG,GAASc,GAAlB,aACvDY,EAAUD,EAAAhI,QAASuG,GAASc,GAAlB,KACVa,EAAiBF,EAAAhI,QAASuG,GAASc,GAAlB,YAA0CG,KAE3DS,EAAUD,EAAAhI,QAASuG,GAASc,GAExBa,EADAV,YAAoBW,OACHX,EAASxC,KAAK,MAEdwC,IAIrBR,KAAMiB,EACN3F,MAAOkF,EACPP,YAAaiB,GAIrB,OACIlB,kBAAmBK,EACnB/E,MAAOkF,EACPP,YAAaO,IAIrB,QAASE,GAAyBJ,EAASC,GACvC,MAAOrB,GAAAlG,QAAMyH,UAAUH,GAAWC,GAAYrB,EAAAlG,QAAMyG,YAAY,QAGpE,QAASkB,GAAYpH,EAAUqE,EAAQwD,EAAMC,EAAO5C,GAGhD,IAAK,GAFDnD,MAEKgG,EAAa,EAAGA,EAAaD,EAAOC,IACzChG,EAAMwC,KAAKyD,EAAcH,GAAM7H,EAAUqE,EAAQa,IACjDb,GAAUsB,EAAAlG,QAAMyH,UAAUW,EAS9B,OANIA,KAASlC,EAAAlG,QAAM6H,SAAN,MACTvF,EAAQ4D,EAAAlG,QAAM+E,cAAczC,GACJ,IAAjBA,EAAMjC,SACbiC,EAAQA,EAAM,IAGXA,EAGX,QAASwF,GAA8BU,GACnC,GAAMhB,MACF/E,EAAI,EAFmCgG,GAAA,EAAAC,GAAA,EAAAC,EAAAnJ,MAAA,KAI3C,OAAAoJ,GAAAC,EAAwBL,EAAxBM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAgC,IAArBS,GAAqBN,EAAAtG,KACV,QAAd4G,GAIgB1J,SAAhBgI,EAAS/E,KACT+E,EAAS/E,GAAK,IAElB+E,EAAS/E,IAAMyG,GANXzG,KANmC,MAAA0G,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAe3C,MAAOnB,GAGX,QAASO,GAAiBsB,GACtB,IACI,MAAOA,GAAWnE,IAAI,SAAC5C,GAAD,MAAWgH,oBAAmBC,OAAOjH,MAC7D,MAAO7B,GACL,MAAO4I,IL0Ek5BjH,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GAAQ,IAAIoD,GAAc7F,EAAuByF,GAAgBY,EAAUrG,EAAuB0F,GAAYyC,EAAanI,EAAuB2F,GAA4G5D,EAAWQ,OAAOG,QAAU,SAAUC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAIrC,UAAUC,OAAQoC,IAAK,CAAC,GAAIC,GAAStC,UAAUqC,EAAG,KAAK,GAAIE,KAAOD,GAAaN,OAAOQ,UAAUC,eAAe9D,KAAK2D,EAAQC,KAAOH,EAAOG,GAAOD,EAAOC,IAAQ,MAAOH,IK3Pz7C4D,EAAuB,mBACvBC,EAA2B,uBAC3BC,EAAmC,+BAEnCiC,GACFiB,EAAGtD,EAAAlG,QAAMyJ,UACTC,EAAGxD,EAAAlG,QAAM2J,WACTC,EAAG1D,EAAAlG,QAAM4G,WACTiD,EAAG3D,EAAAlG,QAAMmG,UACT2D,EAAG5D,EAAAlG,QAAM+J,cACTC,EAAG9D,EAAAlG,QAAMiK,eACTC,EAAGhE,EAAAlG,QAAMmK,WACTC,GAAIlE,EAAAlG,QAAMqK,eL+PgCjM,GAAQ4B,SK3PlD0B,WLsaE,SAASrD,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,GAAUe,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAuLb,KAAM,SAAUJ,GAAU,YMnb5rB,SAASuH,GAAapF,EAAUY,GAC5B,GAAIZ,EAAS0C,UAAU9B,KAAsBmJ,EACzC,MAAOA,EACN,IAAI/J,EAAS0C,UAAU9B,KAAsBoJ,EAC9C,MAAOA,EAEX,MAAM,IAAIpI,OAAM,2CN6aqrBC,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GM5b/vB,IAAMgI,GAAgB,MAChBC,EAAa,KN4bUnM,GAAQ4B,SMzbjCuK,aACAD,gBACA3E,mBN0cE,SAAStH,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,IAAKS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAA8Nb,KAAM,SAAUJ,EAASkH,GAAa,YAAgI,SAASzF,GAAuBC,GAAM,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GO3a79B,QAASiF,GAAcE,GACnB,MAAOA,GAAUC,IAAI,SAACC,GAAD,MAAcC,QAAOC,aAAaF,KAG3D,QAASsE,GAAUlJ,EAAUqE,GACzB,MAAOrE,GAAS6D,SAASQ,GAG7B,QAAS+E,GAAWpJ,EAAUqE,GAC1B,MAAOrE,GAAS6D,SAASQ,GAG7B,QAASgC,GAAWrG,EAAUqE,EAAQa,GAClC,MAAOlF,GAAS0C,UAAU2B,EAAQa,IAAcC,EAAA1F,QAAUsK,eAG9D,QAASnE,GAAU5F,EAAUqE,EAAQa,GACjC,MAAOlF,GAASiK,UAAU5F,EAAQa,IAAcC,EAAA1F,QAAUsK,eAG9D,QAASP,GAAcxJ,EAAUqE,EAAQa,GACrC,MAAOU,GAAU5F,EAAUqE,EAAQa,GAAaU,EAAU5F,EAAUqE,EAAS,EAAGa,GAGpF,QAASwE,GAAe1J,EAAUqE,GAC9B,MAAO6E,GAAUlJ,EAAUqE,GAG/B,QAASuF,GAAW5J,EAAUqE,EAAQa,GAClC,MAAOlF,GAASkK,SAAS7F,EAAQa,IAAcC,EAAA1F,QAAUsK,eAG7D,QAASD,GAAe9J,EAAUqE,EAAQa,GACtC,MAAO0E,GAAW5J,EAAUqE,EAAQa,GAAa0E,EAAW5J,EAAUqE,EAAS,EAAGa,GAGtF,QAASgB,GAAYiE,GACjB,GAA2BlL,SAAvBqI,EAAS6C,GACT,KAAM,IAAIvI,OAAM,sBAGpB,OAAOsF,GAAUI,EAAS6C,IPkYsvBtI,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GAAQ,IAAIoD,GAAc7F,EAAuByF,GOhdr3BmC,GACF+B,EAAG,EACHE,EAAG,EACHE,EAAG,EACHC,EAAG,EACHC,EAAG,EACHE,EAAG,EACHE,EAAG,EACHE,GAAI,GAGFvC,GACF8C,KAAQ,EACRC,MAAS,EACTC,MAAS,EACTC,KAAQ,EACRC,SAAY,EACZC,UAAa,EACbC,MAAS,EACTC,UAAa,GPkdU9M,GAAQ4B,SO9c/B+E,gBACA0E,YACAE,aACA/C,aACAT,YACA4D,gBACAE,iBACAE,aACAE,iBACA5C,YACAI,WACApB,kBPmgBE,SAASpI,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,GAAIA,EAAoB,GAAIA,EAAoB,IAAKA,EAAoB,KAAMS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAA8ab,KAAM,SAAUJ,EAAS+M,EAAiBC,EAAkBC,EAAiBC,GAA+B,YAAmW,SAASzL,GAAuBC,GAAM,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAA5asC,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GAAQ,IAAIiJ,GAAmB1L,EAAuBsL,GAAqBK,EAAoB3L,EAAuBuL,GAAsBK,EAAmB5L,EAAuBwL,GAAqBK,EAAgC7L,EAAuByL,EAA2HlN,GAAQ4B,SQniB3iD2L,MAAAJ,EAAAvL,QACA2B,KAAA6J,EAAAxL,QACA4L,IAAAH,EAAAzL,QACA6L,iBAAAH,EAAA1L,YR6iBE,SAAS3B,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,GAAUe,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAA4Lb,KAAM,SAAUJ,GAAU,YAAagE,QAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EAAQ4B,SSvjBhxB8L,IAAQ,aACRC,IAAQ,cACRC,IAAQ,gBACRC,IAAQ,cACRC,IAAQ,4BACRC,IAAQ,mBACRC,IAAQ,OACRC,IAAQ,QACRC,IAAQ,eACRC,KACIvF,KAAM,cACNC,YAAa,SAAC3E,GACV,MAAc,KAAVA,EACO,WAEG,IAAVA,EACO,YAEG,IAAVA,EACO,eAEG,IAAVA,EACO,cAEG,IAAVA,EACO,WAEG,IAAVA,EACO,YAEG,IAAVA,EACO,eAEG,IAAVA,EACO,cAEJ,cAGfkK,IAAQ,kBACRC,IAAQ,eACRC,IAAQ,kBACRC,IAAQ,cACRC,IAAQ,cACRC,IAAQ,sBACRC,KACI9F,KAAM,iBACNC,YAAa,SAAC3E,GACV,MAAc,KAAVA,EACO,SAEG,IAAVA,EACO,cAEJ,YAGfyK,IAAQ,mBACRC,IAAQ,WACRC,IAAQ,WACRC,IAAQ,SACRC,IAAQ,aACRC,IAAQ,wBACRC,IAAQ,wBACRC,IAAQ,8BACRC,IAAQ,oBACRC,IAAQ,mBACRC,KACIzG,KAAM,mBACNC,YAAa,SAAC3E,GACV,MAAc,KAAVA,EACO,WAEG,IAAVA,EACO,WAEJ,aAAeA,IAG9BoL,IAAQ,sBACRC,OACI3G,KAAM,YACNC,YAAa,SAAC3E,GAAD,MAAWA,GAAM0C,KAAK,QAEvC4I,MAAQ,mBACRC,MAAQ,2BT4jBN,SAASxP,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,IAAKS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAiPb,KAAM,SAAUJ,EAAS0P,GAAiB,YAAa1L,QAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GAAQ,IAAIyL,GAAiB,WAAa,QAASC,GAAcC,EAAKxL,GAAI,GAAIyL,MAAcC,GAAK,EAASC,GAAK,EAAUC,EAAK7O,MAAU,KAAK,IAAK,GAAiC8O,GAA7BC,EAAKN,EAAInF,OAAOC,cAAmBoF,GAAMG,EAAKC,EAAGvF,QAAQC,QAAmBiF,EAAKpJ,KAAKwJ,EAAGhM,QAAWG,GAAKyL,EAAK7N,SAAWoC,GAAzD0L,GAAK,IAAgE,MAAOhF,GAAMiF,GAAK,EAAKC,EAAKlF,EAAM,QAAS,KAAUgF,GAAMI,EAAW,QAAGA,EAAW,SAAM,QAAS,GAAIH,EAAI,KAAMC,IAAK,MAAOH,GAAM,MAAO,UAAUD,EAAKxL,GAAI,GAAI0F,MAAMqG,QAAQP,GAAO,MAAOA,EAAW,IAAInF,OAAOC,WAAY3G,QAAO6L,GAAO,MAAOD,GAAcC,EAAKxL,EAAW,MAAM,IAAIgM,WAAU,2DAA+DrQ,GAAQ4B,SUjpBr+C0O,MAAQ,eACRC,MAAQ,UACRC,OACI5H,KAAQ,kBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,YACU,IAAVA,EACA,SACU,IAAVA,EACA,iBACU,IAAVA,EACA,oBACU,IAAVA,EACA,mBACU,IAAVA,EACA,mBACU,IAAVA,EACA,iBACU,IAAVA,EACA,gBACU,IAAVA,EACA,iBAEJ,YAGfuM,MAAQ,sBACRC,MAAQ,kBACRC,OACI/H,KAAQ,OACRC,YAAe,iBAAM,0BAEzB+H,OACIhI,KAAQ,cACRC,YAAe,SAAC3E,GAAD,OAAW,EAAAwL,EAAAmB,gBAAe3M,KAE7C4M,MAAQ,mBACRC,MAAQ,oBACRC,OACIpI,KAAQ,0BACRC,YAAe,SAAC3E,GACZ,MAAOA,GAAM4C,IAAI,SAACgE,GACd,MAAkB,MAAdA,EACO,IACc,KAAdA,EACA,KACc,KAAdA,EACA,KACc,KAAdA,EACA,IACc,KAAdA,EACA,IACc,KAAdA,EACA,IADJ,SAGRlE,KAAK,MAGhBqK,MAAQ,yBACRC,MAAQ,oBACRC,MAAQ,gBACRC,MAAQ,kBACRC,MAAQ,oBACRC,MAAQ,mBACRC,MAAQ,kBACRC,OACI5I,KAAQ,eACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,UACU,IAAVA,EACA,wBACU,IAAVA,EACA,OACU,IAAVA,EACA,YACU,IAAVA,EACA,UACU,IAAVA,EACA,UACU,MAAVA,EACA,QAEJ,YAGfuN,OACI7I,KAAQ,cACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,WACU,IAAVA,EACA,cACU,IAAVA,EACA,gCACU,IAAVA,EACA,QACU,IAAVA,EACA,eACU,KAAVA,EACA,iBACU,KAAVA,EACA,QACU,KAAVA,EACA,wCACU,KAAVA,EACA,yCACU,KAAVA,EACA,0CACU,KAAVA,EACA,sCACU,KAAVA,EACA,mBACU,KAAVA,EACA,mBACU,KAAVA,EACA,mBACU,KAAVA,EACA,MACU,KAAVA,EACA,MACU,KAAVA,EACA,MACU,KAAVA,EACA,MACU,KAAVA,EACA,sBACU,MAAVA,EACA,qBAEJ,YAGfwN,OACI9I,KAAQ,QACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,qBACU,IAAVA,EACA,cACU,IAAVA,EACA,mCACU,IAAVA,EACA,+BACU,IAAVA,EACA,qCACU,KAAVA,EACA,gEACU,KAAVA,EACA,4DACU,KAAVA,EACA,4CACU,KAAVA,EACA,gCACU,KAAVA,EACA,yBACU,KAAVA,EACA,oDACU,KAAVA,EACA,gDACU,KAAVA,EACA,oBACU,KAAVA,EACA,sCACU,KAAVA,EACA,iEACU,KAAVA,EACA,6DACU,KAAVA,EACA,6DACU,KAAVA,EACA,wFACU,KAAVA,EACA,oFACU,KAAVA,EACA,iDACU,KAAVA,EACA,4EACU,KAAVA,EACA,wEAEJ,YAGfyN,MAAQ,cACRC,OACIhJ,KAAQ,cACRC,YAAe,SAAC3E,GACZ,MAAqB,KAAjBA,EAAMjC,OACN,gBAAuBiC,EAAM,GAA7B,QAAuCA,EAAM,GACrB,IAAjBA,EAAMjC,OACb,cAAqBiC,EAAM,GAA3B,QAAqCA,EAAM,GAA3C,eAA4DA,EAAM,GAC1C,IAAjBA,EAAMjC,OACb,iBAAwBiC,EAAM,GAA9B,QAAwCA,EAAM,GAA9C,YAA4DA,EAAM,GAAlE,aAAiFA,EAAM,GAEpF,YAGf2N,OACIjJ,KAAQ,YACRC,YAAe,iBAAM,0BAEzBiJ,OACIlJ,KAAQ,cACRC,YAAA6G,EAAAqC,kBAEJC,MAAQ,aACRC,MAAQ,qBACRC,MAAQ,sBACRC,OACIvJ,KAAQ,kBACRC,YAAe,SAAC3E,GAAD,MAAWA,GAAM4C,IAAI,SAACC,GAAD,MAAcC,QAAOC,aAAaF,KAAWH,KAAK,MAE1FwL,OACIxJ,KAAQ,aACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,OACU,QAAVA,EACA,eAEJ,YAGfmO,MAAQ,kBACRC,MAAQ,kBACRC,MAAQ,mBACRC,MAAQ,+BACRC,MAAQ,cACRC,OACI9J,KAAQ,2BACRC,YAAe,iBAAM,yBAEzB8J,MAAQ,wBACRC,MAAQ,wBACRC,OACIjK,KAAQ,2BACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,SACU,IAAVA,EACA,cAEJ,YAGf4O,OACIlK,KAAQ,kBACRC,YAAe,SAAAkK,GAAA,GAAAC,GAAArD,EAAAoD,EAAA,GAAEE,EAAFD,EAAA,GAAKE,EAALF,EAAA,eAAkBC,EAAlB,QAA2BC,IAE9CC,MAAQ,gBACRC,OACIxK,KAAQ,gBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,YACU,IAAVA,EACA,6BACU,IAAVA,EACA,6BACU,IAAVA,EACA,+BACU,IAAVA,EACA,+BACU,IAAVA,EACA,mBACU,IAAVA,EACA,iCAEJ,YAGfmP,OACIzK,KAAQ,aACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,MAEJ,YAGfoP,OACI1K,KAAQ,YACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,gCAEJ,YAGfqP,OACI3K,KAAQ,aACRC,YAAe,iBAAM,iCAEzB2K,OACI5K,KAAQ,iBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,iBACU,IAAVA,EACA,iBAEJ,YAGfuP,OACI7K,KAAQ,eACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,gBACU,IAAVA,EACA,kBACU,IAAVA,EACA,eAEJ,YAGfwP,OACI9K,KAAQ,eACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,qBACU,IAAVA,EACA,uBAEJ,YAGfyP,OACI/K,KAAQ,mBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,4BAEJA,IAGf0P,OACIhL,KAAQ,wBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,UAEJA,IAGf2P,OACIjL,KAAQ,mBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,WACU,IAAVA,EACA,YACU,IAAVA,EACA,WACU,IAAVA,EACA,cAEJ,YAGf4P,OACIlL,KAAQ,cACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,OACU,IAAVA,EACA,cACU,IAAVA,EACA,eACU,IAAVA,EACA,gBACU,IAAVA,EACA,iBAEJ,YAGf6P,OACInL,KAAQ,WACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,SACU,IAAVA,EACA,OACU,IAAVA,EACA,OAEJ,YAGf8P,OACIpL,KAAQ,aACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,SACU,IAAVA,EACA,iBACU,IAAVA,EACA,kBAEJ,YAGf+P,OACIrL,KAAQ,YACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,SACU,IAAVA,EACA,OACU,IAAVA,EACA,OAEJ,YAGfgQ,OACItL,KAAQ,2BACRC,YAAe,iBAAM,qCAEzBsL,OACIvL,KAAQ,uBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,QACU,IAAVA,EACA,aACU,IAAVA,EACA,eAEJ,YAGfkQ,MAAQ,oBVwpBN,SAASnU,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,GAAUe,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAA2Lb,KAAM,SAAUJ,GAAU,YWjlCzrB,SAAS6Q,GAAe3M,GAC3B,MAAOA,GAAM4C,IAAI,SAACC,GAAD,MAAcC,QAAOC,aAAaF,KAAWH,KAAK,IAGhE,QAASmL,GAAiB7N,GAC7B,GAAIA,EAAMjC,QAAU,EAAG,CACnB,GAAMoS,GAAWxD,EAAe3M,EAAMoQ,MAAM,EAAG,GAE/C,IAAiB,gBAAbD,EACA,MAAOxD,GAAe3M,EAAMoQ,MAAM,GAC/B,IAAiB,kBAAbD,EACP,MAAO,oBACJ,IAAiB,cAAbA,EACP,MAAO,wBACJ,IAAiB,qBAAbA,EACP,MAAO,uBAIf,MAAO,YAGJ,QAASE,GAAkBnK,GAC9B,MAAOA,GAAOoK,MAAM,IAAI1N,IAAI,SAACgE,GAAD,MAAeA,GAAU2J,WAAW,KX0jCyoBzQ,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EWjlC3vB6Q,iBXilCmyB7Q,EW7kCnyB+R,mBXilCyB/R,EW/jCzBuU,uBXulCV,SAAStU,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,IAAKS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAgPb,KAAM,SAAUJ,EAAS0P,GAAiB,YAAa1L,QAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EAAQ4B,SY5mC52B8S,GACI9L,KAAQ,eACRC,YAAe,SAAC3E,GACZ,MAAiB,KAAbA,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,GACrD,cAEJ,YAGfkH,GACIxC,KAAQ,iBACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,iBACQ,MAARA,EACA,iBAEJ,YAGfrJ,GACI1C,KAAQ,cACRC,YAAe,SAAC3E,GACZ,MAAOA,GAAM,GAAKA,EAAM,GAAK,GAAKA,EAAM,GAAK,OAGrDsH,GACI5C,KAAQ,kBACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,iBACQ,MAARA,EACA,iBAEJ,YAGflJ,GACI7C,KAAQ,eACRC,YAAe,SAAC3E,GACZ,MAAOA,GAAM,GAAKA,EAAM,GAAK,GAAKA,EAAM,GAAK,OAGrDwH,GACI9C,KAAQ,iBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,YACU,IAAVA,EACA,uCAEJ,YAGf0Q,GACIhM,KAAQ,cACRC,YAAe,SAAC3E,GACZ,MAAOA,GAAQ,OAGvB0H,GACIhD,KAAQ,eACRC,YAAe,SAAC3E,GACZ,MAAOA,GAAM4C,IAAI,SAAC+N,GACd,MAAwB,MAApB,GAAGA,GAAM5S,OACT,IAAW4S,EAERA,IACRjO,KAAK,OAGhBkO,EAAQ,gBACRhJ,GACIlD,KAAQ,YACRC,YAAe,SAAC3E,GACZ,GAAM6Q,GAAS7Q,EAAM0C,KAAK,GAC1B,OAAe,MAAXmO,EACO,0BACW,MAAXA,EACA,+BAEJ,YAGf/I,IACIpD,KAAQ,iBACRC,YAAe,SAAC3E,GACZ,GAAM8Q,GAAO9Q,EAAM0C,KAAK,GACxB,OAAa,MAAToO,EACO,4BACS,MAATA,EACA,4BAEJ,YAGfC,GAAQ,SACRC,IACItM,KAAQ,cACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,sBACQ,MAARA,EACA,iBACQ,MAARA,EACA,QAEJ,YAGfQ,GAAQ,WACRC,IACIxM,KAAQ,cACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,iBACQ,MAARA,EACA,qBAEJ,YAGfU,GAAQ,WACRC,IACI1M,KAAQ,qBACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,iBACQ,MAARA,EACA,qBAEJ,YAGfY,GAAQ,kBACRC,GAAQ,cACRC,IACI7M,KAAQ,qBACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,iBACQ,MAARA,EACA,iBAEJ,YAGfe,IACI9M,KAAQ,kBACRC,YAAe,SAAC3E,GACZ,MAAOA,GAAM,GAAKA,EAAM,GAAK,GAAKA,EAAM,GAAK,OAGrDyR,IACI/M,KAAQ,sBACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,iBACQ,MAARA,EACA,iBAEJ,YAGfiB,IACIhN,KAAQ,mBACRC,YAAe,SAAC3E,GACZ,MAAOA,GAAM,GAAKA,EAAM,GAAK,GAAKA,EAAM,GAAK,OAGrD2R,IACIjN,KAAQ,oBACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,iBACQ,MAARA,EACA,qBAEJ,YAGfmB,GAAQ,iBACRC,IACInN,KAAQ,qBACRC,YAAe,SAAC3E,GACZ,GAAMyQ,GAAMzQ,EAAM0C,KAAK,GACvB,OAAY,MAAR+N,EACO,aACQ,MAARA,EACA,QACQ,MAARA,EACA,QAEJ,YAGfqB,GAAQ,kBACRC,IACIrN,KAAQ,sBACRC,YAAA6G,EAAAqC,kBAEJmE,IACItN,KAAQ,qBACRC,YAAA6G,EAAAqC,kBAEJoE,GAAQ,eACRC,IACIxN,KAAQ,kBACRC,YAAe,SAAC3E,GACZ,MAAc,KAAVA,EACO,8CACU,IAAVA,EACA,kCAEJ,gBZonCb,SAASjE,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,GAAUe,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAyMb,KAAM,SAAUJ,GAAU,YAAagE,QAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EAAQ4B,Sat1C7xBwJ,EAAQ,4Bb21CN,SAASnL,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,KAAMS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAwOb,KAAM,SAAUJ,EAASqW,GAAgB,YAAsI,SAAS5U,GAAuBC,GAAM,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,Gcl1Cj/B,QAAS4B,GAAKnB,EAAUmU,GACpB,IAAI,GAAAC,GAC8CC,EAAoBrU,EAAUmU,GAArEG,EADPF,EACOE,SAAsBC,EAD7BH,EACiBD,UACjB,OAAOK,GAAUxU,EAAUsU,EAAUC,GACvC,MAAOrU,GACL,UAIR,QAASmU,GAAoBrU,EAAUmU,GACnC,KAAOA,EAAaM,GAA8BzU,EAASwC,YAAY,CACnE,GAAMkS,GAAgBC,EAAiB3U,EAAUmU,EACjD,IAAIS,EAAmBF,GACnB,OAAQJ,SAAUI,EAAeP,aAErCA,IAAcM,EAA6BC,EAAcG,KAAOC,EAAgBJ,EAAcG,MAElG,KAAM,IAAIjT,OAAM,+BAGpB,QAAS+S,GAAiB3U,EAAUmU,GAChC,GAAMY,GAA6B,EAEnC,IAAI/U,EAASiK,UAAUkK,GAAY,KAAWa,EAC1C,KAAM,IAAIpT,OAAM,8BAGpB,QACIiG,KAAM7H,EAAS0C,UAAUyR,EAAac,GAAiB,GACvDJ,KAAM7U,EAAS0C,UAAUyR,EAAaY,GAA4B,IAI1E,QAASH,GAAmBF,GACxB,MAAOA,GAAc7M,OAASqN,EAGlC,QAASJ,GAAgBK,GACrB,MAAIA,GAAY,IAAM,EACX,EAEJ,EAGX,QAASX,GAAUxU,EAAUsU,EAAUH,GACnC,GAAM5T,KAEN4T,IAAcM,CAGd,KAFA,GAAMW,GAAmBjB,EAAaG,EAAA,KAE9BH,EAAaiB,GAAsBjB,EAAanU,EAASwC,YAAa,IAAA6S,GACnD7O,EAAQxG,EAAUmU,EAAY5T,GAA9CgG,EADmE8O,EACnE9O,IAAK+O,EAD8DD,EAC9DC,OAEYrW,UAAnBsB,EAAKgG,EAAIE,OAA+CxH,SAAtBsH,EAAA,WACnChG,EAAKgG,EAAIE,OACL1E,MAAOwE,EAAIxE,MACX2E,YAAaH,EAAIG,cAGfnG,EAAKgG,EAAIE,eAAiBmB,SAC5BrH,EAAKgG,EAAIE,QACL1E,MAAOxB,EAAKgG,EAAIE,MAAM1E,MACtB2E,YAAanG,EAAKgG,EAAIE,MAAMC,eAGpCnG,EAAKgG,EAAIE,MAAMlC,MACXxC,MAAOwE,EAAIxE,MACX2E,YAAaH,EAAIG,eAIzByN,GAAcoB,EAAkBD,EAGpC,MAAO/U,GAGX,QAASiG,GAAQxG,EAAUmU,EAAY5T,GACnC,GAAMiV,GAAkB,EAClBC,EAAkB,EAElB3O,EAAU9G,EAAS0C,UAAUyR,EAAaqB,GAAiB,GAC3DF,EAAUtV,EAAS0C,UAAUyR,EAAasB,GAAiB,GAC3DxO,EAAWG,EAAYpH,EAAUmU,EAAaoB,EAAiBD,GACjE/O,QAEJ,IAAsCtH,SAAlCyW,EAAAjW,QAAA,KAAqBqH,GAAwB,CAC7C,GAAIY,UAASC,QAEkC1I,UAA1CyW,EAAAjW,QAAA,KAAqBqH,GAArB,MACoD7H,SAAjDyW,EAAAjW,QAAA,KAAqBqH,GAArB,aACJY,EAAUgO,EAAAjW,QAAA,KAAqBqH,GAArB,KACVa,EAAiB+N,EAAAjW,QAAA,KAAqBqH,GAArB,YAA6CG,EAAU1G,KAGpEmH,EAD0CzI,SAA1CyW,EAAAjW,QAAA,KAAqBqH,GAArB,KACU4O,EAAAjW,QAAA,KAAqBqH,GAArB,KAEA4O,EAAAjW,QAAA,KAAqBqH,GAG/Ba,EADAV,YAAoBW,OACHX,EAAStC,IAAI,SAACC,GAAD,MAAcC,QAAOC,aAAaF,KAAWH,KAAK,IAE/DwC,GAGzBV,GACIE,KAAMiB,EACN3F,MAAOkF,EACPP,YAAaiB,GAEmC1I,SAAhDyW,EAAAjW,QAAA,KAAqBqH,GAArB,aACAP,EAAA,YAAoB,OAGxBA,IACIE,kBAAmBK,EACnB/E,MAAOkF,EACPP,YAAaO,EAIrB,QAAQV,MAAK+O,WAGjB,QAASlO,GAAYpH,EAAUqE,EAAQwQ,GAGnC,IAAK,GAFC9S,MAEGgG,EAAa,EAAGA,EAAa8M,EAAM9M,IACxChG,EAAMwC,KAAKvE,EAAS6D,SAASQ,EAAS0D,GAG1C,OAAOhG,Gd+sCuxBF,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GAAQ,IAAI2T,GAAiBpW,EAAuB4U,Gc51Ct4Bc,EAAa,UACbC,EAAkB,EAClBR,EAA6BQ,EAAkB,EAC/CC,EAA0B,KAC1BK,EAAkB,Cd81CK1X,GAAQ4B,Sc31CjC0B,Wdy+CE,SAASrD,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,IAAKS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAA8Ob,KAAM,SAAUJ,EAAS0P,GAAiB,YejqC3xB,SAASoI,GAAgB5T,GACrB,GAAM6T,IAAO,EAAArI,EAAAmB,gBAAe3M,EAE5B,OAAI6T,GAAK9V,QAAU,EACR8V,EAAKC,OAAO,EAAG,GAAK,IAAMD,EAAKC,OAAO,EAAG,GAAK,IAAMD,EAAKC,OAAO,EAAG,GAGvED,EAGX,QAASE,GAAgB/T,GACrB,GAAMgU,IAAO,EAAAxI,EAAAmB,gBAAe3M,GACxBiU,EAAaD,CASjB,OAPIA,GAAKjW,QAAU,IACfkW,EAAaD,EAAKF,OAAO,EAAG,GAAK,IAAME,EAAKF,OAAO,EAAG,GAAK,IAAME,EAAKF,OAAO,EAAG,GAC5D,KAAhBE,EAAKjW,SACLkW,GAAcD,EAAKF,OAAO,EAAG,GAAKE,EAAKF,OAAO,EAAG,GAAK,IAAME,EAAKF,OAAO,EAAG,KAI5EG,Ef4oC6xBnU,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EAAQ4B,Sej/C12B+B,MACIyU,KACIxP,KAAQ,sBACRC,YAAe,SAAC3E,GACZ,GAAMkG,IAAS,EAAAsF,EAAAmB,gBAAe3M,EAC9B,OAAe,QAAXkG,EACO,QACW,SAAXA,EACA,gBACW,SAAXA,EACA,gBACW,SAAXA,EACA,gBAEJ,YAGfiO,KACIzP,KAAQ,iBACRC,YAAe,SAAC3E,GACZ,QAASA,EAAM,IAAM,GAAKA,EAAM,IAAIoU,aAG5CC,IAAQ,wBACRC,IAAQ,6BACRC,IAAQ,cACRC,IAAQ,cACRC,KACI/P,KAAQ,mBACRC,YAAe,SAAC3E,GACZ,MAA8B,QAA1B,EAAAwL,EAAAmB,gBAAe3M,GACR,sBAEJ,YAGf0U,IAAQ,UACRC,KACIjQ,KAAQ,oBACRkQ,YAAc,EACdjQ,YAAe,SAAC3E,GACZ,GAAM6U,IAAQ,EAAArJ,EAAAmB,gBAAe3M,GAAOsQ,MAAM,IAC1C,OAAOuE,GAAM,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAAK,KAAOA,EAAM,GAAK,IAAMA,EAAM,GAAK,MAG1FC,IAAQ,WACR1J,KACI1G,KAAQ,wBACRkQ,YAAc,GAElBG,IAAQ,qBACRC,KACItQ,KAAQ,WACRkQ,YAAc,GAElBK,KACIvQ,KAAQ,wBACRkQ,YAAc,GAElBM,KACIxQ,KAAQ,wBACRkQ,YAAc,GAElBO,IAAQ,eACRC,IAAQ,eACRC,IAAQ,kBACRC,IAAQ,kBACRC,IAAQ,uBACRC,KACI9Q,KAAQ,iBACRC,YAAe,SAAC3E,GACZ,GAAMkG,IAAS,EAAAsF,EAAAmB,gBAAe3M,EAC9B,OAAe,OAAXkG,EACO,cACW,OAAXA,EACA,iBACW,OAAXA,EACA,gBACW,OAAXA,EACA,mBAEJ,YAGfuP,KACI/Q,KAAQ,oBACRkQ,YAAc,GAElBc,KACIhR,KAAQ,iBACRkQ,YAAc,GAElBe,KACIjR,KAAQ,mBACRkQ,YAAc,GAElBgB,KACIlR,KAAQ,eACRC,YAAeiP,GAEnBiC,KACInR,KAAQ,eACRC,YAAeoP,GAEnB+B,KACIpR,KAAQ,wBACRC,YAAeiP,GAEnBmC,KACIrR,KAAQ,wBACRC,YAAeoP,GAEnBiC,IAAQ,sBACRC,IAAQ,kBACRC,KACIxR,KAAQ,eACRC,YAAe,SAAC3E,GACZ,GAAMkG,IAAS,EAAAsF,EAAAmB,gBAAe3M,EAC9B,OAAe,MAAXkG,EACO,UACW,MAAXA,EACA,UACW,MAAXA,EACA,OAEJ,YAGfiQ,KACIzR,KAAQ,UACRkQ,YAAc,GAElBwB,KACI1R,KAAQ,gBACRkQ,YAAc,GAElByB,IAAQ,OACRC,IAAQ,eACRC,IAAQ,iBACRC,IAAQ,gCACRC,IAAQ,gCACRC,IAAQ,kCACRC,IAAQ,WACRC,IAAQ,SACRC,IAAQ,SACRC,IAAQ,mBACRC,KACIrS,KAAQ,UACRkQ,YAAc,GAElBoC,IAAQ,mBACRC,KACIvS,KAAQ,gBACRkQ,YAAc,GAElBsC,KACIxS,KAAQ,qBACRC,YAAe,SAAC3E,GAAD,MAAWA,KAE9BmX,IAAQ,aACRC,KACI1S,KAAQ,oBACRC,YAAe,SAAC3E,GACZ,GAAMkG,IAAS,EAAAsF,EAAAmB,gBAAe3M,EAC9B,OAAe,MAAXkG,EACO,WACW,MAAXA,EACA,YACW,MAAXA,EACA,SAEJ,YAGfmR,IAAQ,sBACRC,KACI5S,KAAQ,aACRC,YAAe,QAAAA,GAAC3E,GACZ,GAAMuX,IAAc,EAAA/L,EAAAmB,gBAAe3M,GAC7BwX,EAAaD,EAAYE,OAAO,GAChCC,EAAaH,EAAYE,OAAO,GAClC9S,EAAc,EA0BlB,OAxBmB,MAAf6S,EACA7S,GAAe,OACO,MAAf6S,IACP7S,GAAe,UAGA,MAAf+S,EACA/S,GAAe,cACO,MAAf+S,EACP/S,GAAe,gCACO,MAAf+S,EACP/S,GAAe,iCACO,MAAf+S,EACP/S,GAAe,2BACO,MAAf+S,EACP/S,GAAe,cACO,MAAf+S,EACP/S,GAAe,WACO,MAAf+S,EACP/S,GAAe,WACO,MAAf+S,IACP/S,GAAe,UAGC,KAAhBA,EACOA,EAEJ4S,IAGfI,KACIjT,KAAQ,sBACRC,YAAe,SAAC3E,GAAD,MAAW4X,WAAS,EAAApM,EAAAmB,gBAAe3M,GAAQ,IAAM,QAEpE6X,KACInT,KAAQ,4BACRC,YAAe,SAAC3E,GACZ,GAAM8X,GAAOF,UAAS,EAAApM,EAAAmB,gBAAe3M,GAAQ,GAC7C,OAAO8X,IAAiB,IAATA,EAAa,OAAS,WAG7CC,KACIrT,KAAQ,iBACRC,YAAe,SAAC3E,GACZ,GAAMgY,IAAW,EAAAxM,EAAAmB,gBAAe3M,EAChC,OAAIgY,GAASja,QAAU,EACZia,EAASlE,OAAO,EAAG,GAAK,IAAMkE,EAASlE,OAAO,EAAG,GAAK,IAAMkE,EAASlE,OAAO,EAAG,GAEnFkE,IAGfC,IAAQ,eACRC,KACIxT,KAAQ,iCACRC,YAAe,SAAC3E,GACZ,GAAMuX,IAAc,EAAA/L,EAAAmB,gBAAe3M,EACnC,OAAoB,OAAhBuX,EACO,gBACgB,OAAhBA,EACA,8CACgB,OAAhBA,EACA,sCACgB,OAAhBA,EACA,oDACgB,OAAhBA,EACA,oCACgB,OAAhBA,EACA,mCACgB,OAAhBA,EACA,uBACgB,OAAhBA,EACA,eACgB,OAAhBA,EACA,2DACgB,OAAhBA,EACA,+CACgB,OAAhBA,EACA,+CACgB,OAAhBA,EACA,+BACgB,OAAhBA,EACA,qCACgB,OAAhBA,EACA,6CACgB,OAAhBA,EACA,yDACgB,OAAhBA,EACA,8CACgB,OAAhBA,EACA,iDACgB,OAAhBA,EACA,8CACgB,OAAhBA,EACA,0DACgB,OAAhBA,EACA,oCACgB,OAAhBA,EACA,8BACgB,OAAhBA,EACA,0DACgB,OAAhBA,EACA,0CACgB,OAAhBA,EACA,gCACgB,OAAhBA,EACA,uCACgB,OAAhBA,EACA,mCACgB,OAAhBA,EACA,uBACgB,OAAhBA,EACA,sDACgB,OAAhBA,EACA,2CACgB,OAAhBA,EACA,qBAEJ,kBAAoBA,IAGnCY,KACIzT,KAAQ,yCACRC,YAAe,SAAC3E,EAAOxB,GAEnB,GAAM4Z,IACFC,MAAOA,KAAM,KACbC,MAAOA,KAAM,IAAKC,KAAM,IAAKC,KAAM,IAAKC,KAAM,KAC9CF,MAAOE,KAAM,KACbD,MAAOF,KAAM,MAAOC,KAAM,OAC1BE,MAAOH,KAAM,QACbI,MAAOJ,KAAM,KACbK,MAAOL,KAAM,KACbvH,IAAOuH,KAAM,QACb9G,IAAO8G,KAAM,MAAOC,KAAM,MAAOC,KAAM,MAAOC,KAAM,OACpDhH,IAAO8G,KAAM,QAEXhB,GAAc,EAAA/L,EAAAmB,gBAAe3M,EAEnC,IAAIxB,EAAK,kCAAmC,CACxC,GAAMoa,IAA8B,EAAApN,EAAAmB,gBAAenO,EAAK,kCAAkCwB,MAC1F,IAAIoY,EAAeQ,IACZR,EAAeQ,GAA6BrB,GAC/C,MAAOa,GAAeQ,GAA6BrB,GAI3D,MAAOA,KAGfsB,IAAQ,+BfkhDV,SAAS9c,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,EAASM,EAAoB,GAAIA,EAAoB,KAAMS,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAuQb,KAAM,SAAUJ,EAAS0E,EAAQsY,GAAe,YAAoI,SAASvb,GAAuBC,GAAM,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GgB51D7iC,QAAS4B,GAAKnB,EAAUmU,EAAY2G,GAChC,IACI,GAAMC,GAAMC,EAAYhb,EAAUmU,EAAY2G,GACxCG,EAAMC,EAAOH,EAEnB,OAAOI,GAAeC,EAAgBH,GAAK,IAC7C,MAAO/a,GACL,UAIR,QAAS8a,GAAYhb,EAAUmU,EAAY2G,GACvC,GAAyB,mBAAdO,WAEP,KADAlb,SAAQC,KAAK,4TACP,GAAIwB,MAGd,IAAM0Z,GAAY,GAAID,WAChBE,GAAY,EAAAhZ,EAAAqB,uBAAsB5D,EAAUmU,EAAY2G,GACxDC,EAAMO,EAAUE,gBAAgBD,EAAW,kBAEjD,IAAqC,gBAAjCR,EAAIU,gBAAgBC,SACpB,KAAM,IAAI9Z,MAGd,OAAOmZ,GAGX,QAASG,GAAOS,GACZ,IAAK,GAAIzZ,GAAI,EAAGA,EAAIyZ,EAAKC,WAAW9b,OAAQoC,IAAK,CAC7C,GAAmC,cAA/ByZ,EAAKC,WAAW1Z,GAAGwF,QACnB,MAAOwT,GAAOS,EAAKC,WAAW1Z,GAElC,IAAmC,YAA/ByZ,EAAKC,WAAW1Z,GAAGwF,QACnB,MAAOiU,GAAKC,WAAW1Z,GAI/B,KAAM,IAAIN,OAGd,QAASwZ,GAAgBO,GAAyB,GAAnBE,GAAmBhc,UAAAC,OAAA,GAAAb,SAAAY,UAAA,IAAAA,UAAA,GACxC+b,EAAaE,EAAcH,EAEjC,OAAII,GAAmBH,GACfC,KAGGG,EAAaJ,EAAW,IAG5BK,EAAqBL,GAGhC,QAASE,GAAcH,GAGnB,IAAK,GAFCO,MAEGha,EAAI,EAAGA,EAAIyZ,EAAKC,WAAW9b,OAAQoC,IACxCga,EAAS3X,KAAKoX,EAAKC,WAAW1Z,GAGlC,OAAOga,GAGX,QAASH,GAAmBI,GACxB,MAAyB,KAAjBA,EAAMrc,QAAwC,UAAtBqc,EAAM,GAAGT,SAG7C,QAASM,GAAaL,GAClB,MAAOA,GAAKS,UAGhB,QAASH,GAAqBE,GAC1B,GAAMD,KAiBN,OAfAC,GAAME,QAAQ,SAACV,GACX,GAAIW,EAAUX,GAAO,CACjB,GAAMY,GAAcC,EAAmBb,EAEP1c,UAA5Bid,EAASP,EAAKD,WACT9T,MAAMqG,QAAQiO,EAASP,EAAKD,aAC7BQ,EAASP,EAAKD,WAAaQ,EAASP,EAAKD,YAE7CQ,EAASP,EAAKD,UAAUnX,KAAKgY,IAE7BL,EAASP,EAAKD,UAAYa,KAK/BL,EAGX,QAASI,GAAUX,GACf,MAAQA,GAAKD,UAAgC,UAAlBC,EAAKD,SAGpC,QAASc,GAAmBb,GACxB,OACIc,WAAYC,EAAcf,GAC1B5Z,MAAOqZ,EAAgBO,IAI/B,QAASe,GAAcC,GAGnB,IAAK,GAFCF,MAEGva,EAAI,EAAGA,EAAIya,EAAQF,WAAW3c,OAAQoC,IAC3Cua,EAAWE,EAAQF,WAAWva,GAAGwZ,UAAYiB,EAAQF,WAAWva,GAAGH,KAGvE,OAAO0a,GAGX,QAAStB,GAAeyB,GACpB,GAAMrc,KAEN,IAAyB,gBAAdqc,GACP,MAAOA,EAGX,KAAK,GAAMlB,KAAYkB,GAAW,CAC9B,GAAIT,GAAQS,EAAUlB,EAEjB9T,OAAMqG,QAAQkO,KACfA,GAASA,IAGbA,EAAME,QAAQ,SAACV,GACXta,EAAcd,EAAMsc,EAA0BlB,EAAKc,aACnDpb,EAAcd,EAAMuc,EAAwBnB,EAAK5Z,UAIzD,MAAOxB,GAGX,QAASsc,GAA0BJ,GAC/B,GAAMlc,KAEN,KAAK,GAAMkG,KAAQgW,GACXM,EAAetW,KACflG,EAAKyc,EAAavW,KACd1E,MAAO0a,EAAWhW,GAClBgW,cACA/V,YAAauW,EAAeR,EAAWhW,GAAOA,IAK1D,OAAOlG,GAGX,QAASwc,GAAetW,GACpB,MAAiB,kBAATA,IAA+ByW,EAAsBzW,GAGjE,QAASyW,GAAsBzW,GAC3B,MAA8B,UAAvBA,EAAK4L,MAAM,KAAK,GAG3B,QAAS2K,GAAavW,GAClB,MAAOA,GAAK4L,MAAM,KAAK,GAG3B,QAAS4K,GAAelb,GAAyB,GAAlB0E,GAAkB5G,UAAAC,OAAA,GAAAb,SAAAY,UAAA,GAAAA,UAAA,GAAXZ,MAClC,IAAI2I,MAAMqG,QAAQlM,GACd,MAAOob,GAAsBpb,EAEjC,IAAqB,YAAjB,mBAAOA,GAAP,YAAAqb,EAAOrb,IACP,MAAOsb,GAAuBtb,EAGlC,KACI,MAAK0E,IAAuC,kBAAtB6W,GAAA7d,QAAYgH,GACvB6W,EAAA7d,QAAYgH,GAAM1E,GAEtBgH,mBAAmBC,OAAOjH,IACnC,MAAO7B,GACL,MAAO6B,IAIf,QAASob,GAAsBpb,GAC3B,MAAOA,GAAM4C,IAAI,SAAC4Y,GACd,MACWN,GADQhe,SAAfse,EAAKxb,MACiBwb,EAAKxb,MAETwb,KACvB9Y,KAAK,MAGZ,QAAS4Y,GAAuBtb,GAC5B,GAAMyb,KAEN,KAAK,GAAMpb,KAAOL,GACdyb,EAAajZ,KAAQkZ,EAAgBrb,GAArC,KAA8CL,EAAMK,GAAKL,MAG7D,OAAOyb,GAAa/Y,KAAK,MAG7B,QAASgZ,GAAgBrb,GACrB,MAAY,cAARA,EACO,cAEC,cAARA,EACO,iBAEC,gBAARA,EACO,iBAEC,eAARA,EACO,oBAEC,gBAARA,EACO,gBAEC,gBAARA,EACO,mBAEC,cAARA,EACO,mBAEC,cAARA,EACO,iBAEJA,EAGX,QAAS0a,GAAwBY,GAC7B,GAAMnd,KAEN,KAAK,GAAMkG,KAAQiX,GACVR,EAAsBzW,KACvBlG,EAAKyc,EAAavW,IAASkX,EAAeD,EAASjX,GAAOA,GAIlE,OAAOlG,GAGX,QAASod,GAAehC,EAAMlV,GAC1B,MAAImX,GAA8BjC,GACvBkC,EAAgClC,EAAMlV,GACtCqX,EAAiCnC,GACjCoC,EAAmCpC,EAAMlV,GACzCuX,EAAmBrC,GACnBsC,EAA4BtC,EAAMlV,GAClCwH,EAAQ0N,GACRuC,EAAiBvC,EAAMlV,GAE3B0X,EAAuBxC,EAAMlV,GAGxC,QAASmX,GAA8BjC,GACnC,MAA8C,aAArCA,EAAKc,WAAW,kBAAiExd,SAA5B0c,EAAK5Z,MAAM,cAC9B9C,SAAlC0c,EAAK5Z,MAAM,oBAA2F9C,SAArD0c,EAAK5Z,MAAM,mBAAmBA,MAAM,aAGlG,QAAS8b,GAAgClC,EAAMlV,GAC3C,GAAMgW,GAAa2B,EAAoBzC,EAED1c,UAAlC0c,EAAK5Z,MAAM,qBACX4Z,EAAOA,EAAK5Z,MAAM,oBAGtBV,EAAcob,EAAY2B,EAAoBzC,GAAO0C,EAA8B1C,GAEnF,IAAM5Z,GAAQuc,EAAc3C,EAE5B,QACI5Z,QACA0a,aACA/V,YAAauW,EAAelb,EAAO0E,IAI3C,QAAS2X,GAAoBzC,GACzB,GAAMc,KAEN,KAAK,GAAMhW,KAAQkV,GAAKc,WACN,kBAAThW,GAAuC,iBAATA,GAA8ByW,EAAsBzW,KACnFgW,EAAWO,EAAavW,IAASkV,EAAKc,WAAWhW,GAIzD,OAAOgW,GAGX,QAAS4B,GAA8B1C,GACnC,GAAMc,KAEN,KAAK,GAAMhW,KAAQkV,GAAK5Z,MACN,cAAT0E,GAA2ByW,EAAsBzW,KAClDgW,EAAWO,EAAavW,IAASkV,EAAK5Z,MAAM0E,GAAM1E;AAI1D,MAAO0a,GAGX,QAAS6B,GAAc3C,GACnB,MAAO4C,GAAY5C,EAAK5Z,MAAM,eAAiB4Z,EAAK5Z,MAAM,aAAaA,MAG3E,QAAS+b,GAAiCnC,GACtC,MAA6C,aAArCA,EAAKc,WAAW,kBACmBxd,SAAlC0c,EAAK5Z,MAAM,oBAA2F9C,SAArD0c,EAAK5Z,MAAM,mBAAmBA,MAAM,aAGlG,QAASgc,GAAmCpC,EAAMlV,GAC9C,GAAMF,IACFxE,SACA0a,cAaJ,OAVsCxd,UAAlC0c,EAAK5Z,MAAM,qBACXV,EAAckF,EAAIxE,MAAO8a,EAA0BlB,EAAK5Z,MAAM,mBAAmB0a,aACjFpb,EAAckF,EAAIkW,WAAY2B,EAAoBzC,IAClDA,EAAOA,EAAK5Z,MAAM,oBAGtBV,EAAckF,EAAIxE,MAAO+a,EAAwBnB,EAAK5Z,QAEtDwE,EAAIG,YAAcuW,EAAe1W,EAAIxE,MAAO0E,GAErCF,EAGX,QAASyX,GAAmBrC,GACxB,MAA2C,KAAnC9Z,OAAO2c,KAAK7C,EAAK5Z,OAAOjC,QACYb,SAApC0c,EAAKc,WAAW,gBAG5B,QAASwB,GAA4BtC,EAAMlV,GACvC,GAAM1E,GAAQ8a,EAA0BlB,EAAKc,WAE7C,QACI1a,QACA0a,cACA/V,YAAauW,EAAelb,EAAO0E,IAI3C,QAASwH,GAAQ0N,GACb,MAAqC1c,UAA9Bwf,EAAc9C,EAAK5Z,OAG9B,QAAS0c,GAAc1c,GACnB,MAAOA,GAAM,YAAcA,EAAM,YAAcA,EAAM,WAGzD,QAASmc,GAAiBvC,EAAMlV,GAC5B,GAAIiY,GAAQD,EAAc9C,EAAK5Z,OAAOA,MAAM,UACtC0a,EAAa2B,EAAoBzC,GACjC5Z,IAUN,OARK6F,OAAMqG,QAAQyQ,KACfA,GAASA,IAGbA,EAAMrC,QAAQ,SAACkB,GACXxb,EAAMwC,KAAKoa,EAAgBpB,OAI3Bxb,QACA0a,aACA/V,YAAauW,EAAelb,EAAO0E,IAI3C,QAASkY,GAAgBpB,GACrB,MAAIK,GAA8BL,GACvBM,EAAgCN,GAGvCqB,EAAoBrB,GACbT,EAAwBS,EAAKxb,QAIpCA,MAAOwb,EAAKxb,MACZ0a,WAAY2B,EAAoBb,GAChC7W,YAAauW,EAAeM,EAAKxb,QAIzC,QAAS6c,GAAoBjD,GACzB,MAA4C,aAArCA,EAAKc,WAAW,iBAG3B,QAAS0B,GAAuBxC,EAAMlV,GAClC,GAAM1E,GAAQwc,EAAY5C,IAASR,EAAeQ,EAAK5Z,MAEvD,QACIA,QACA0a,WAAY2B,EAAoBzC,GAChCjV,YAAauW,EAAelb,EAAO0E,IAI3C,QAAS8X,GAAY5C,GACjB,MAAOA,GAAKc,YAAcd,EAAKc,WAAW,gBhBw8CkzB5a,OAAOC,eAAejE,EAAS,cAAgBkE,OAAO,GAAQ,IAAIub,GAAgBhe,EAAuBub,GAA+GuC,EAA4B,kBAAX7U,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjJ,GAAM,aAAcA,IAAQ,SAAUA,GAAM,MAAOA,IAAyB,kBAAXgJ,SAAyBhJ,EAAIsf,cAAgBtW,QAAUhJ,IAAQgJ,OAAOlG,UAAY,eAAkB9C,IAAU8B,EAAWQ,OAAOG,QAAU,SAAUC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAIrC,UAAUC,OAAQoC,IAAK,CAAC,GAAIC,GAAStC,UAAUqC,EAAG,KAAK,GAAIE,KAAOD,GAAaN,OAAOQ,UAAUC,eAAe9D,KAAK2D,EAAQC,KAAOH,EAAOG,GAAOD,EAAOC,IAAQ,MAAOH,GAASpE,GAAQ4B,SgB/1DxjD0B,WhB+vEE,SAASrD,EAAQD,EAASM,GAE/B,GAAIS,GAAgCC,EAA8BC,GAA8B,SAAWC,EAAQnB,GAAuBiB,GAAgChB,GAAUe,EAAiC,EAAWE,EAA2E,kBAAnCF,GAAiDA,EAA+BI,MAAMnB,EAASgB,GAAiCD,IAAmEK,SAAlCH,IAAgDhB,EAAOD,QAAUiB,KAAyLb,KAAM,SAAUJ,GAAU,YAAagE,QAAOC,eAAejE,EAAS,cAAgBkE,OAAO,IAAQlE,EAAQ4B,SiBpwE7wBqf,mBADW,SACQ/c,GACf,MAAc,MAAVA,EACO,sBAEG,MAAVA,EACO,oBAEG,MAAVA,EACO,aAEG,MAAVA,EACO,kBAEG,MAAVA,EACO,sCAEG,MAAVA,EACO,eAEG,MAAVA,EACO,qCAEG,MAAVA,EACO,gBAEJA","file":"exif-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(3), __webpack_require__(12), __webpack_require__(14)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./image-header'), require('./tags'), require('./iptc-tags'), require('./xmp-tags'));} else {var mod = { exports: {} };factory(mod.exports, global.imageHeader, global.tags, global.iptcTags, global.xmpTags);global.exifReader = mod.exports;}})(this, function (exports, _imageHeader, _tags, _iptcTags, _xmpTags) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t    load = load;exports.\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t    loadView = loadView;var _imageHeader2 = _interopRequireDefault(_imageHeader);var _tags2 = _interopRequireDefault(_tags);var _iptcTags2 = _interopRequireDefault(_iptcTags);var _xmpTags2 = _interopRequireDefault(_xmpTags);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};function load(data) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { expanded: false };var dataView = void 0;try {dataView = new DataView(data);} catch (error) {console.warn('Warning: A full DataView implementation is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DataView polyfill, e.g. jdataview: npm install --save jdataview\\n  2. Require that at the top of your script: global.DataView = require(\\'jdataview\\');\\nSee an example of this in the ExifReader example directory.'); // eslint-disable-line no-console\n\t            return {};}return loadView(dataView, options);}function loadView(dataView) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { expanded: false };var foundMetaData = false;\n\t        var tags = {};\n\t\n\t        _imageHeader2.default.check(dataView);var _ImageHeader$parseApp =\n\t        _imageHeader2.default.parseAppMarkers(dataView),tiffHeaderOffset = _ImageHeader$parseApp.tiffHeaderOffset,iptcDataOffset = _ImageHeader$parseApp.iptcDataOffset,xmpDataOffset = _ImageHeader$parseApp.xmpDataOffset,xmpFieldLength = _ImageHeader$parseApp.xmpFieldLength;\n\t\n\t        if (hasExifData(tiffHeaderOffset)) {\n\t            foundMetaData = true;\n\t            var readTags = _tags2.default.read(dataView, tiffHeaderOffset);\n\t            if (options.expanded) {\n\t                tags.exif = readTags;\n\t            } else {\n\t                tags = _extends({}, tags, readTags);\n\t            }\n\t        }\n\t        if (hasIptcData(iptcDataOffset)) {\n\t            foundMetaData = true;\n\t            var _readTags = _iptcTags2.default.read(dataView, iptcDataOffset);\n\t            if (options.expanded) {\n\t                tags.iptc = _readTags;\n\t            } else {\n\t                tags = _extends({}, tags, _readTags);\n\t            }\n\t        }\n\t        if (hasXmpData(xmpDataOffset)) {\n\t            foundMetaData = true;\n\t            var _readTags2 = _xmpTags2.default.read(dataView, xmpDataOffset, xmpFieldLength);\n\t            if (options.expanded) {\n\t                tags.xmp = _readTags2;\n\t            } else {\n\t                tags = _extends({}, tags, _readTags2);\n\t            }\n\t        }\n\t        if (!foundMetaData) {\n\t            throw new Error('No Exif data');\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function hasExifData(tiffHeaderOffset) {\n\t        return tiffHeaderOffset !== undefined;\n\t    }\n\t\n\t    function hasIptcData(iptcDataOffset) {\n\t        return iptcDataOffset !== undefined;\n\t    }\n\t\n\t    function hasXmpData(xmpDataOffset) {\n\t        return xmpDataOffset !== undefined;\n\t    }});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./utils'));} else {var mod = { exports: {} };factory(mod.exports, global.utils);global.imageHeader = mod.exports;}})(this, function (exports, _utils) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });\n\t\n\t    var MIN_DATA_BUFFER_LENGTH = 2;\n\t    var JPEG_ID = 0xffd8;\n\t    var JPEG_ID_SIZE = 2;\n\t    var APP_ID_OFFSET = 4;\n\t    var APP_MARKER_SIZE = 2;\n\t    var TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\n\t    var IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\n\t    var XMP_DATA_OFFSET = 33; // From start of APP1 marker.\n\t    var APP0_MARKER = 0xffe0;\n\t    var APP1_MARKER = 0xffe1;\n\t    var APP13_MARKER = 0xffed;\n\t    var APP15_MARKER = 0xffef;\n\t    var COMMENT_MARKER = 0xfffe;\n\t    var APP1_EXIF_IDENTIFIER = 'Exif';\n\t    var APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/';\n\t    var APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';exports.default =\n\t\n\t    {\n\t        check: check,\n\t        parseAppMarkers: parseAppMarkers };\n\t\n\t\n\t    function check(dataView) {\n\t        if (dataView.byteLength < MIN_DATA_BUFFER_LENGTH || dataView.getUint16(0, false) !== JPEG_ID) {\n\t            throw new Error('Invalid image format');\n\t        }\n\t    }\n\t\n\t    function parseAppMarkers(dataView) {\n\t        var appMarkerPosition = JPEG_ID_SIZE;\n\t        var fieldLength = void 0;\n\t        var tiffHeaderOffset = void 0;\n\t        var iptcDataOffset = void 0;\n\t        var xmpDataOffset = void 0;\n\t        var xmpFieldLength = void 0;\n\t\n\t        while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n\t            if (isApp1ExifMarker(dataView, appMarkerPosition)) {\n\t                fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n\t                tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n\t            } else if (isApp1XMPMarker(dataView, appMarkerPosition)) {\n\t                fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n\t                xmpDataOffset = appMarkerPosition + XMP_DATA_OFFSET;\n\t                xmpFieldLength = fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE);\n\t            } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n\t                fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n\t                iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n\t            } else if (isAppMarker(dataView, appMarkerPosition)) {\n\t                fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n\t            } else {\n\t                break;\n\t            }\n\t            appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n\t        }\n\t\n\t        return {\n\t            hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n\t            tiffHeaderOffset: tiffHeaderOffset,\n\t            iptcDataOffset: iptcDataOffset,\n\t            xmpDataOffset: xmpDataOffset,\n\t            xmpFieldLength: xmpFieldLength };\n\t\n\t    }\n\t\n\t    function isApp1ExifMarker(dataView, appMarkerPosition) {\n\t        var markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\t\n\t        return dataView.getUint16(appMarkerPosition, false) === APP1_MARKER &&\n\t        (0, _utils.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER &&\n\t        dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00;\n\t    }\n\t\n\t    function isApp1XMPMarker(dataView, appMarkerPosition) {\n\t        var markerIdLength = APP1_XMP_IDENTIFIER.length;\n\t\n\t        return dataView.getUint16(appMarkerPosition, false) === APP1_MARKER &&\n\t        (0, _utils.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER &&\n\t        dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00;\n\t    }\n\t\n\t    function isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n\t        var markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\t\n\t        return dataView.getUint16(appMarkerPosition, false) === APP13_MARKER &&\n\t        (0, _utils.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER &&\n\t        dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00;\n\t    }\n\t\n\t    function isAppMarker(dataView, appMarkerPosition) {\n\t        var appMarker = dataView.getUint16(appMarkerPosition, false);\n\t        return appMarker >= APP0_MARKER && appMarker <= APP15_MARKER ||\n\t        appMarker === COMMENT_MARKER;\n\t    }});\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports);} else {var mod = { exports: {} };factory(mod.exports);global.utils = mod.exports;}})(this, function (exports) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.getStringFromDataView = getStringFromDataView;function getStringFromDataView(dataView, offset, length) {\n\t        var chars = [];\n\t        for (var i = 0; i < length && offset + i < dataView.byteLength; i++) {\n\t            chars.push(dataView.getUint8(offset + i, false));\n\t        }\n\t        return getAsciiValue(chars).join('');\n\t    }\n\t\n\t    function getAsciiValue(charArray) {\n\t        return charArray.map(function (charCode) {return String.fromCharCode(charCode);});\n\t    }});\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(4), __webpack_require__(5), __webpack_require__(6)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./byte-order'), require('./types'), require('./tag-names'));} else {var mod = { exports: {} };factory(mod.exports, global.byteOrder, global.types, global.tagNames);global.tags = mod.exports;}})(this, function (exports, _byteOrder, _types, _tagNames) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });var _byteOrder2 = _interopRequireDefault(_byteOrder);var _types2 = _interopRequireDefault(_types);var _tagNames2 = _interopRequireDefault(_tagNames);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};\n\t\n\t\n\t\n\t    var EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\n\t    var GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\n\t    var INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\t\n\t    var getTagValueAt = {\n\t        1: _types2.default.getByteAt,\n\t        2: _types2.default.getAsciiAt,\n\t        3: _types2.default.getShortAt,\n\t        4: _types2.default.getLongAt,\n\t        5: _types2.default.getRationalAt,\n\t        7: _types2.default.getUndefinedAt,\n\t        9: _types2.default.getSlongAt,\n\t        10: _types2.default.getSrationalAt };exports.default =\n\t\n\t\n\t    {\n\t        read: read };\n\t\n\t\n\t    function read(dataView, tiffHeaderOffset) {\n\t        var byteOrder = _byteOrder2.default.getByteOrder(dataView, tiffHeaderOffset);\n\t        var tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\n\t        tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\t        tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\t        tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\t\n\t        return tags;\n\t    }\n\t\n\t    function read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\n\t        return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\n\t    }\n\t\n\t    function get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n\t        return tiffHeaderOffset + _types2.default.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n\t    }\n\t\n\t    function readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n\t        if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n\t            return _extends(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n\t        if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n\t            return _extends(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n\t        if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n\t            return _extends(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n\t        var FIELD_COUNT_SIZE = _types2.default.getTypeSize('SHORT');\n\t        var FIELD_SIZE = 12;\n\t\n\t        var tags = {};\n\t        var numberOfFields = _types2.default.getShortAt(dataView, offset, byteOrder);\n\t\n\t        offset += FIELD_COUNT_SIZE;\n\t        for (var fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n\t            var tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\n\t            if (tag !== undefined) {\n\t                tags[tag.name] = { 'value': tag.value, 'description': tag.description };\n\t            }\n\t            offset += FIELD_SIZE;\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n\t        var TAG_TYPE_OFFSET = _types2.default.getTypeSize('SHORT');\n\t        var TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + _types2.default.getTypeSize('SHORT');\n\t        var TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + _types2.default.getTypeSize('LONG');\n\t\n\t        var tagCode = _types2.default.getShortAt(dataView, offset, byteOrder);\n\t        var tagType = _types2.default.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n\t        var tagCount = _types2.default.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n\t        var tagValue = void 0;\n\t\n\t        if (_types2.default.typeSizes[tagType] === undefined) {\n\t            return undefined;\n\t        }\n\t\n\t        if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n\t            tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n\t        } else {\n\t            var tagValueOffset = _types2.default.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n\t            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\n\t        }\n\t\n\t        if (tagType === _types2.default.tagTypes['ASCII']) {\n\t            tagValue = splitNullSeparatedAsciiString(tagValue);\n\t            tagValue = decodeAsciiValue(tagValue);\n\t        }\n\t\n\t        if (_tagNames2.default[ifdType][tagCode] !== undefined) {\n\t            var tagName = void 0,tagDescription = void 0;\n\t\n\t            if (_tagNames2.default[ifdType][tagCode]['name'] !== undefined && _tagNames2.default[ifdType][tagCode]['description'] !== undefined) {\n\t                tagName = _tagNames2.default[ifdType][tagCode]['name'];\n\t                tagDescription = _tagNames2.default[ifdType][tagCode]['description'](tagValue);\n\t            } else {\n\t                tagName = _tagNames2.default[ifdType][tagCode];\n\t                if (tagValue instanceof Array) {\n\t                    tagDescription = tagValue.join(', ');\n\t                } else {\n\t                    tagDescription = tagValue;\n\t                }\n\t            }\n\t            return {\n\t                name: tagName,\n\t                value: tagValue,\n\t                description: tagDescription };\n\t\n\t        }\n\t\n\t        return {\n\t            name: 'undefined-' + tagCode,\n\t            value: tagValue,\n\t            description: tagValue };\n\t\n\t    }\n\t\n\t    function tagValueFitsInOffsetSlot(tagType, tagCount) {\n\t        return _types2.default.typeSizes[tagType] * tagCount <= _types2.default.getTypeSize('LONG');\n\t    }\n\t\n\t    function getTagValue(dataView, offset, type, count, byteOrder) {\n\t        var value = [];\n\t\n\t        for (var valueIndex = 0; valueIndex < count; valueIndex++) {\n\t            value.push(getTagValueAt[type](dataView, offset, byteOrder));\n\t            offset += _types2.default.typeSizes[type];\n\t        }\n\t\n\t        if (type === _types2.default.tagTypes['ASCII']) {\n\t            value = _types2.default.getAsciiValue(value);\n\t        } else if (value.length === 1) {\n\t            value = value[0];\n\t        }\n\t\n\t        return value;\n\t    }\n\t\n\t    function splitNullSeparatedAsciiString(string) {\n\t        var tagValue = [];\n\t        var i = 0;var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {\n\t\n\t            for (var _iterator = string[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var character = _step.value;\n\t                if (character === '\\x00') {\n\t                    i++;\n\t                    continue;\n\t                }\n\t                if (tagValue[i] === undefined) {\n\t                    tagValue[i] = '';\n\t                }\n\t                tagValue[i] += character;\n\t            }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}\n\t\n\t        return tagValue;\n\t    }\n\t\n\t    function decodeAsciiValue(asciiValue) {\n\t        try {\n\t            return asciiValue.map(function (value) {return decodeURIComponent(escape(value));});\n\t        } catch (error) {\n\t            return asciiValue;\n\t        }\n\t    }});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports);} else {var mod = { exports: {} };factory(mod.exports);global.byteOrder = mod.exports;}})(this, function (exports) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });var LITTLE_ENDIAN = 0x4949;\n\t    var BIG_ENDIAN = 0x4d4d;exports.default =\n\t\n\t    {\n\t        BIG_ENDIAN: BIG_ENDIAN,\n\t        LITTLE_ENDIAN: LITTLE_ENDIAN,\n\t        getByteOrder: getByteOrder };\n\t\n\t\n\t    function getByteOrder(dataView, tiffHeaderOffset) {\n\t        if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN)\n\t        return LITTLE_ENDIAN;else\n\t        if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n\t            return BIG_ENDIAN;\n\t        }\n\t        throw new Error('Illegal byte order value. Faulty image.');\n\t    }});\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./byte-order'));} else {var mod = { exports: {} };factory(mod.exports, global.byteOrder);global.types = mod.exports;}})(this, function (exports, _byteOrder) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });var _byteOrder2 = _interopRequireDefault(_byteOrder);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\t\n\t    var typeSizes = {\n\t        1: 1, // BYTE\n\t        2: 1, // ASCII\n\t        3: 2, // SHORT\n\t        4: 4, // LONG\n\t        5: 8, // RATIONAL\n\t        7: 1, // UNDEFINED\n\t        9: 4, // SLONG\n\t        10: 8 // SRATIONAL\n\t    };\n\t\n\t    var tagTypes = {\n\t        'BYTE': 1,\n\t        'ASCII': 2,\n\t        'SHORT': 3,\n\t        'LONG': 4,\n\t        'RATIONAL': 5,\n\t        'UNDEFINED': 7,\n\t        'SLONG': 9,\n\t        'SRATIONAL': 10 };exports.default =\n\t\n\t\n\t    {\n\t        getAsciiValue: getAsciiValue,\n\t        getByteAt: getByteAt,\n\t        getAsciiAt: getAsciiAt,\n\t        getShortAt: getShortAt,\n\t        getLongAt: getLongAt,\n\t        getRationalAt: getRationalAt,\n\t        getUndefinedAt: getUndefinedAt,\n\t        getSlongAt: getSlongAt,\n\t        getSrationalAt: getSrationalAt,\n\t        typeSizes: typeSizes,\n\t        tagTypes: tagTypes,\n\t        getTypeSize: getTypeSize };\n\t\n\t\n\t    function getAsciiValue(charArray) {\n\t        return charArray.map(function (charCode) {return String.fromCharCode(charCode);});\n\t    }\n\t\n\t    function getByteAt(dataView, offset) {\n\t        return dataView.getUint8(offset);\n\t    }\n\t\n\t    function getAsciiAt(dataView, offset) {\n\t        return dataView.getUint8(offset);\n\t    }\n\t\n\t    function getShortAt(dataView, offset, byteOrder) {\n\t        return dataView.getUint16(offset, byteOrder === _byteOrder2.default.LITTLE_ENDIAN);\n\t    }\n\t\n\t    function getLongAt(dataView, offset, byteOrder) {\n\t        return dataView.getUint32(offset, byteOrder === _byteOrder2.default.LITTLE_ENDIAN);\n\t    }\n\t\n\t    function getRationalAt(dataView, offset, byteOrder) {\n\t        return getLongAt(dataView, offset, byteOrder) / getLongAt(dataView, offset + 4, byteOrder);\n\t    }\n\t\n\t    function getUndefinedAt(dataView, offset) {\n\t        return getByteAt(dataView, offset);\n\t    }\n\t\n\t    function getSlongAt(dataView, offset, byteOrder) {\n\t        return dataView.getInt32(offset, byteOrder === _byteOrder2.default.LITTLE_ENDIAN);\n\t    }\n\t\n\t    function getSrationalAt(dataView, offset, byteOrder) {\n\t        return getSlongAt(dataView, offset, byteOrder) / getSlongAt(dataView, offset + 4, byteOrder);\n\t    }\n\t\n\t    function getTypeSize(typeName) {\n\t        if (tagTypes[typeName] === undefined) {\n\t            throw new Error('No such type found.');\n\t        }\n\t\n\t        return typeSizes[tagTypes[typeName]];\n\t    }});\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(7), __webpack_require__(8), __webpack_require__(10), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./tag-names-0th-ifd'), require('./tag-names-exif-ifd'), require('./tag-names-gps-ifd'), require('./tag-names-interoperability-ifd'));} else {var mod = { exports: {} };factory(mod.exports, global.tagNames0thIfd, global.tagNamesExifIfd, global.tagNamesGpsIfd, global.tagNamesInteroperabilityIfd);global.tagNames = mod.exports;}})(this, function (exports, _tagNames0thIfd, _tagNamesExifIfd, _tagNamesGpsIfd, _tagNamesInteroperabilityIfd) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });var _tagNames0thIfd2 = _interopRequireDefault(_tagNames0thIfd);var _tagNamesExifIfd2 = _interopRequireDefault(_tagNamesExifIfd);var _tagNamesGpsIfd2 = _interopRequireDefault(_tagNamesGpsIfd);var _tagNamesInteroperabilityIfd2 = _interopRequireDefault(_tagNamesInteroperabilityIfd);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}exports.default =\n\t\n\t\n\t\n\t\n\t    {\n\t        '0th': _tagNames0thIfd2.default,\n\t        'exif': _tagNamesExifIfd2.default,\n\t        'gps': _tagNamesGpsIfd2.default,\n\t        'interoperability': _tagNamesInteroperabilityIfd2.default };});\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports);} else {var mod = { exports: {} };factory(mod.exports);global.tagNames0thIfd = mod.exports;}})(this, function (exports) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = {\n\t        0x0100: 'ImageWidth',\n\t        0x0101: 'ImageLength',\n\t        0x0102: 'BitsPerSample',\n\t        0x0103: 'Compression',\n\t        0x0106: 'PhotometricInterpretation',\n\t        0x010e: 'ImageDescription',\n\t        0x010f: 'Make',\n\t        0x0110: 'Model',\n\t        0x0111: 'StripOffsets',\n\t        0x0112: {\n\t            name: 'Orientation',\n\t            description: function description(value) {\n\t                if (value === 1) {\n\t                    return 'top-left';\n\t                }\n\t                if (value === 2) {\n\t                    return 'top-right';\n\t                }\n\t                if (value === 3) {\n\t                    return 'bottom-right';\n\t                }\n\t                if (value === 4) {\n\t                    return 'bottom-left';\n\t                }\n\t                if (value === 5) {\n\t                    return 'left-top';\n\t                }\n\t                if (value === 6) {\n\t                    return 'right-top';\n\t                }\n\t                if (value === 7) {\n\t                    return 'right-bottom';\n\t                }\n\t                if (value === 8) {\n\t                    return 'left-bottom';\n\t                }\n\t                return 'Undefined';\n\t            } },\n\t\n\t        0x0115: 'SamplesPerPixel',\n\t        0x0116: 'RowsPerStrip',\n\t        0x0117: 'StripByteCounts',\n\t        0x011a: 'XResolution',\n\t        0x011b: 'YResolution',\n\t        0x011c: 'PlanarConfiguration',\n\t        0x0128: {\n\t            name: 'ResolutionUnit',\n\t            description: function description(value) {\n\t                if (value === 2) {\n\t                    return 'inches';\n\t                }\n\t                if (value === 3) {\n\t                    return 'centimeters';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x012d: 'TransferFunction',\n\t        0x0131: 'Software',\n\t        0x0132: 'DateTime',\n\t        0x013b: 'Artist',\n\t        0x013e: 'WhitePoint',\n\t        0x013f: 'PrimaryChromaticities',\n\t        0x0201: 'JPEGInterchangeFormat',\n\t        0x0202: 'JPEGInterchangeFormatLength',\n\t        0x0211: 'YCbCrCoefficients',\n\t        0x0212: 'YCbCrSubSampling',\n\t        0x0213: {\n\t            name: 'YCbCrPositioning',\n\t            description: function description(value) {\n\t                if (value === 1) {\n\t                    return 'centered';\n\t                }\n\t                if (value === 2) {\n\t                    return 'co-sited';\n\t                }\n\t                return 'undefined ' + value;\n\t            } },\n\t\n\t        0x0214: 'ReferenceBlackWhite',\n\t        0x8298: {\n\t            name: 'Copyright',\n\t            description: function description(value) {return value.join('; ');} },\n\t\n\t        0x8769: 'Exif IFD Pointer',\n\t        0x8825: 'GPS Info IFD Pointer' };});\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(9)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./tag-names-utils'));} else {var mod = { exports: {} };factory(mod.exports, global.tagNamesUtils);global.tagNamesExifIfd = mod.exports;}})(this, function (exports, _tagNamesUtils) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });var _slicedToArray = function () {function sliceIterator(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"]) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}return function (arr, i) {if (Array.isArray(arr)) {return arr;} else if (Symbol.iterator in Object(arr)) {return sliceIterator(arr, i);} else {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();exports.default =\n\t\n\t    {\n\t        0x829a: 'ExposureTime',\n\t        0x829d: 'FNumber',\n\t        0x8822: {\n\t            'name': 'ExposureProgram',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Undefined';\n\t                } else if (value === 1) {\n\t                    return 'Manual';\n\t                } else if (value === 2) {\n\t                    return 'Normal program';\n\t                } else if (value === 3) {\n\t                    return 'Aperture priority';\n\t                } else if (value === 4) {\n\t                    return 'Shutter priority';\n\t                } else if (value === 5) {\n\t                    return 'Creative program';\n\t                } else if (value === 6) {\n\t                    return 'Action program';\n\t                } else if (value === 7) {\n\t                    return 'Portrait mode';\n\t                } else if (value === 8) {\n\t                    return 'Landscape mode';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x8824: 'SpectralSensitivity',\n\t        0x8827: 'ISOSpeedRatings',\n\t        0x8828: {\n\t            'name': 'OECF',\n\t            'description': function description() {return '[Raw OECF table data]';} },\n\t\n\t        0x9000: {\n\t            'name': 'ExifVersion',\n\t            'description': function description(value) {return (0, _tagNamesUtils.getStringValue)(value);} },\n\t\n\t        0x9003: 'DateTimeOriginal',\n\t        0x9004: 'DateTimeDigitized',\n\t        0x9101: {\n\t            'name': 'ComponentsConfiguration',\n\t            'description': function description(value) {\n\t                return value.map(function (character) {\n\t                    if (character === 0x31) {\n\t                        return 'Y';\n\t                    } else if (character === 0x32) {\n\t                        return 'Cb';\n\t                    } else if (character === 0x33) {\n\t                        return 'Cr';\n\t                    } else if (character === 0x34) {\n\t                        return 'R';\n\t                    } else if (character === 0x35) {\n\t                        return 'G';\n\t                    } else if (character === 0x36) {\n\t                        return 'B';\n\t                    }\n\t                }).join('');\n\t            } },\n\t\n\t        0x9102: 'CompressedBitsPerPixel',\n\t        0x9201: 'ShutterSpeedValue',\n\t        0x9202: 'ApertureValue',\n\t        0x9203: 'BrightnessValue',\n\t        0x9204: 'ExposureBiasValue',\n\t        0x9205: 'MaxApertureValue',\n\t        0x9206: 'SubjectDistance',\n\t        0x9207: {\n\t            'name': 'MeteringMode',\n\t            'description': function description(value) {\n\t                if (value === 1) {\n\t                    return 'Average';\n\t                } else if (value === 2) {\n\t                    return 'CenterWeightedAverage';\n\t                } else if (value === 3) {\n\t                    return 'Spot';\n\t                } else if (value === 4) {\n\t                    return 'MultiSpot';\n\t                } else if (value === 5) {\n\t                    return 'Pattern';\n\t                } else if (value === 6) {\n\t                    return 'Partial';\n\t                } else if (value === 255) {\n\t                    return 'Other';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x9208: {\n\t            'name': 'LightSource',\n\t            'description': function description(value) {\n\t                if (value === 1) {\n\t                    return 'Daylight';\n\t                } else if (value === 2) {\n\t                    return 'Fluorescent';\n\t                } else if (value === 3) {\n\t                    return 'Tungsten (incandescent light)';\n\t                } else if (value === 4) {\n\t                    return 'Flash';\n\t                } else if (value === 9) {\n\t                    return 'Fine weather';\n\t                } else if (value === 10) {\n\t                    return 'Cloudy weather';\n\t                } else if (value === 11) {\n\t                    return 'Shade';\n\t                } else if (value === 12) {\n\t                    return 'Daylight fluorescent (D 5700 – 7100K)';\n\t                } else if (value === 13) {\n\t                    return 'Day white fluorescent (N 4600 – 5400K)';\n\t                } else if (value === 14) {\n\t                    return 'Cool white fluorescent (W 3900 – 4500K)';\n\t                } else if (value === 15) {\n\t                    return 'White fluorescent (WW 3200 – 3700K)';\n\t                } else if (value === 17) {\n\t                    return 'Standard light A';\n\t                } else if (value === 18) {\n\t                    return 'Standard light B';\n\t                } else if (value === 19) {\n\t                    return 'Standard light C';\n\t                } else if (value === 20) {\n\t                    return 'D55';\n\t                } else if (value === 21) {\n\t                    return 'D65';\n\t                } else if (value === 22) {\n\t                    return 'D75';\n\t                } else if (value === 23) {\n\t                    return 'D50';\n\t                } else if (value === 24) {\n\t                    return 'ISO studio tungsten';\n\t                } else if (value === 255) {\n\t                    return 'Other light source';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x9209: {\n\t            'name': 'Flash',\n\t            'description': function description(value) {\n\t                if (value === 0x00) {\n\t                    return 'Flash did not fire';\n\t                } else if (value === 0x01) {\n\t                    return 'Flash fired';\n\t                } else if (value === 0x05) {\n\t                    return 'Strobe return light not detected';\n\t                } else if (value === 0x07) {\n\t                    return 'Strobe return light detected';\n\t                } else if (value === 0x09) {\n\t                    return 'Flash fired, compulsory flash mode';\n\t                } else if (value === 0x0d) {\n\t                    return 'Flash fired, compulsory flash mode, return light not detected';\n\t                } else if (value === 0x0f) {\n\t                    return 'Flash fired, compulsory flash mode, return light detected';\n\t                } else if (value === 0x10) {\n\t                    return 'Flash did not fire, compulsory flash mode';\n\t                } else if (value === 0x18) {\n\t                    return 'Flash did not fire, auto mode';\n\t                } else if (value === 0x19) {\n\t                    return 'Flash fired, auto mode';\n\t                } else if (value === 0x1d) {\n\t                    return 'Flash fired, auto mode, return light not detected';\n\t                } else if (value === 0x1f) {\n\t                    return 'Flash fired, auto mode, return light detected';\n\t                } else if (value === 0x20) {\n\t                    return 'No flash function';\n\t                } else if (value === 0x41) {\n\t                    return 'Flash fired, red-eye reduction mode';\n\t                } else if (value === 0x45) {\n\t                    return 'Flash fired, red-eye reduction mode, return light not detected';\n\t                } else if (value === 0x47) {\n\t                    return 'Flash fired, red-eye reduction mode, return light detected';\n\t                } else if (value === 0x49) {\n\t                    return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n\t                } else if (value === 0x4d) {\n\t                    return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n\t                } else if (value === 0x4f) {\n\t                    return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n\t                } else if (value === 0x59) {\n\t                    return 'Flash fired, auto mode, red-eye reduction mode';\n\t                } else if (value === 0x5d) {\n\t                    return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n\t                } else if (value === 0x5f) {\n\t                    return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x920a: 'FocalLength',\n\t        0x9214: {\n\t            'name': 'SubjectArea',\n\t            'description': function description(value) {\n\t                if (value.length === 2) {\n\t                    return 'Location; X: ' + value[0] + ', Y: ' + value[1];\n\t                } else if (value.length === 3) {\n\t                    return 'Circle; X: ' + value[0] + ', Y: ' + value[1] + ', diameter: ' + value[2];\n\t                } else if (value.length === 4) {\n\t                    return 'Rectangle; X: ' + value[0] + ', Y: ' + value[1] + ', width: ' + value[2] + ', height: ' + value[3];\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x927c: {\n\t            'name': 'MakerNote',\n\t            'description': function description() {return '[Raw maker note data]';} },\n\t\n\t        0x9286: {\n\t            'name': 'UserComment',\n\t            'description': _tagNamesUtils.getEncodedString },\n\t\n\t        0x9290: 'SubSecTime',\n\t        0x9291: 'SubSecTimeOriginal',\n\t        0x9292: 'SubSecTimeDigitized',\n\t        0xa000: {\n\t            'name': 'FlashpixVersion',\n\t            'description': function description(value) {return value.map(function (charCode) {return String.fromCharCode(charCode);}).join('');} },\n\t\n\t        0xa001: {\n\t            'name': 'ColorSpace',\n\t            'description': function description(value) {\n\t                if (value === 1) {\n\t                    return 'sRGB';\n\t                } else if (value === 0xffff) {\n\t                    return 'Uncalibrated';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa002: 'PixelXDimension',\n\t        0xa003: 'PixelYDimension',\n\t        0xa004: 'RelatedSoundFile',\n\t        0xa005: 'Interoperability IFD Pointer',\n\t        0xa20b: 'FlashEnergy',\n\t        0xa20c: {\n\t            'name': 'SpatialFrequencyResponse',\n\t            'description': function description() {return '[Raw SFR table data]';} },\n\t\n\t        0xa20e: 'FocalPlaneXResolution',\n\t        0xa20f: 'FocalPlaneYResolution',\n\t        0xa210: {\n\t            'name': 'FocalPlaneResolutionUnit',\n\t            'description': function description(value) {\n\t                if (value === 2) {\n\t                    return 'inches';\n\t                } else if (value === 3) {\n\t                    return 'centimeters';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa214: {\n\t            'name': 'SubjectLocation',\n\t            'description': function description(_ref) {var _ref2 = _slicedToArray(_ref, 2),x = _ref2[0],y = _ref2[1];return 'X: ' + x + ', Y: ' + y;} },\n\t\n\t        0xa215: 'ExposureIndex',\n\t        0xa217: {\n\t            'name': 'SensingMethod',\n\t            'description': function description(value) {\n\t                if (value === 1) {\n\t                    return 'Undefined';\n\t                } else if (value === 2) {\n\t                    return 'One-chip color area sensor';\n\t                } else if (value === 3) {\n\t                    return 'Two-chip color area sensor';\n\t                } else if (value === 4) {\n\t                    return 'Three-chip color area sensor';\n\t                } else if (value === 5) {\n\t                    return 'Color sequential area sensor';\n\t                } else if (value === 7) {\n\t                    return 'Trilinear sensor';\n\t                } else if (value === 8) {\n\t                    return 'Color sequential linear sensor';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa300: {\n\t            'name': 'FileSource',\n\t            'description': function description(value) {\n\t                if (value === 3) {\n\t                    return 'DSC';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa301: {\n\t            'name': 'SceneType',\n\t            'description': function description(value) {\n\t                if (value === 1) {\n\t                    return 'A directly photographed image';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa302: {\n\t            'name': 'CFAPattern',\n\t            'description': function description() {return '[Raw CFA pattern table data]';} },\n\t\n\t        0xa401: {\n\t            'name': 'CustomRendered',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Normal process';\n\t                } else if (value === 1) {\n\t                    return 'Custom process';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa402: {\n\t            'name': 'ExposureMode',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Auto exposure';\n\t                } else if (value === 1) {\n\t                    return 'Manual exposure';\n\t                } else if (value === 2) {\n\t                    return 'Auto bracket';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa403: {\n\t            'name': 'WhiteBalance',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Auto white balance';\n\t                } else if (value === 1) {\n\t                    return 'Manual white balance';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa404: {\n\t            'name': 'DigitalZoomRatio',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Digital zoom was not used';\n\t                }\n\t                return value;\n\t            } },\n\t\n\t        0xa405: {\n\t            'name': 'FocalLengthIn35mmFilm',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Unknown';\n\t                }\n\t                return value;\n\t            } },\n\t\n\t        0xa406: {\n\t            'name': 'SceneCaptureType',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Standard';\n\t                } else if (value === 1) {\n\t                    return 'Landscape';\n\t                } else if (value === 2) {\n\t                    return 'Portrait';\n\t                } else if (value === 3) {\n\t                    return 'Night scene';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa407: {\n\t            'name': 'GainControl',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'None';\n\t                } else if (value === 1) {\n\t                    return 'Low gain up';\n\t                } else if (value === 2) {\n\t                    return 'High gain up';\n\t                } else if (value === 3) {\n\t                    return 'Low gain down';\n\t                } else if (value === 4) {\n\t                    return 'High gain down';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa408: {\n\t            'name': 'Contrast',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Normal';\n\t                } else if (value === 1) {\n\t                    return 'Soft';\n\t                } else if (value === 2) {\n\t                    return 'Hard';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa409: {\n\t            'name': 'Saturation',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Normal';\n\t                } else if (value === 1) {\n\t                    return 'Low saturation';\n\t                } else if (value === 2) {\n\t                    return 'High saturation';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa40a: {\n\t            'name': 'Sharpness',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Normal';\n\t                } else if (value === 1) {\n\t                    return 'Soft';\n\t                } else if (value === 2) {\n\t                    return 'Hard';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa40b: {\n\t            'name': 'DeviceSettingDescription',\n\t            'description': function description() {return '[Raw device settings table data]';} },\n\t\n\t        0xa40c: {\n\t            'name': 'SubjectDistanceRange',\n\t            'description': function description(value) {\n\t                if (value === 1) {\n\t                    return 'Macro';\n\t                } else if (value === 2) {\n\t                    return 'Close view';\n\t                } else if (value === 3) {\n\t                    return 'Distant view';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0xa420: 'ImageUniqueID' };});\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports);} else {var mod = { exports: {} };factory(mod.exports);global.tagNamesUtils = mod.exports;}})(this, function (exports) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.getStringValue = getStringValue;exports.\n\t\n\t\n\t\n\t    getEncodedString = getEncodedString;exports.\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t    getCharacterArray = getCharacterArray;function getStringValue(value) {return value.map(function (charCode) {return String.fromCharCode(charCode);}).join('');}function getEncodedString(value) {if (value.length >= 8) {var encoding = getStringValue(value.slice(0, 8));if (encoding === 'ASCII\\x00\\x00\\x00') {return getStringValue(value.slice(8));} else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {return '[JIS encoded text]';} else if (encoding === 'UNICODE\\x00') {return '[Unicode encoded text]';} else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {return '[Undefined encoding]';}}return 'Undefined';}function getCharacterArray(string) {\n\t        return string.split('').map(function (character) {return character.charCodeAt(0);});\n\t    }});\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(9)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./tag-names-utils'));} else {var mod = { exports: {} };factory(mod.exports, global.tagNamesUtils);global.tagNamesGpsIfd = mod.exports;}})(this, function (exports, _tagNamesUtils) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\t\n\t    {\n\t        0x0000: {\n\t            'name': 'GPSVersionID',\n\t            'description': function description(value) {\n\t                if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n\t                    return 'Version 2.2';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0001: {\n\t            'name': 'GPSLatitudeRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'N') {\n\t                    return 'North latitude';\n\t                } else if (ref === 'S') {\n\t                    return 'South latitude';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0002: {\n\t            'name': 'GPSLatitude',\n\t            'description': function description(value) {\n\t                return value[0] + value[1] / 60 + value[2] / 3600;\n\t            } },\n\t\n\t        0x0003: {\n\t            'name': 'GPSLongitudeRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'E') {\n\t                    return 'East longitude';\n\t                } else if (ref === 'W') {\n\t                    return 'West longitude';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0004: {\n\t            'name': 'GPSLongitude',\n\t            'description': function description(value) {\n\t                return value[0] + value[1] / 60 + value[2] / 3600;\n\t            } },\n\t\n\t        0x0005: {\n\t            'name': 'GPSAltitudeRef',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Sea level';\n\t                } else if (value === 1) {\n\t                    return 'Sea level reference (negative value)';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0006: {\n\t            'name': 'GPSAltitude',\n\t            'description': function description(value) {\n\t                return value + ' m';\n\t            } },\n\t\n\t        0x0007: {\n\t            'name': 'GPSTimeStamp',\n\t            'description': function description(value) {\n\t                return value.map(function (num) {\n\t                    if (('' + num).length === 1) {\n\t                        return '0' + num;\n\t                    }\n\t                    return num;\n\t                }).join(':');\n\t            } },\n\t\n\t        0x0008: 'GPSSatellites',\n\t        0x0009: {\n\t            'name': 'GPSStatus',\n\t            'description': function description(value) {\n\t                var status = value.join('');\n\t                if (status === 'A') {\n\t                    return 'Measurement in progress';\n\t                } else if (status === 'V') {\n\t                    return 'Measurement Interoperability';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x000a: {\n\t            'name': 'GPSMeasureMode',\n\t            'description': function description(value) {\n\t                var mode = value.join('');\n\t                if (mode === '2') {\n\t                    return '2-dimensional measurement';\n\t                } else if (mode === '3') {\n\t                    return '3-dimensional measurement';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x000b: 'GPSDOP',\n\t        0x000c: {\n\t            'name': 'GPSSpeedRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'K') {\n\t                    return 'Kilometers per hour';\n\t                } else if (ref === 'M') {\n\t                    return 'Miles per hour';\n\t                } else if (ref === 'N') {\n\t                    return 'Knots';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x000d: 'GPSSpeed',\n\t        0x000e: {\n\t            'name': 'GPSTrackRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'T') {\n\t                    return 'True direction';\n\t                } else if (ref === 'M') {\n\t                    return 'Magnetic direction';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x000f: 'GPSTrack',\n\t        0x0010: {\n\t            'name': 'GPSImgDirectionRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'T') {\n\t                    return 'True direction';\n\t                } else if (ref === 'M') {\n\t                    return 'Magnetic direction';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0011: 'GPSImgDirection',\n\t        0x0012: 'GPSMapDatum',\n\t        0x0013: {\n\t            'name': 'GPSDestLatitudeRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'N') {\n\t                    return 'North latitude';\n\t                } else if (ref === 'S') {\n\t                    return 'South latitude';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0014: {\n\t            'name': 'GPSDestLatitude',\n\t            'description': function description(value) {\n\t                return value[0] + value[1] / 60 + value[2] / 3600;\n\t            } },\n\t\n\t        0x0015: {\n\t            'name': 'GPSDestLongitudeRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'E') {\n\t                    return 'East longitude';\n\t                } else if (ref === 'W') {\n\t                    return 'West longitude';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0016: {\n\t            'name': 'GPSDestLongitude',\n\t            'description': function description(value) {\n\t                return value[0] + value[1] / 60 + value[2] / 3600;\n\t            } },\n\t\n\t        0x0017: {\n\t            'name': 'GPSDestBearingRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'T') {\n\t                    return 'True direction';\n\t                } else if (ref === 'M') {\n\t                    return 'Magnetic direction';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x0018: 'GPSDestBearing',\n\t        0x0019: {\n\t            'name': 'GPSDestDistanceRef',\n\t            'description': function description(value) {\n\t                var ref = value.join('');\n\t                if (ref === 'K') {\n\t                    return 'Kilometers';\n\t                } else if (ref === 'M') {\n\t                    return 'Miles';\n\t                } else if (ref === 'N') {\n\t                    return 'Knots';\n\t                }\n\t                return 'Unknown';\n\t            } },\n\t\n\t        0x001a: 'GPSDestDistance',\n\t        0x001b: {\n\t            'name': 'GPSProcessingMethod',\n\t            'description': _tagNamesUtils.getEncodedString },\n\t\n\t        0x001c: {\n\t            'name': 'GPSAreaInformation',\n\t            'description': _tagNamesUtils.getEncodedString },\n\t\n\t        0x001d: 'GPSDateStamp',\n\t        0x001e: {\n\t            'name': 'GPSDifferential',\n\t            'description': function description(value) {\n\t                if (value === 0) {\n\t                    return 'Measurement without differential correction';\n\t                } else if (value === 1) {\n\t                    return 'Differential correction applied';\n\t                }\n\t                return 'Unknown';\n\t            } } };});\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports);} else {var mod = { exports: {} };factory(mod.exports);global.tagNamesInteroperabilityIfd = mod.exports;}})(this, function (exports) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = {\n\t        0x0001: 'InteroperabilityIndex' };});\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(13)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./iptc-tag-names'));} else {var mod = { exports: {} };factory(mod.exports, global.iptcTagNames);global.iptcTags = mod.exports;}})(this, function (exports, _iptcTagNames) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });var _iptcTagNames2 = _interopRequireDefault(_iptcTagNames);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\t\n\t    var BYTES_8BIM = 0x3842494d;\n\t    var BYTES_8BIM_SIZE = 4;\n\t    var RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\n\t    var NAA_RESOURCE_BLOCK_TYPE = 0x0404;\n\t    var TAG_HEADER_SIZE = 5;exports.default =\n\t\n\t    {\n\t        read: read };\n\t\n\t\n\t    function read(dataView, dataOffset) {\n\t        try {var _getNaaResourceBlock =\n\t            getNaaResourceBlock(dataView, dataOffset),naaBlock = _getNaaResourceBlock.naaBlock,newDataOffset = _getNaaResourceBlock.dataOffset;\n\t            return parseTags(dataView, naaBlock, newDataOffset);\n\t        } catch (error) {\n\t            return {};\n\t        }\n\t    }\n\t\n\t    function getNaaResourceBlock(dataView, dataOffset) {\n\t        while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n\t            var resourceBlock = getResourceBlock(dataView, dataOffset);\n\t            if (isNaaResourceBlock(resourceBlock)) {\n\t                return { naaBlock: resourceBlock, dataOffset: dataOffset };\n\t            }\n\t            dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock.size);\n\t        }\n\t        throw new Error('No IPTC NAA resource block.');\n\t    }\n\t\n\t    function getResourceBlock(dataView, dataOffset) {\n\t        var RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\t\n\t        if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n\t            throw new Error('Not an IPTC resource block.');\n\t        }\n\t\n\t        return {\n\t            type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\n\t            size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false) };\n\t\n\t    }\n\t\n\t    function isNaaResourceBlock(resourceBlock) {\n\t        return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n\t    }\n\t\n\t    function getBlockPadding(blockSize) {\n\t        if (blockSize % 2 !== 0) {\n\t            return 1;\n\t        }\n\t        return 0;\n\t    }\n\t\n\t    function parseTags(dataView, naaBlock, dataOffset) {\n\t        var tags = {};\n\t\n\t        dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\n\t        var endOfBlockOffset = dataOffset + naaBlock['size'];\n\t\n\t        while (dataOffset < endOfBlockOffset && dataOffset < dataView.byteLength) {var _readTag =\n\t            readTag(dataView, dataOffset, tags),tag = _readTag.tag,tagSize = _readTag.tagSize;\n\t\n\t            if (tags[tag.name] === undefined || tag['repeatable'] === undefined) {\n\t                tags[tag.name] = {\n\t                    value: tag.value,\n\t                    description: tag.description };\n\t\n\t            } else {\n\t                if (!(tags[tag.name] instanceof Array)) {\n\t                    tags[tag.name] = [{\n\t                        value: tags[tag.name].value,\n\t                        description: tags[tag.name].description }];\n\t\n\t                }\n\t                tags[tag.name].push({\n\t                    value: tag.value,\n\t                    description: tag.description });\n\t\n\t            }\n\t\n\t            dataOffset += TAG_HEADER_SIZE + tagSize;\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function readTag(dataView, dataOffset, tags) {\n\t        var TAG_CODE_OFFSET = 1;\n\t        var TAG_SIZE_OFFSET = 3;\n\t\n\t        var tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\n\t        var tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\n\t        var tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\t        var tag = void 0;\n\t\n\t        if (_iptcTagNames2.default['iptc'][tagCode] !== undefined) {\n\t            var tagName = void 0,tagDescription = void 0;\n\t\n\t            if (_iptcTagNames2.default['iptc'][tagCode]['name'] !== undefined &&\n\t            _iptcTagNames2.default['iptc'][tagCode]['description'] !== undefined) {\n\t                tagName = _iptcTagNames2.default['iptc'][tagCode]['name'];\n\t                tagDescription = _iptcTagNames2.default['iptc'][tagCode]['description'](tagValue, tags);\n\t            } else {\n\t                if (_iptcTagNames2.default['iptc'][tagCode]['name'] !== undefined) {\n\t                    tagName = _iptcTagNames2.default['iptc'][tagCode]['name'];\n\t                } else {\n\t                    tagName = _iptcTagNames2.default['iptc'][tagCode];\n\t                }\n\t                if (tagValue instanceof Array) {\n\t                    tagDescription = tagValue.map(function (charCode) {return String.fromCharCode(charCode);}).join('');\n\t                } else {\n\t                    tagDescription = tagValue;\n\t                }\n\t            }\n\t            tag = {\n\t                name: tagName,\n\t                value: tagValue,\n\t                description: tagDescription };\n\t\n\t            if (_iptcTagNames2.default['iptc'][tagCode]['repeatable'] !== undefined) {\n\t                tag['repeatable'] = true;\n\t            }\n\t        } else {\n\t            tag = {\n\t                name: 'undefined-' + tagCode,\n\t                value: tagValue,\n\t                description: tagValue };\n\t\n\t        }\n\t\n\t        return { tag: tag, tagSize: tagSize };\n\t    }\n\t\n\t    function getTagValue(dataView, offset, size) {\n\t        var value = [];\n\t\n\t        for (var valueIndex = 0; valueIndex < size; valueIndex++) {\n\t            value.push(dataView.getUint8(offset + valueIndex));\n\t        }\n\t\n\t        return value;\n\t    }});\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(9)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./tag-names-utils'));} else {var mod = { exports: {} };factory(mod.exports, global.tagNamesUtils);global.iptcTagNames = mod.exports;}})(this, function (exports, _tagNamesUtils) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\t\n\t    {\n\t        'iptc': {\n\t            0x015a: {\n\t                'name': 'Coded Character Set',\n\t                'description': function description(value) {\n\t                    var string = (0, _tagNamesUtils.getStringValue)(value);\n\t                    if (string === '\\x1b%G') {\n\t                        return 'UTF-8';\n\t                    } else if (string === '\\x1b%/G') {\n\t                        return 'UTF-8 Level 1';\n\t                    } else if (string === '\\x1b%/H') {\n\t                        return 'UTF-8 Level 2';\n\t                    } else if (string === '\\x1b%/I') {\n\t                        return 'UTF-8 Level 3';\n\t                    }\n\t                    return 'Unknown';\n\t                } },\n\t\n\t            0x0200: {\n\t                'name': 'Record Version',\n\t                'description': function description(value) {\n\t                    return ((value[0] << 8) + value[1]).toString();\n\t                } },\n\t\n\t            0x0203: 'Object Type Reference',\n\t            0x0204: 'Object Attribute Reference',\n\t            0x0205: 'Object Name',\n\t            0x0207: 'Edit Status',\n\t            0x0208: {\n\t                'name': 'Editorial Update',\n\t                'description': function description(value) {\n\t                    if ((0, _tagNamesUtils.getStringValue)(value) === '01') {\n\t                        return 'Additional Language';\n\t                    }\n\t                    return 'Unknown';\n\t                } },\n\t\n\t            0x020a: 'Urgency',\n\t            0x020c: {\n\t                'name': 'Subject Reference',\n\t                'repeatable': true,\n\t                'description': function description(value) {\n\t                    var parts = (0, _tagNamesUtils.getStringValue)(value).split(':');\n\t                    return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n\t                } },\n\t\n\t            0x020f: 'Category',\n\t            0x0214: {\n\t                'name': 'Supplemental Category',\n\t                'repeatable': true },\n\t\n\t            0x0216: 'Fixture Identifier',\n\t            0x0219: {\n\t                'name': 'Keywords',\n\t                'repeatable': true },\n\t\n\t            0x021a: {\n\t                'name': 'Content Location Code',\n\t                'repeatable': true },\n\t\n\t            0x021b: {\n\t                'name': 'Content Location Name',\n\t                'repeatable': true },\n\t\n\t            0x021e: 'Release Date',\n\t            0x0223: 'Release Time',\n\t            0x0225: 'Expiration Date',\n\t            0x0226: 'Expiration Time',\n\t            0x0228: 'Special Instructions',\n\t            0x022a: {\n\t                'name': 'Action Advised',\n\t                'description': function description(value) {\n\t                    var string = (0, _tagNamesUtils.getStringValue)(value);\n\t                    if (string === '01') {\n\t                        return 'Object Kill';\n\t                    } else if (string === '02') {\n\t                        return 'Object Replace';\n\t                    } else if (string === '03') {\n\t                        return 'Object Append';\n\t                    } else if (string === '04') {\n\t                        return 'Object Reference';\n\t                    }\n\t                    return 'Unknown';\n\t                } },\n\t\n\t            0x022d: {\n\t                'name': 'Reference Service',\n\t                'repeatable': true },\n\t\n\t            0x022f: {\n\t                'name': 'Reference Date',\n\t                'repeatable': true },\n\t\n\t            0x0232: {\n\t                'name': 'Reference Number',\n\t                'repeatable': true },\n\t\n\t            0x0237: {\n\t                'name': 'Date Created',\n\t                'description': getCreationDate },\n\t\n\t            0x023c: {\n\t                'name': 'Time Created',\n\t                'description': getCreationTime },\n\t\n\t            0x023e: {\n\t                'name': 'Digital Creation Date',\n\t                'description': getCreationDate },\n\t\n\t            0x023f: {\n\t                'name': 'Digital Creation Time',\n\t                'description': getCreationTime },\n\t\n\t            0x0241: 'Originating Program',\n\t            0x0246: 'Program Version',\n\t            0x024b: {\n\t                'name': 'Object Cycle',\n\t                'description': function description(value) {\n\t                    var string = (0, _tagNamesUtils.getStringValue)(value);\n\t                    if (string === 'a') {\n\t                        return 'morning';\n\t                    } else if (string === 'p') {\n\t                        return 'evening';\n\t                    } else if (string === 'b') {\n\t                        return 'both';\n\t                    }\n\t                    return 'Unknown';\n\t                } },\n\t\n\t            0x0250: {\n\t                'name': 'By-line',\n\t                'repeatable': true },\n\t\n\t            0x0255: {\n\t                'name': 'By-line Title',\n\t                'repeatable': true },\n\t\n\t            0x025a: 'City',\n\t            0x025c: 'Sub-location',\n\t            0x025f: 'Province/State',\n\t            0x0264: 'Country/Primary Location Code',\n\t            0x0265: 'Country/Primary Location Name',\n\t            0x0267: 'Original Transmission Reference',\n\t            0x0269: 'Headline',\n\t            0x026e: 'Credit',\n\t            0x0273: 'Source',\n\t            0x0274: 'Copyright Notice',\n\t            0x0276: {\n\t                'name': 'Contact',\n\t                'repeatable': true },\n\t\n\t            0x0278: 'Caption/Abstract',\n\t            0x027a: {\n\t                'name': 'Writer/Editor',\n\t                'repeatable': true },\n\t\n\t            0x027d: {\n\t                'name': 'Rasterized Caption',\n\t                'description': function description(value) {return value;} },\n\t\n\t            0x0282: 'Image Type',\n\t            0x0283: {\n\t                'name': 'Image Orientation',\n\t                'description': function description(value) {\n\t                    var string = (0, _tagNamesUtils.getStringValue)(value);\n\t                    if (string === 'P') {\n\t                        return 'Portrait';\n\t                    } else if (string === 'L') {\n\t                        return 'Landscape';\n\t                    } else if (string === 'S') {\n\t                        return 'Square';\n\t                    }\n\t                    return 'Unknown';\n\t                } },\n\t\n\t            0x0287: 'Language Identifier',\n\t            0x0296: {\n\t                'name': 'Audio Type',\n\t                'description': function description(value) {\n\t                    var stringValue = (0, _tagNamesUtils.getStringValue)(value);\n\t                    var character0 = stringValue.charAt(0);\n\t                    var character1 = stringValue.charAt(1);\n\t                    var description = '';\n\t\n\t                    if (character0 === '1') {\n\t                        description += 'Mono';\n\t                    } else if (character0 === '2') {\n\t                        description += 'Stereo';\n\t                    }\n\t\n\t                    if (character1 === 'A') {\n\t                        description += ', actuality';\n\t                    } else if (character1 === 'C') {\n\t                        description += ', question and answer session';\n\t                    } else if (character1 === 'M') {\n\t                        description += ', music, transmitted by itself';\n\t                    } else if (character1 === 'Q') {\n\t                        description += ', response to a question';\n\t                    } else if (character1 === 'R') {\n\t                        description += ', raw sound';\n\t                    } else if (character1 === 'S') {\n\t                        description += ', scener';\n\t                    } else if (character1 === 'V') {\n\t                        description += ', voicer';\n\t                    } else if (character1 === 'W') {\n\t                        description += ', wrap';\n\t                    }\n\t\n\t                    if (description !== '') {\n\t                        return description;\n\t                    }\n\t                    return stringValue;\n\t                } },\n\t\n\t            0x0297: {\n\t                'name': 'Audio Sampling Rate',\n\t                'description': function description(value) {return parseInt((0, _tagNamesUtils.getStringValue)(value), 10) + ' Hz';} },\n\t\n\t            0x0298: {\n\t                'name': 'Audio Sampling Resolution',\n\t                'description': function description(value) {\n\t                    var bits = parseInt((0, _tagNamesUtils.getStringValue)(value), 10);\n\t                    return bits + (bits === 1 ? ' bit' : ' bits');\n\t                } },\n\t\n\t            0x0299: {\n\t                'name': 'Audio Duration',\n\t                'description': function description(value) {\n\t                    var duration = (0, _tagNamesUtils.getStringValue)(value);\n\t                    if (duration.length >= 6) {\n\t                        return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n\t                    }\n\t                    return duration;\n\t                } },\n\t\n\t            0x029a: 'Audio Outcue',\n\t            0x02c8: {\n\t                'name': 'ObjectData Preview File Format',\n\t                'description': function description(value) {\n\t                    var stringValue = (0, _tagNamesUtils.getStringValue)(value);\n\t                    if (stringValue === '00') {\n\t                        return 'No ObjectData';\n\t                    } else if (stringValue === '01') {\n\t                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n\t                    } else if (stringValue === '02') {\n\t                        return 'IPTC7901 Recommended Message Format';\n\t                    } else if (stringValue === '03') {\n\t                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n\t                    } else if (stringValue === '04') {\n\t                        return 'Illustrator (Adobe Graphics data)';\n\t                    } else if (stringValue === '05') {\n\t                        return 'AppleSingle (Apple Computer Inc)';\n\t                    } else if (stringValue === '06') {\n\t                        return 'NAA 89-3 (ANPA 1312)';\n\t                    } else if (stringValue === '07') {\n\t                        return 'MacBinary II';\n\t                    } else if (stringValue === '08') {\n\t                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n\t                    } else if (stringValue === '09') {\n\t                        return 'United Press International ANPA 1312 variant';\n\t                    } else if (stringValue === '10') {\n\t                        return 'United Press International Down-Load Message';\n\t                    } else if (stringValue === '11') {\n\t                        return 'JPEG File Interchange (JFIF)';\n\t                    } else if (stringValue === '12') {\n\t                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n\t                    } else if (stringValue === '13') {\n\t                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n\t                    } else if (stringValue === '14') {\n\t                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n\t                    } else if (stringValue === '15') {\n\t                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n\t                    } else if (stringValue === '16') {\n\t                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n\t                    } else if (stringValue === '17') {\n\t                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n\t                    } else if (stringValue === '18') {\n\t                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n\t                    } else if (stringValue === '19') {\n\t                        return 'RIFF Wave (Microsoft Corporation)';\n\t                    } else if (stringValue === '20') {\n\t                        return 'Freehand (Macromedia/Aldus)';\n\t                    } else if (stringValue === '21') {\n\t                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n\t                    } else if (stringValue === '22') {\n\t                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n\t                    } else if (stringValue === '23') {\n\t                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n\t                    } else if (stringValue === '24') {\n\t                        return 'Portable Document File (*.PDF) Adobe';\n\t                    } else if (stringValue === '25') {\n\t                        return 'News Industry Text Format (NITF)';\n\t                    } else if (stringValue === '26') {\n\t                        return 'Tape Archive (*.TAR)';\n\t                    } else if (stringValue === '27') {\n\t                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n\t                    } else if (stringValue === '28') {\n\t                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n\t                    } else if (stringValue === '29') {\n\t                        return 'Corel Draw [*.CDR]';\n\t                    }\n\t                    return 'Unknown format ' + stringValue;\n\t                } },\n\t\n\t            0x02c9: {\n\t                'name': 'ObjectData Preview File Format Version',\n\t                'description': function description(value, tags) {\n\t                    // Format ID, Version ID, Version Description\n\t                    var formatVersions = {\n\t                        '00': { '00': '1' },\n\t                        '01': { '01': '1', '02': '2', '03': '3', '04': '4' },\n\t                        '02': { '04': '4' },\n\t                        '03': { '01': '5.0', '02': '6.0' },\n\t                        '04': { '01': '1.40' },\n\t                        '05': { '01': '2' },\n\t                        '06': { '01': '1' },\n\t                        '11': { '01': '1.02' },\n\t                        '20': { '01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5' },\n\t                        '21': { '02': '2.0' } };\n\t\n\t                    var stringValue = (0, _tagNamesUtils.getStringValue)(value);\n\t\n\t                    if (tags['ObjectData Preview File Format']) {\n\t                        var objectDataPreviewFileFormat = (0, _tagNamesUtils.getStringValue)(tags['ObjectData Preview File Format'].value);\n\t                        if (formatVersions[objectDataPreviewFileFormat] &&\n\t                        formatVersions[objectDataPreviewFileFormat][stringValue]) {\n\t                            return formatVersions[objectDataPreviewFileFormat][stringValue];\n\t                        }\n\t                    }\n\t\n\t                    return stringValue;\n\t                } },\n\t\n\t            0x02ca: 'ObjectData Preview Data' } };\n\t\n\t\n\t\n\t    function getCreationDate(value) {\n\t        var date = (0, _tagNamesUtils.getStringValue)(value);\n\t\n\t        if (date.length >= 8) {\n\t            return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n\t        }\n\t\n\t        return date;\n\t    }\n\t\n\t    function getCreationTime(value) {\n\t        var time = (0, _tagNamesUtils.getStringValue)(value);\n\t        var parsedTime = time;\n\t\n\t        if (time.length >= 6) {\n\t            parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n\t            if (time.length === 11) {\n\t                parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n\t            }\n\t        }\n\t\n\t        return parsedTime;\n\t    }});\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(2), __webpack_require__(15)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports, require('./utils'), require('./xmp-tag-names'));} else {var mod = { exports: {} };factory(mod.exports, global.utils, global.xmpTagNames);global.xmpTags = mod.exports;}})(this, function (exports, _utils, _xmpTagNames) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });var _xmpTagNames2 = _interopRequireDefault(_xmpTagNames);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};exports.default =\n\t\n\t\n\t    {\n\t        read: read };\n\t\n\t\n\t    function read(dataView, dataOffset, metadataSize) {\n\t        try {\n\t            var doc = getDocument(dataView, dataOffset, metadataSize);\n\t            var rdf = getRDF(doc);\n\t\n\t            return parseXMPObject(convertToObject(rdf, true));\n\t        } catch (error) {\n\t            return {};\n\t        }\n\t    }\n\t\n\t    function getDocument(dataView, dataOffset, metadataSize) {\n\t        if (typeof DOMParser === 'undefined') {\n\t            console.warn('Warning: DOMParser is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DOM parser, e.g. xmldom: npm install --save xmldom\\n  2. Require that at the top of your script: global.DOMParser = require(\\'xmldom\\').DOMParser;\\nSee an example of this in the ExifReader example directory.'); // eslint-disable-line no-console\n\t            throw new Error();\n\t        }\n\t\n\t        var domParser = new DOMParser();\n\t        var xmlSource = (0, _utils.getStringFromDataView)(dataView, dataOffset, metadataSize);\n\t        var doc = domParser.parseFromString(xmlSource, 'application/xml');\n\t\n\t        if (doc.documentElement.nodeName === 'parsererror') {\n\t            throw new Error();\n\t        }\n\t\n\t        return doc;\n\t    }\n\t\n\t    function getRDF(node) {\n\t        for (var i = 0; i < node.childNodes.length; i++) {\n\t            if (node.childNodes[i].tagName === 'x:xmpmeta') {\n\t                return getRDF(node.childNodes[i]);\n\t            }\n\t            if (node.childNodes[i].tagName === 'rdf:RDF') {\n\t                return node.childNodes[i];\n\t            }\n\t        }\n\t\n\t        throw new Error();\n\t    }\n\t\n\t    function convertToObject(node) {var isTopNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t        var childNodes = getChildNodes(node);\n\t\n\t        if (hasTextOnlyContent(childNodes)) {\n\t            if (isTopNode) {\n\t                return {};\n\t            }\n\t            return getTextValue(childNodes[0]);\n\t        }\n\t\n\t        return getElementsFromNodes(childNodes);\n\t    }\n\t\n\t    function getChildNodes(node) {\n\t        var elements = [];\n\t\n\t        for (var i = 0; i < node.childNodes.length; i++) {\n\t            elements.push(node.childNodes[i]);\n\t        }\n\t\n\t        return elements;\n\t    }\n\t\n\t    function hasTextOnlyContent(nodes) {\n\t        return nodes.length === 1 && nodes[0].nodeName === '#text';\n\t    }\n\t\n\t    function getTextValue(node) {\n\t        return node.nodeValue;\n\t    }\n\t\n\t    function getElementsFromNodes(nodes) {\n\t        var elements = {};\n\t\n\t        nodes.forEach(function (node) {\n\t            if (isElement(node)) {\n\t                var nodeElement = getElementFromNode(node);\n\t\n\t                if (elements[node.nodeName] !== undefined) {\n\t                    if (!Array.isArray(elements[node.nodeName])) {\n\t                        elements[node.nodeName] = [elements[node.nodeName]];\n\t                    }\n\t                    elements[node.nodeName].push(nodeElement);\n\t                } else {\n\t                    elements[node.nodeName] = nodeElement;\n\t                }\n\t            }\n\t        });\n\t\n\t        return elements;\n\t    }\n\t\n\t    function isElement(node) {\n\t        return node.nodeName && node.nodeName !== '#text';\n\t    }\n\t\n\t    function getElementFromNode(node) {\n\t        return {\n\t            attributes: getAttributes(node),\n\t            value: convertToObject(node) };\n\t\n\t    }\n\t\n\t    function getAttributes(element) {\n\t        var attributes = {};\n\t\n\t        for (var i = 0; i < element.attributes.length; i++) {\n\t            attributes[element.attributes[i].nodeName] = element.attributes[i].value;\n\t        }\n\t\n\t        return attributes;\n\t    }\n\t\n\t    function parseXMPObject(xmpObject) {\n\t        var tags = {};\n\t\n\t        if (typeof xmpObject === 'string') {\n\t            return xmpObject;\n\t        }\n\t\n\t        for (var nodeName in xmpObject) {\n\t            var nodes = xmpObject[nodeName];\n\t\n\t            if (!Array.isArray(nodes)) {\n\t                nodes = [nodes];\n\t            }\n\t\n\t            nodes.forEach(function (node) {\n\t                _extends(tags, parseNodeAttributesAsTags(node.attributes));\n\t                _extends(tags, parseNodeChildrenAsTags(node.value));\n\t            });\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function parseNodeAttributesAsTags(attributes) {\n\t        var tags = {};\n\t\n\t        for (var name in attributes) {\n\t            if (isTagAttribute(name)) {\n\t                tags[getLocalName(name)] = {\n\t                    value: attributes[name],\n\t                    attributes: {},\n\t                    description: getDescription(attributes[name], name) };\n\t\n\t            }\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function isTagAttribute(name) {\n\t        return name !== 'rdf:parseType' && !isNamespaceDefinition(name);\n\t    }\n\t\n\t    function isNamespaceDefinition(name) {\n\t        return name.split(':')[0] === 'xmlns';\n\t    }\n\t\n\t    function getLocalName(name) {\n\t        return name.split(':')[1];\n\t    }\n\t\n\t    function getDescription(value) {var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\t        if (Array.isArray(value)) {\n\t            return getDescriptionOfArray(value);\n\t        }\n\t        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t            return getDescriptionOfObject(value);\n\t        }\n\t\n\t        try {\n\t            if (name && typeof _xmpTagNames2.default[name] === 'function') {\n\t                return _xmpTagNames2.default[name](value);\n\t            }\n\t            return decodeURIComponent(escape(value));\n\t        } catch (error) {\n\t            return value;\n\t        }\n\t    }\n\t\n\t    function getDescriptionOfArray(value) {\n\t        return value.map(function (item) {\n\t            if (item.value !== undefined) {\n\t                return getDescription(item.value);\n\t            }\n\t            return getDescription(item);\n\t        }).join(', ');\n\t    }\n\t\n\t    function getDescriptionOfObject(value) {\n\t        var descriptions = [];\n\t\n\t        for (var key in value) {\n\t            descriptions.push(getClearTextKey(key) + ': ' + value[key].value);\n\t        }\n\t\n\t        return descriptions.join('; ');\n\t    }\n\t\n\t    function getClearTextKey(key) {\n\t        if (key === 'CiAdrCity') {\n\t            return 'CreatorCity';\n\t        }\n\t        if (key === 'CiAdrCtry') {\n\t            return 'CreatorCountry';\n\t        }\n\t        if (key === 'CiAdrExtadr') {\n\t            return 'CreatorAddress';\n\t        }\n\t        if (key === 'CiAdrPcode') {\n\t            return 'CreatorPostalCode';\n\t        }\n\t        if (key === 'CiAdrRegion') {\n\t            return 'CreatorRegion';\n\t        }\n\t        if (key === 'CiEmailWork') {\n\t            return 'CreatorWorkEmail';\n\t        }\n\t        if (key === 'CiTelWork') {\n\t            return 'CreatorWorkPhone';\n\t        }\n\t        if (key === 'CiUrlWork') {\n\t            return 'CreatorWorkUrl';\n\t        }\n\t        return key;\n\t    }\n\t\n\t    function parseNodeChildrenAsTags(children) {\n\t        var tags = {};\n\t\n\t        for (var name in children) {\n\t            if (!isNamespaceDefinition(name)) {\n\t                tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n\t            }\n\t        }\n\t\n\t        return tags;\n\t    }\n\t\n\t    function parseNodeAsTag(node, name) {\n\t        if (hasNestedSimpleRdfDescription(node)) {\n\t            return parseNodeAsSimpleRdfDescription(node, name);\n\t        } else if (hasNestedStructureRdfDescription(node)) {\n\t            return parseNodeAsStructureRdfDescription(node, name);\n\t        } else if (isCompactStructure(node)) {\n\t            return parseNodeAsCompactStructure(node, name);\n\t        } else if (isArray(node)) {\n\t            return parseNodeAsArray(node, name);\n\t        }\n\t        return parseNodeAsSimpleValue(node, name);\n\t    }\n\t\n\t    function hasNestedSimpleRdfDescription(node) {\n\t        return node.attributes['rdf:parseType'] === 'Resource' && node.value['rdf:value'] !== undefined ||\n\t        node.value['rdf:Description'] !== undefined && node.value['rdf:Description'].value['rdf:value'] !== undefined;\n\t    }\n\t\n\t    function parseNodeAsSimpleRdfDescription(node, name) {\n\t        var attributes = parseNodeAttributes(node);\n\t\n\t        if (node.value['rdf:Description'] !== undefined) {\n\t            node = node.value['rdf:Description'];\n\t        }\n\t\n\t        _extends(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\t\n\t        var value = parseRdfValue(node);\n\t\n\t        return {\n\t            value: value,\n\t            attributes: attributes,\n\t            description: getDescription(value, name) };\n\t\n\t    }\n\t\n\t    function parseNodeAttributes(node) {\n\t        var attributes = {};\n\t\n\t        for (var name in node.attributes) {\n\t            if (name !== 'rdf:parseType' && name !== 'rdf:resource' && !isNamespaceDefinition(name)) {\n\t                attributes[getLocalName(name)] = node.attributes[name];\n\t            }\n\t        }\n\t\n\t        return attributes;\n\t    }\n\t\n\t    function parseNodeChildrenAsAttributes(node) {\n\t        var attributes = {};\n\t\n\t        for (var name in node.value) {\n\t            if (name !== 'rdf:value' && !isNamespaceDefinition(name)) {\n\t                attributes[getLocalName(name)] = node.value[name].value;\n\t            }\n\t        }\n\t\n\t        return attributes;\n\t    }\n\t\n\t    function parseRdfValue(node) {\n\t        return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n\t    }\n\t\n\t    function hasNestedStructureRdfDescription(node) {\n\t        return node.attributes['rdf:parseType'] === 'Resource' ||\n\t        node.value['rdf:Description'] !== undefined && node.value['rdf:Description'].value['rdf:value'] === undefined;\n\t    }\n\t\n\t    function parseNodeAsStructureRdfDescription(node, name) {\n\t        var tag = {\n\t            value: {},\n\t            attributes: {} };\n\t\n\t\n\t        if (node.value['rdf:Description'] !== undefined) {\n\t            _extends(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n\t            _extends(tag.attributes, parseNodeAttributes(node));\n\t            node = node.value['rdf:Description'];\n\t        }\n\t\n\t        _extends(tag.value, parseNodeChildrenAsTags(node.value));\n\t\n\t        tag.description = getDescription(tag.value, name);\n\t\n\t        return tag;\n\t    }\n\t\n\t    function isCompactStructure(node) {\n\t        return Object.keys(node.value).length === 0 &&\n\t        node.attributes['rdf:resource'] === undefined;\n\t    }\n\t\n\t    function parseNodeAsCompactStructure(node, name) {\n\t        var value = parseNodeAttributesAsTags(node.attributes);\n\t\n\t        return {\n\t            value: value,\n\t            attributes: {},\n\t            description: getDescription(value, name) };\n\t\n\t    }\n\t\n\t    function isArray(node) {\n\t        return getArrayChild(node.value) !== undefined;\n\t    }\n\t\n\t    function getArrayChild(value) {\n\t        return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n\t    }\n\t\n\t    function parseNodeAsArray(node, name) {\n\t        var items = getArrayChild(node.value).value['rdf:li'];\n\t        var attributes = parseNodeAttributes(node);\n\t        var value = [];\n\t\n\t        if (!Array.isArray(items)) {\n\t            items = [items];\n\t        }\n\t\n\t        items.forEach(function (item) {\n\t            value.push(parseArrayValue(item));\n\t        });\n\t\n\t        return {\n\t            value: value,\n\t            attributes: attributes,\n\t            description: getDescription(value, name) };\n\t\n\t    }\n\t\n\t    function parseArrayValue(item) {\n\t        if (hasNestedSimpleRdfDescription(item)) {\n\t            return parseNodeAsSimpleRdfDescription(item);\n\t        }\n\t\n\t        if (hasNestedArrayValue(item)) {\n\t            return parseNodeChildrenAsTags(item.value);\n\t        }\n\t\n\t        return {\n\t            value: item.value,\n\t            attributes: parseNodeAttributes(item),\n\t            description: getDescription(item.value) };\n\t\n\t    }\n\t\n\t    function hasNestedArrayValue(node) {\n\t        return node.attributes['rdf:parseType'] === 'Resource';\n\t    }\n\t\n\t    function parseNodeAsSimpleValue(node, name) {\n\t        var value = getURIValue(node) || parseXMPObject(node.value);\n\t\n\t        return {\n\t            value: value,\n\t            attributes: parseNodeAttributes(node),\n\t            description: getDescription(value, name) };\n\t\n\t    }\n\t\n\t    function getURIValue(node) {\n\t        return node.attributes && node.attributes['rdf:resource'];\n\t    }});\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {if (true) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else if (typeof exports !== \"undefined\") {factory(exports);} else {var mod = { exports: {} };factory(mod.exports);global.xmpTagNames = mod.exports;}})(this, function (exports) {'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = {\n\t        'tiff:Orientation': function tiffOrientation(value) {\n\t            if (value === '1') {\n\t                return 'Horizontal (normal)';\n\t            }\n\t            if (value === '2') {\n\t                return 'Mirror horizontal';\n\t            }\n\t            if (value === '3') {\n\t                return 'Rotate 180';\n\t            }\n\t            if (value === '4') {\n\t                return 'Mirror vertical';\n\t            }\n\t            if (value === '5') {\n\t                return 'Mirror horizontal and rotate 270 CW';\n\t            }\n\t            if (value === '6') {\n\t                return 'Rotate 90 CW';\n\t            }\n\t            if (value === '7') {\n\t                return 'Mirror horizontal and rotate 90 CW';\n\t            }\n\t            if (value === '8') {\n\t                return 'Rotate 270 CW';\n\t            }\n\t            return value;\n\t        } };});\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// exif-reader.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1ff4c4efa58b3ae8d54b","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2017  Mattias Wallander <mattias@wallander.eu>\n * Licensed under the GNU Lesser General Public License version 3 or later\n * See license text at http://www.gnu.org/licenses/lgpl.txt\n */\n\nimport ImageHeader from './image-header';\nimport Tags from './tags';\nimport IptcTags from './iptc-tags';\nimport XmpTags from './xmp-tags';\n\nexport function load(data, options = {expanded: false}) {\n    let dataView;\n\n    try {\n        dataView = new DataView(data);\n    } catch (error) {\n        console.warn('Warning: A full DataView implementation is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DataView polyfill, e.g. jdataview: npm install --save jdataview\\n  2. Require that at the top of your script: global.DataView = require(\\'jdataview\\');\\nSee an example of this in the ExifReader example directory.');  // eslint-disable-line no-console\n        return {};\n    }\n\n    return loadView(dataView, options);\n}\n\nexport function loadView(dataView, options = {expanded: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    ImageHeader.check(dataView);\n    const {tiffHeaderOffset, iptcDataOffset, xmpDataOffset, xmpFieldLength} = ImageHeader.parseAppMarkers(dataView);\n\n    if (hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset);\n        if (options.expanded) {\n            tags.exif = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset);\n        if (options.expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (hasXmpData(xmpDataOffset)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpDataOffset, xmpFieldLength);\n        if (options.expanded) {\n            tags.xmp = readTags;\n        } else {\n            tags = Object.assign({}, tags, readTags);\n        }\n    }\n    if (!foundMetaData) {\n        throw new Error('No Exif data');\n    }\n\n    return tags;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpDataOffset) {\n    return xmpDataOffset !== undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/exif-reader.js","import {getStringFromDataView} from './utils';\n\nconst MIN_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst TIFF_HEADER_OFFSET = 10;  // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18;  // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33;  // From start of APP1 marker.\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nexport default {\n    check,\n    parseAppMarkers\n};\n\nfunction check(dataView) {\n    if ((dataView.byteLength < MIN_DATA_BUFFER_LENGTH) || (dataView.getUint16(0, false) !== JPEG_ID)) {\n        throw new Error('Invalid image format');\n    }\n}\n\nfunction parseAppMarkers(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpDataOffset;\n    let xmpFieldLength;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (isApp1XMPMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            xmpDataOffset = appMarkerPosition + XMP_DATA_OFFSET;\n            xmpFieldLength = fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE);\n        } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpDataOffset,\n        xmpFieldLength\n    };\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp1XMPMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition, false) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition, false);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/image-header.js","export function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i, false));\n    }\n    return getAsciiValue(chars).join('');\n}\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","import ByteOrder from './byte-order';\nimport Types from './types';\nimport TagNames from './tag-names';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt\n};\n\nexport default {\n    read\n};\n\nfunction read(dataView, tiffHeaderOffset) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return Object.assign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\n    }\n\n    return tags;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = Types.getShortAt(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\n        if (tag !== undefined) {\n            tags[tag.name] = {'value': tag.value, 'description': tag.description};\n        }\n        offset += FIELD_SIZE;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            if (tagValue instanceof Array) {\n                tagDescription = tagValue.join(', ');\n            } else {\n                tagDescription = tagValue;\n            }\n        }\n        return {\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n    }\n\n    return {\n        name: `undefined-${tagCode}`,\n        value: tagValue,\n        description: tagValue\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\n    let value = [];\n\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (const character of string) {\n        if (character === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += character;\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tags.js","const LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN)\n        return LITTLE_ENDIAN;\n    else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/byte-order.js","import ByteOrder from './byte-order';\n\nconst typeSizes = {\n    1: 1,  // BYTE\n    2: 1,  // ASCII\n    3: 2,  // SHORT\n    4: 4,  // LONG\n    5: 8,  // RATIONAL\n    7: 1,  // UNDEFINED\n    9: 4,  // SLONG\n    10: 8  // SRATIONAL\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder) / getLongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return getSlongAt(dataView, offset, byteOrder) / getSlongAt(dataView, offset + 4, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/types.js","import TagNames0thIfd from './tag-names-0th-ifd';\nimport TagNamesExifIfd from './tag-names-exif-ifd';\nimport TagNamesGpsIfd from './tag-names-gps-ifd';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd';\n\nexport default {\n    '0th': TagNames0thIfd,\n    'exif': TagNamesExifIfd,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/tag-names.js","export default {\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x011a: 'XResolution',\n    0x011b: 'YResolution',\n    0x011c: 'PlanarConfiguration',\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: (value) => {\n            if (value === 2) {\n                return 'inches';\n            }\n            if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013e: 'WhitePoint',\n    0x013f: 'PrimaryChromaticities',\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: 'YCbCrCoefficients',\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: 'ReferenceBlackWhite',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x8769: 'Exif IFD Pointer',\n    0x8825: 'GPS Info IFD Pointer'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/tag-names-0th-ifd.js","import {getStringValue, getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x829a: 'ExposureTime',\n    0x829d: 'FNumber',\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Undefined';\n            } else if (value === 1) {\n                return 'Manual';\n            } else if (value === 2) {\n                return 'Normal program';\n            } else if (value === 3) {\n                return 'Aperture priority';\n            } else if (value === 4) {\n                return 'Shutter priority';\n            } else if (value === 5) {\n                return 'Creative program';\n            } else if (value === 6) {\n                return 'Action program';\n            } else if (value === 7) {\n                return 'Portrait mode';\n            } else if (value === 8) {\n                return 'Landscape mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': (value) => {\n            return value.map((character) => {\n                if (character === 0x31) {\n                    return 'Y';\n                } else if (character === 0x32) {\n                    return 'Cb';\n                } else if (character === 0x33) {\n                    return 'Cr';\n                } else if (character === 0x34) {\n                    return 'R';\n                } else if (character === 0x35) {\n                    return 'G';\n                } else if (character === 0x36) {\n                    return 'B';\n                }\n            }).join('');\n        }\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: 'ShutterSpeedValue',\n    0x9202: 'ApertureValue',\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: 'MaxApertureValue',\n    0x9206: 'SubjectDistance',\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Average';\n            } else if (value === 2) {\n                return 'CenterWeightedAverage';\n            } else if (value === 3) {\n                return 'Spot';\n            } else if (value === 4) {\n                return 'MultiSpot';\n            } else if (value === 5) {\n                return 'Pattern';\n            } else if (value === 6) {\n                return 'Partial';\n            } else if (value === 255) {\n                return 'Other';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9208: {\n        'name': 'LightSource',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Daylight';\n            } else if (value === 2) {\n                return 'Fluorescent';\n            } else if (value === 3) {\n                return 'Tungsten (incandescent light)';\n            } else if (value === 4) {\n                return 'Flash';\n            } else if (value === 9) {\n                return 'Fine weather';\n            } else if (value === 10) {\n                return 'Cloudy weather';\n            } else if (value === 11) {\n                return 'Shade';\n            } else if (value === 12) {\n                return 'Daylight fluorescent (D 5700 – 7100K)';\n            } else if (value === 13) {\n                return 'Day white fluorescent (N 4600 – 5400K)';\n            } else if (value === 14) {\n                return 'Cool white fluorescent (W 3900 – 4500K)';\n            } else if (value === 15) {\n                return 'White fluorescent (WW 3200 – 3700K)';\n            } else if (value === 17) {\n                return 'Standard light A';\n            } else if (value === 18) {\n                return 'Standard light B';\n            } else if (value === 19) {\n                return 'Standard light C';\n            } else if (value === 20) {\n                return 'D55';\n            } else if (value === 21) {\n                return 'D65';\n            } else if (value === 22) {\n                return 'D75';\n            } else if (value === 23) {\n                return 'D50';\n            } else if (value === 24) {\n                return 'ISO studio tungsten';\n            } else if (value === 255) {\n                return 'Other light source';\n            }\n            return 'Unknown';\n        }\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: 'FocalLength',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': (value) => {\n            if (value === 1) {\n                return 'sRGB';\n            } else if (value === 0xffff) {\n                return 'Uncalibrated';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': (value) => {\n            if (value === 2) {\n                return 'inches';\n            } else if (value === 3) {\n                return 'centimeters';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal process';\n            } else if (value === 1) {\n                return 'Custom process';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto exposure';\n            } else if (value === 1) {\n                return 'Manual exposure';\n            } else if (value === 2) {\n                return 'Auto bracket';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Auto white balance';\n            } else if (value === 1) {\n                return 'Manual white balance';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Digital zoom was not used';\n            }\n            return value;\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Standard';\n            } else if (value === 1) {\n                return 'Landscape';\n            } else if (value === 2) {\n                return 'Portrait';\n            } else if (value === 3) {\n                return 'Night scene';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Low saturation';\n            } else if (value === 2) {\n                return 'High saturation';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Normal';\n            } else if (value === 1) {\n                return 'Soft';\n            } else if (value === 2) {\n                return 'Hard';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/tag-names-exif-ifd.js","export function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tag-names-utils.js","import {getEncodedString} from './tag-names-utils';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return value + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (value) => {\n            return value.map((num) => {\n                if (`${num}`.length === 1) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return value[0] + value[1] / 60 + value[2] / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/tag-names-gps-ifd.js","export default {\n    0x0001: 'InteroperabilityIndex'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/tag-names-interoperability-ifd.js","import IptcTagNames from './iptc-tag-names';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset) {\n    try {\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock.size);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(blockSize) {\n    if (blockSize % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset) {\n    const tags = {};\n\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags);\n\n        if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n            tags[tag.name] = {\n                value: tag.value,\n                description: tag.description\n            };\n        } else {\n            if (!(tags[tag.name] instanceof Array)) {\n                tags[tag.name] = [{\n                    value: tags[tag.name].value,\n                    description: tags[tag.name].description\n                }];\n            }\n            tags[tag.name].push({\n                value: tag.value,\n                description: tag.description\n            });\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n    let tag;\n\n    if (IptcTagNames['iptc'][tagCode] !== undefined) {\n        let tagName, tagDescription;\n\n        if ((IptcTagNames['iptc'][tagCode]['name'] !== undefined)\n            && (IptcTagNames['iptc'][tagCode]['description'] !== undefined)) {\n            tagName = IptcTagNames['iptc'][tagCode]['name'];\n            tagDescription = IptcTagNames['iptc'][tagCode]['description'](tagValue, tags);\n        } else {\n            if (IptcTagNames['iptc'][tagCode]['name'] !== undefined) {\n                tagName = IptcTagNames['iptc'][tagCode]['name'];\n            } else {\n                tagName = IptcTagNames['iptc'][tagCode];\n            }\n            if (tagValue instanceof Array) {\n                tagDescription = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n            } else {\n                tagDescription = tagValue;\n            }\n        }\n        tag = {\n            name: tagName,\n            value: tagValue,\n            description: tagDescription\n        };\n        if (IptcTagNames['iptc'][tagCode]['repeatable'] !== undefined) {\n            tag['repeatable'] = true;\n        }\n    } else {\n        tag = {\n            name: `undefined-${tagCode}`,\n            value: tagValue,\n            description: tagValue\n        };\n    }\n\n    return {tag, tagSize};\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/iptc-tags.js","import {getStringValue} from './tag-names-utils';\n\nexport default {\n    'iptc': {\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '\\x1b%G') {\n                    return 'UTF-8';\n                } else if (string === '\\x1b%/G') {\n                    return 'UTF-8 Level 1';\n                } else if (string === '\\x1b%/H') {\n                    return 'UTF-8 Level 2';\n                } else if (string === '\\x1b%/I') {\n                    return 'UTF-8 Level 3';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02c8: {\n            'name': 'ObjectData Preview File Format',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                if (stringValue === '00') {\n                    return 'No ObjectData';\n                } else if (stringValue === '01') {\n                    return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                } else if (stringValue === '02') {\n                    return 'IPTC7901 Recommended Message Format';\n                } else if (stringValue === '03') {\n                    return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                } else if (stringValue === '04') {\n                    return 'Illustrator (Adobe Graphics data)';\n                } else if (stringValue === '05') {\n                    return 'AppleSingle (Apple Computer Inc)';\n                } else if (stringValue === '06') {\n                    return 'NAA 89-3 (ANPA 1312)';\n                } else if (stringValue === '07') {\n                    return 'MacBinary II';\n                } else if (stringValue === '08') {\n                    return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                } else if (stringValue === '09') {\n                    return 'United Press International ANPA 1312 variant';\n                } else if (stringValue === '10') {\n                    return 'United Press International Down-Load Message';\n                } else if (stringValue === '11') {\n                    return 'JPEG File Interchange (JFIF)';\n                } else if (stringValue === '12') {\n                    return 'Photo-CD Image-Pac (Eastman Kodak)';\n                } else if (stringValue === '13') {\n                    return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                } else if (stringValue === '14') {\n                    return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                } else if (stringValue === '15') {\n                    return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                } else if (stringValue === '16') {\n                    return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                } else if (stringValue === '17') {\n                    return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                } else if (stringValue === '18') {\n                    return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                } else if (stringValue === '19') {\n                    return 'RIFF Wave (Microsoft Corporation)';\n                } else if (stringValue === '20') {\n                    return 'Freehand (Macromedia/Aldus)';\n                } else if (stringValue === '21') {\n                    return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                } else if (stringValue === '22') {\n                    return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                } else if (stringValue === '23') {\n                    return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                } else if (stringValue === '24') {\n                    return 'Portable Document File (*.PDF) Adobe';\n                } else if (stringValue === '25') {\n                    return 'News Industry Text Format (NITF)';\n                } else if (stringValue === '26') {\n                    return 'Tape Archive (*.TAR)';\n                } else if (stringValue === '27') {\n                    return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                } else if (stringValue === '28') {\n                    return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                } else if (stringValue === '29') {\n                    return 'Corel Draw [*.CDR]';\n                }\n                return 'Unknown format ' + stringValue;\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data'\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/iptc-tag-names.js","import {getStringFromDataView} from './utils';\nimport XmpTagNames from './xmp-tag-names';\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, metadataSize) {\n    try {\n        const doc = getDocument(dataView, dataOffset, metadataSize);\n        const rdf = getRDF(doc);\n\n        return parseXMPObject(convertToObject(rdf, true));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getDocument(dataView, dataOffset, metadataSize) {\n    if (typeof DOMParser === 'undefined') {\n        console.warn('Warning: DOMParser is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DOM parser, e.g. xmldom: npm install --save xmldom\\n  2. Require that at the top of your script: global.DOMParser = require(\\'xmldom\\').DOMParser;\\nSee an example of this in the ExifReader example directory.');  // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const domParser = new DOMParser();\n    const xmlSource = getStringFromDataView(dataView, dataOffset, metadataSize);\n    const doc = domParser.parseFromString(xmlSource, 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error();\n    }\n\n    return doc;\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = element.attributes[i].value;\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            Object.assign(tags, parseNodeAttributesAsTags(node.attributes));\n            Object.assign(tags, parseNodeChildrenAsTags(node.value));\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        return getDescriptionOfArray(value);\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${value[key].value}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    } else if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    } else if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    } else if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    Object.assign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        Object.assign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        Object.assign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    Object.assign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n\n    if (hasNestedArrayValue(item)) {\n        return parseNodeChildrenAsTags(item.value);\n    }\n\n    return {\n        value: item.value,\n        attributes: parseNodeAttributes(item),\n        description: getDescription(item.value)\n    };\n}\n\nfunction hasNestedArrayValue(node) {\n    return node.attributes['rdf:parseType'] === 'Resource';\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/xmp-tags.js","export default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/xmp-tag-names.js"],"sourceRoot":""}